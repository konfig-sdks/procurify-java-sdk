/*
 * Procurify API Documentation
 *  # Disclaimer  - Procurify’s API is evolving and is subject to change at any time. Additionally, aspects of the API are undocumented, including certain methods, events, and properties. Given that both documented and undocumented aspects of the Procurify API may change at any time, the client relies on the API at their own risk. - Client (and/or client’s representative) is responsible for building, testing, and maintaining any API connection between Procurify and any other tool.  Procurify’s responsibility strictly involves providing support on clarifications in regards to the issued API document. - Procurify’s API is offered on an “as is” and “as available” basis, without warranties of any kind. By accepting this agreement, you agree that you have read the current API documentation, and accept the API functionality in its current state including current limitations. For questions and clarification around the documentation, please contact support@procurify.com. - In accordance with Section 2.(b) of our Subscription Services Agreement, Procurify reserves the right to deny access to our API at any time. If your API requests are too large and time out, contact us immediately to avoid possible suspension of access. - You may not attempt to reverse engineer or otherwise derive source code, trade secrets, or know-how in the Procurify API or portion thereof. You may not use the Procurify API to replicate or compete with core products or services offered by Procurify. 
 *
 * The version of the OpenAPI document: 
 * 
 *
 * NOTE: This class is auto generated by Konfig (https://konfigthis.com).
 * Do not edit the class manually.
 */


package com.konfigthis.client.model;

import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import com.konfigthis.client.model.Attachment;
import com.konfigthis.client.model.CostAllocationRead;
import com.konfigthis.client.model.CreditCardItemReadNullable;
import com.konfigthis.client.model.Currency;
import com.konfigthis.client.model.CustomFieldValueRead;
import com.konfigthis.client.model.ExpenseReadNullable;
import com.konfigthis.client.model.ExpenseReportDocs;
import com.konfigthis.client.model.OrderItemRead;
import com.konfigthis.client.model.PODocs;
import com.konfigthis.client.model.UnitCostDiffLogDocsNullable;
import com.konfigthis.client.model.VendorRead;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.math.BigDecimal;
import java.time.OffsetDateTime;
import java.util.ArrayList;
import java.util.List;
import org.openapitools.jackson.nullable.JsonNullable;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;


/**
 * Model tests for ItemReadSerializerV2
 */
public class ItemReadSerializerV2Test {
    private final ItemReadSerializerV2 model = new ItemReadSerializerV2();

    /**
     * Model tests for ItemReadSerializerV2
     */
    @Test
    public void testItemReadSerializerV2() {
        // TODO: test ItemReadSerializerV2
    }

    /**
     * Test the property 'description'
     */
    @Test
    public void descriptionTest() {
        // TODO: test description
    }

    /**
     * Test the property 'id'
     */
    @Test
    public void idTest() {
        // TODO: test id
    }

    /**
     * Test the property 'orderitem'
     */
    @Test
    public void orderitemTest() {
        // TODO: test orderitem
    }

    /**
     * Test the property 'expense'
     */
    @Test
    public void expenseTest() {
        // TODO: test expense
    }

    /**
     * Test the property 'bill'
     */
    @Test
    public void billTest() {
        // TODO: test bill
    }

    /**
     * Test the property 'vendor'
     */
    @Test
    public void vendorTest() {
        // TODO: test vendor
    }

    /**
     * Test the property 'sku'
     */
    @Test
    public void skuTest() {
        // TODO: test sku
    }

    /**
     * Test the property 'po'
     */
    @Test
    public void poTest() {
        // TODO: test po
    }

    /**
     * Test the property 'unit'
     */
    @Test
    public void unitTest() {
        // TODO: test unit
    }

    /**
     * Test the property 'quantity'
     */
    @Test
    public void quantityTest() {
        // TODO: test quantity
    }

    /**
     * Test the property 'currency'
     */
    @Test
    public void currencyTest() {
        // TODO: test currency
    }

    /**
     * Test the property 'totalCost'
     */
    @Test
    public void totalCostTest() {
        // TODO: test totalCost
    }

    /**
     * Test the property 'receivedOn'
     */
    @Test
    public void receivedOnTest() {
        // TODO: test receivedOn
    }

    /**
     * Test the property 'packingSlips'
     */
    @Test
    public void packingSlipsTest() {
        // TODO: test packingSlips
    }

    /**
     * Test the property 'costAllocations'
     */
    @Test
    public void costAllocationsTest() {
        // TODO: test costAllocations
    }

    /**
     * Test the property 'archived'
     */
    @Test
    public void archivedTest() {
        // TODO: test archived
    }

    /**
     * Test the property 'expenseReport'
     */
    @Test
    public void expenseReportTest() {
        // TODO: test expenseReport
    }

    /**
     * Test the property 'sameUnitCost'
     */
    @Test
    public void sameUnitCostTest() {
        // TODO: test sameUnitCost
    }

    /**
     * Test the property 'creditcardItem'
     */
    @Test
    public void creditcardItemTest() {
        // TODO: test creditcardItem
    }

    /**
     * Test the property 'isEdited'
     */
    @Test
    public void isEditedTest() {
        // TODO: test isEdited
    }

    /**
     * Test the property 'unitCostDiffLog'
     */
    @Test
    public void unitCostDiffLogTest() {
        // TODO: test unitCostDiffLog
    }

    /**
     * Test the property 'taxName'
     */
    @Test
    public void taxNameTest() {
        // TODO: test taxName
    }

    /**
     * Test the property 'taxPercentage'
     */
    @Test
    public void taxPercentageTest() {
        // TODO: test taxPercentage
    }

    /**
     * Test the property 'taxAmount'
     */
    @Test
    public void taxAmountTest() {
        // TODO: test taxAmount
    }

    /**
     * Test the property 'taxIsInclusive'
     */
    @Test
    public void taxIsInclusiveTest() {
        // TODO: test taxIsInclusive
    }

    /**
     * Test the property 'tax'
     */
    @Test
    public void taxTest() {
        // TODO: test tax
    }

    /**
     * Test the property 'totalCostWithTax'
     */
    @Test
    public void totalCostWithTaxTest() {
        // TODO: test totalCostWithTax
    }

    /**
     * Test the property 'shippingAmount'
     */
    @Test
    public void shippingAmountTest() {
        // TODO: test shippingAmount
    }

    /**
     * Test the property 'unitCost'
     */
    @Test
    public void unitCostTest() {
        // TODO: test unitCost
    }

    /**
     * Test the property 'customFields'
     */
    @Test
    public void customFieldsTest() {
        // TODO: test customFields
    }

    /**
     * Test the property 'itemType'
     */
    @Test
    public void itemTypeTest() {
        // TODO: test itemType
    }

    /**
     * Test the property 'type'
     */
    @Test
    public void typeTest() {
        // TODO: test type
    }

    /**
     * Test the property 'billByCost'
     */
    @Test
    public void billByCostTest() {
        // TODO: test billByCost
    }

}
