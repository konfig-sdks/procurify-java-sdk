/*
 * Procurify API Documentation
 *  # Disclaimer  - Procurify’s API is evolving and is subject to change at any time. Additionally, aspects of the API are undocumented, including certain methods, events, and properties. Given that both documented and undocumented aspects of the Procurify API may change at any time, the client relies on the API at their own risk. - Client (and/or client’s representative) is responsible for building, testing, and maintaining any API connection between Procurify and any other tool.  Procurify’s responsibility strictly involves providing support on clarifications in regards to the issued API document. - Procurify’s API is offered on an “as is” and “as available” basis, without warranties of any kind. By accepting this agreement, you agree that you have read the current API documentation, and accept the API functionality in its current state including current limitations. For questions and clarification around the documentation, please contact support@procurify.com. - In accordance with Section 2.(b) of our Subscription Services Agreement, Procurify reserves the right to deny access to our API at any time. If your API requests are too large and time out, contact us immediately to avoid possible suspension of access. - You may not attempt to reverse engineer or otherwise derive source code, trade secrets, or know-how in the Procurify API or portion thereof. You may not use the Procurify API to replicate or compete with core products or services offered by Procurify. 
 *
 * The version of the OpenAPI document: 
 * 
 *
 * NOTE: This class is auto generated by Konfig (https://konfigthis.com).
 * Do not edit the class manually.
 */


package com.konfigthis.client.model;

import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import com.konfigthis.client.model.AddressDocsNullable;
import com.konfigthis.client.model.Branch;
import com.konfigthis.client.model.CurrencySummary;
import com.konfigthis.client.model.DepartmentSummary;
import com.konfigthis.client.model.MasterLogger;
import com.konfigthis.client.model.OrderStatusEnum;
import com.konfigthis.client.model.PunchOutReadDocsNullable;
import com.konfigthis.client.model.UserSummary;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.math.BigDecimal;
import java.time.OffsetDateTime;
import java.util.ArrayList;
import java.util.List;
import java.util.UUID;
import org.openapitools.jackson.nullable.JsonNullable;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;


/**
 * Model tests for OrderRead
 */
public class OrderReadTest {
    private final OrderRead model = new OrderRead();

    /**
     * Model tests for OrderRead
     */
    @Test
    public void testOrderRead() {
        // TODO: test OrderRead
    }

    /**
     * Test the property 'description'
     */
    @Test
    public void descriptionTest() {
        // TODO: test description
    }

    /**
     * Test the property 'num'
     */
    @Test
    public void numTest() {
        // TODO: test num
    }

    /**
     * Test the property 'uuid'
     */
    @Test
    public void uuidTest() {
        // TODO: test uuid
    }

    /**
     * Test the property 'branch'
     */
    @Test
    public void branchTest() {
        // TODO: test branch
    }

    /**
     * Test the property 'user'
     */
    @Test
    public void userTest() {
        // TODO: test user
    }

    /**
     * Test the property 'department'
     */
    @Test
    public void departmentTest() {
        // TODO: test department
    }

    /**
     * Test the property 'currency'
     */
    @Test
    public void currencyTest() {
        // TODO: test currency
    }

    /**
     * Test the property 'totalCostInBaseCurrency'
     */
    @Test
    public void totalCostInBaseCurrencyTest() {
        // TODO: test totalCostInBaseCurrency
    }

    /**
     * Test the property 'logs'
     */
    @Test
    public void logsTest() {
        // TODO: test logs
    }

    /**
     * Test the property 'itemCount'
     */
    @Test
    public void itemCountTest() {
        // TODO: test itemCount
    }

    /**
     * Test the property 'ipAddress'
     */
    @Test
    public void ipAddressTest() {
        // TODO: test ipAddress
    }

    /**
     * Test the property 'date'
     */
    @Test
    public void dateTest() {
        // TODO: test date
    }

    /**
     * Test the property 'dateRequired'
     */
    @Test
    public void dateRequiredTest() {
        // TODO: test dateRequired
    }

    /**
     * Test the property 'dateModified'
     */
    @Test
    public void dateModifiedTest() {
        // TODO: test dateModified
    }

    /**
     * Test the property 'lineCount'
     */
    @Test
    public void lineCountTest() {
        // TODO: test lineCount
    }

    /**
     * Test the property 'purchasedCount'
     */
    @Test
    public void purchasedCountTest() {
        // TODO: test purchasedCount
    }

    /**
     * Test the property 'totalPrice'
     */
    @Test
    public void totalPriceTest() {
        // TODO: test totalPrice
    }

    /**
     * Test the property 'status'
     */
    @Test
    public void statusTest() {
        // TODO: test status
    }

    /**
     * Test the property 'nextApprover'
     */
    @Test
    public void nextApproverTest() {
        // TODO: test nextApprover
    }

    /**
     * Test the property 'approvalDelegatee'
     */
    @Test
    public void approvalDelegateeTest() {
        // TODO: test approvalDelegatee
    }

    /**
     * Test the property 'punchoutGroup'
     */
    @Test
    public void punchoutGroupTest() {
        // TODO: test punchoutGroup
    }

    /**
     * Test the property 'punchoutShippingAddress'
     */
    @Test
    public void punchoutShippingAddressTest() {
        // TODO: test punchoutShippingAddress
    }

    /**
     * Test the property 'punchoutItemsRejected'
     */
    @Test
    public void punchoutItemsRejectedTest() {
        // TODO: test punchoutItemsRejected
    }

    /**
     * Test the property 'punchoutSupplierName'
     */
    @Test
    public void punchoutSupplierNameTest() {
        // TODO: test punchoutSupplierName
    }

    /**
     * Test the property 'punchoutSupplierIcon'
     */
    @Test
    public void punchoutSupplierIconTest() {
        // TODO: test punchoutSupplierIcon
    }

    /**
     * Test the property 'punchoutVendorReference'
     */
    @Test
    public void punchoutVendorReferenceTest() {
        // TODO: test punchoutVendorReference
    }

    /**
     * Test the property 'hasBlanketOrderItems'
     */
    @Test
    public void hasBlanketOrderItemsTest() {
        // TODO: test hasBlanketOrderItems
    }

}
