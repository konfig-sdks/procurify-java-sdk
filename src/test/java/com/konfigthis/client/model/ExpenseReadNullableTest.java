/*
 * Procurify API Documentation
 *  # Disclaimer  - Procurify’s API is evolving and is subject to change at any time. Additionally, aspects of the API are undocumented, including certain methods, events, and properties. Given that both documented and undocumented aspects of the Procurify API may change at any time, the client relies on the API at their own risk. - Client (and/or client’s representative) is responsible for building, testing, and maintaining any API connection between Procurify and any other tool.  Procurify’s responsibility strictly involves providing support on clarifications in regards to the issued API document. - Procurify’s API is offered on an “as is” and “as available” basis, without warranties of any kind. By accepting this agreement, you agree that you have read the current API documentation, and accept the API functionality in its current state including current limitations. For questions and clarification around the documentation, please contact support@procurify.com. - In accordance with Section 2.(b) of our Subscription Services Agreement, Procurify reserves the right to deny access to our API at any time. If your API requests are too large and time out, contact us immediately to avoid possible suspension of access. - You may not attempt to reverse engineer or otherwise derive source code, trade secrets, or know-how in the Procurify API or portion thereof. You may not use the Procurify API to replicate or compete with core products or services offered by Procurify. 
 *
 * The version of the OpenAPI document: 
 * 
 *
 * NOTE: This class is auto generated by Konfig (https://konfigthis.com).
 * Do not edit the class manually.
 */


package com.konfigthis.client.model;

import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import com.konfigthis.client.model.Account;
import com.konfigthis.client.model.CurrencySummary;
import com.konfigthis.client.model.ExpenseTypeEnum;
import com.konfigthis.client.model.PaymentMethodTypeEnum;
import com.konfigthis.client.model.SimpleExpenseReport;
import com.konfigthis.client.model.SimpleUserSummary;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.math.BigDecimal;
import java.time.OffsetDateTime;
import java.util.HashMap;
import java.util.Map;
import org.openapitools.jackson.nullable.JsonNullable;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;


/**
 * Model tests for ExpenseReadNullable
 */
public class ExpenseReadNullableTest {
    private final ExpenseReadNullable model = new ExpenseReadNullable();

    /**
     * Model tests for ExpenseReadNullable
     */
    @Test
    public void testExpenseReadNullable() {
        // TODO: test ExpenseReadNullable
    }

    /**
     * Test the property 'id'
     */
    @Test
    public void idTest() {
        // TODO: test id
    }

    /**
     * Test the property 'account'
     */
    @Test
    public void accountTest() {
        // TODO: test account
    }

    /**
     * Test the property 'localCurrency'
     */
    @Test
    public void localCurrencyTest() {
        // TODO: test localCurrency
    }

    /**
     * Test the property 'expenseTypeFields'
     */
    @Test
    public void expenseTypeFieldsTest() {
        // TODO: test expenseTypeFields
    }

    /**
     * Test the property 'expenseReport'
     */
    @Test
    public void expenseReportTest() {
        // TODO: test expenseReport
    }

    /**
     * Test the property 'requester'
     */
    @Test
    public void requesterTest() {
        // TODO: test requester
    }

    /**
     * Test the property 'approver'
     */
    @Test
    public void approverTest() {
        // TODO: test approver
    }

    /**
     * Test the property 'approvedDate'
     */
    @Test
    public void approvedDateTest() {
        // TODO: test approvedDate
    }

    /**
     * Test the property 'isActive'
     */
    @Test
    public void isActiveTest() {
        // TODO: test isActive
    }

    /**
     * Test the property 'createdAt'
     */
    @Test
    public void createdAtTest() {
        // TODO: test createdAt
    }

    /**
     * Test the property 'updatedAt'
     */
    @Test
    public void updatedAtTest() {
        // TODO: test updatedAt
    }

    /**
     * Test the property 'merchant'
     */
    @Test
    public void merchantTest() {
        // TODO: test merchant
    }

    /**
     * Test the property 'transDate'
     */
    @Test
    public void transDateTest() {
        // TODO: test transDate
    }

    /**
     * Test the property 'reimburse'
     */
    @Test
    public void reimburseTest() {
        // TODO: test reimburse
    }

    /**
     * Test the property 'expenseType'
     */
    @Test
    public void expenseTypeTest() {
        // TODO: test expenseType
    }

    /**
     * Test the property 'paymentType'
     */
    @Test
    public void paymentTypeTest() {
        // TODO: test paymentType
    }

    /**
     * Test the property 'amount'
     */
    @Test
    public void amountTest() {
        // TODO: test amount
    }

    /**
     * Test the property 'currencyRateFinal'
     */
    @Test
    public void currencyRateFinalTest() {
        // TODO: test currencyRateFinal
    }

    /**
     * Test the property 'exchangeRateOverride'
     */
    @Test
    public void exchangeRateOverrideTest() {
        // TODO: test exchangeRateOverride
    }

    /**
     * Test the property 'taxName'
     */
    @Test
    public void taxNameTest() {
        // TODO: test taxName
    }

    /**
     * Test the property 'taxPercentage'
     */
    @Test
    public void taxPercentageTest() {
        // TODO: test taxPercentage
    }

    /**
     * Test the property 'taxAmount'
     */
    @Test
    public void taxAmountTest() {
        // TODO: test taxAmount
    }

    /**
     * Test the property 'taxIsInclusive'
     */
    @Test
    public void taxIsInclusiveTest() {
        // TODO: test taxIsInclusive
    }

    /**
     * Test the property 'notes'
     */
    @Test
    public void notesTest() {
        // TODO: test notes
    }

    /**
     * Test the property 'attachment'
     */
    @Test
    public void attachmentTest() {
        // TODO: test attachment
    }

    /**
     * Test the property 'active'
     */
    @Test
    public void activeTest() {
        // TODO: test active
    }

    /**
     * Test the property 'lastChangedBy'
     */
    @Test
    public void lastChangedByTest() {
        // TODO: test lastChangedBy
    }

    /**
     * Test the property 'creditcard'
     */
    @Test
    public void creditcardTest() {
        // TODO: test creditcard
    }

    /**
     * Test the property 'tax'
     */
    @Test
    public void taxTest() {
        // TODO: test tax
    }

}
