/*
 * Procurify API Documentation
 *  # Disclaimer  - Procurify’s API is evolving and is subject to change at any time. Additionally, aspects of the API are undocumented, including certain methods, events, and properties. Given that both documented and undocumented aspects of the Procurify API may change at any time, the client relies on the API at their own risk. - Client (and/or client’s representative) is responsible for building, testing, and maintaining any API connection between Procurify and any other tool.  Procurify’s responsibility strictly involves providing support on clarifications in regards to the issued API document. - Procurify’s API is offered on an “as is” and “as available” basis, without warranties of any kind. By accepting this agreement, you agree that you have read the current API documentation, and accept the API functionality in its current state including current limitations. For questions and clarification around the documentation, please contact support@procurify.com. - In accordance with Section 2.(b) of our Subscription Services Agreement, Procurify reserves the right to deny access to our API at any time. If your API requests are too large and time out, contact us immediately to avoid possible suspension of access. - You may not attempt to reverse engineer or otherwise derive source code, trade secrets, or know-how in the Procurify API or portion thereof. You may not use the Procurify API to replicate or compete with core products or services offered by Procurify. 
 *
 * The version of the OpenAPI document: 
 * 
 *
 * NOTE: This class is auto generated by Konfig (https://konfigthis.com).
 * Do not edit the class manually.
 */


package com.konfigthis.client.model;

import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import com.konfigthis.client.model.LanguageEnum;
import com.konfigthis.client.model.SetupStageEnum;
import com.konfigthis.client.model.TimezoneEnum;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.net.URI;
import java.time.OffsetDateTime;
import org.openapitools.jackson.nullable.JsonNullable;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;


/**
 * Model tests for UnoptimizedBranchRead
 */
public class UnoptimizedBranchReadTest {
    private final UnoptimizedBranchRead model = new UnoptimizedBranchRead();

    /**
     * Model tests for UnoptimizedBranchRead
     */
    @Test
    public void testUnoptimizedBranchRead() {
        // TODO: test UnoptimizedBranchRead
    }

    /**
     * Test the property 'id'
     */
    @Test
    public void idTest() {
        // TODO: test id
    }

    /**
     * Test the property 'externalId'
     */
    @Test
    public void externalIdTest() {
        // TODO: test externalId
    }

    /**
     * Test the property 'name'
     */
    @Test
    public void nameTest() {
        // TODO: test name
    }

    /**
     * Test the property 'url'
     */
    @Test
    public void urlTest() {
        // TODO: test url
    }

    /**
     * Test the property 'logo'
     */
    @Test
    public void logoTest() {
        // TODO: test logo
    }

    /**
     * Test the property 'language'
     */
    @Test
    public void languageTest() {
        // TODO: test language
    }

    /**
     * Test the property 'multipleLocations'
     */
    @Test
    public void multipleLocationsTest() {
        // TODO: test multipleLocations
    }

    /**
     * Test the property 'locationTimezone'
     */
    @Test
    public void locationTimezoneTest() {
        // TODO: test locationTimezone
    }

    /**
     * Test the property 'userLimit'
     */
    @Test
    public void userLimitTest() {
        // TODO: test userLimit
    }

    /**
     * Test the property 'budgetOvertureToggle'
     */
    @Test
    public void budgetOvertureToggleTest() {
        // TODO: test budgetOvertureToggle
    }

    /**
     * Test the property 'purchaseFiltering'
     */
    @Test
    public void purchaseFilteringTest() {
        // TODO: test purchaseFiltering
    }

    /**
     * Test the property 'catalogPermission'
     */
    @Test
    public void catalogPermissionTest() {
        // TODO: test catalogPermission
    }

    /**
     * Test the property 'separateExpenseApproval'
     */
    @Test
    public void separateExpenseApprovalTest() {
        // TODO: test separateExpenseApproval
    }

    /**
     * Test the property 'standaloneTravelApproval'
     */
    @Test
    public void standaloneTravelApprovalTest() {
        // TODO: test standaloneTravelApproval
    }

    /**
     * Test the property 'phoneOne'
     */
    @Test
    public void phoneOneTest() {
        // TODO: test phoneOne
    }

    /**
     * Test the property 'phoneTwo'
     */
    @Test
    public void phoneTwoTest() {
        // TODO: test phoneTwo
    }

    /**
     * Test the property 'fax'
     */
    @Test
    public void faxTest() {
        // TODO: test fax
    }

    /**
     * Test the property 'email'
     */
    @Test
    public void emailTest() {
        // TODO: test email
    }

    /**
     * Test the property 'fiscalYearEndDay'
     */
    @Test
    public void fiscalYearEndDayTest() {
        // TODO: test fiscalYearEndDay
    }

    /**
     * Test the property 'fiscalYearEndMonth'
     */
    @Test
    public void fiscalYearEndMonthTest() {
        // TODO: test fiscalYearEndMonth
    }

    /**
     * Test the property 'timezone'
     */
    @Test
    public void timezoneTest() {
        // TODO: test timezone
    }

    /**
     * Test the property 'beginDate'
     */
    @Test
    public void beginDateTest() {
        // TODO: test beginDate
    }

    /**
     * Test the property 'ported'
     */
    @Test
    public void portedTest() {
        // TODO: test ported
    }

    /**
     * Test the property 'portDate'
     */
    @Test
    public void portDateTest() {
        // TODO: test portDate
    }

    /**
     * Test the property 'active'
     */
    @Test
    public void activeTest() {
        // TODO: test active
    }

    /**
     * Test the property 'fieldsCache'
     */
    @Test
    public void fieldsCacheTest() {
        // TODO: test fieldsCache
    }

    /**
     * Test the property 'activated'
     */
    @Test
    public void activatedTest() {
        // TODO: test activated
    }

    /**
     * Test the property 'setupStage'
     */
    @Test
    public void setupStageTest() {
        // TODO: test setupStage
    }

    /**
     * Test the property 'localCurrency'
     */
    @Test
    public void localCurrencyTest() {
        // TODO: test localCurrency
    }

    /**
     * Test the property 'contactPerson'
     */
    @Test
    public void contactPersonTest() {
        // TODO: test contactPerson
    }

    /**
     * Test the property 'buyerAddress'
     */
    @Test
    public void buyerAddressTest() {
        // TODO: test buyerAddress
    }

    /**
     * Test the property 'shippingAddress'
     */
    @Test
    public void shippingAddressTest() {
        // TODO: test shippingAddress
    }

}
