/*
 * Procurify API Documentation
 *  # Disclaimer  - Procurify’s API is evolving and is subject to change at any time. Additionally, aspects of the API are undocumented, including certain methods, events, and properties. Given that both documented and undocumented aspects of the Procurify API may change at any time, the client relies on the API at their own risk. - Client (and/or client’s representative) is responsible for building, testing, and maintaining any API connection between Procurify and any other tool.  Procurify’s responsibility strictly involves providing support on clarifications in regards to the issued API document. - Procurify’s API is offered on an “as is” and “as available” basis, without warranties of any kind. By accepting this agreement, you agree that you have read the current API documentation, and accept the API functionality in its current state including current limitations. For questions and clarification around the documentation, please contact support@procurify.com. - In accordance with Section 2.(b) of our Subscription Services Agreement, Procurify reserves the right to deny access to our API at any time. If your API requests are too large and time out, contact us immediately to avoid possible suspension of access. - You may not attempt to reverse engineer or otherwise derive source code, trade secrets, or know-how in the Procurify API or portion thereof. You may not use the Procurify API to replicate or compete with core products or services offered by Procurify. 
 *
 * The version of the OpenAPI document: 
 * 
 *
 * NOTE: This class is auto generated by Konfig (https://konfigthis.com).
 * Do not edit the class manually.
 */


package com.konfigthis.client.model;

import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import com.konfigthis.client.model.AccountRead;
import com.konfigthis.client.model.Adjustment;
import com.konfigthis.client.model.AllocationRead;
import com.konfigthis.client.model.Attachment;
import com.konfigthis.client.model.BlanketOrderItemRead;
import com.konfigthis.client.model.CatalogItemReadNullable;
import com.konfigthis.client.model.Comment;
import com.konfigthis.client.model.CostDetailsNullable;
import com.konfigthis.client.model.CurrencySummary;
import com.konfigthis.client.model.CustomFieldValueRead;
import com.konfigthis.client.model.FlagRead;
import com.konfigthis.client.model.MasterLogger;
import com.konfigthis.client.model.OrderItemAttachment;
import com.konfigthis.client.model.RecurringOrderItemNullable;
import com.konfigthis.client.model.SimpleUserSummary;
import com.konfigthis.client.model.UserSummary;
import com.konfigthis.client.model.VendorRead;
import com.konfigthis.client.model.ZeroOneEnum;
import com.konfigthis.client.model.ZeroOneTwoEnum;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.math.BigDecimal;
import java.time.OffsetDateTime;
import java.util.ArrayList;
import java.util.List;
import java.util.UUID;
import org.openapitools.jackson.nullable.JsonNullable;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;


/**
 * Model tests for PurchaseOrderLineItemRead
 */
public class PurchaseOrderLineItemReadTest {
    private final PurchaseOrderLineItemRead model = new PurchaseOrderLineItemRead();

    /**
     * Model tests for PurchaseOrderLineItemRead
     */
    @Test
    public void testPurchaseOrderLineItemRead() {
        // TODO: test PurchaseOrderLineItemRead
    }

    /**
     * Test the property 'PO'
     */
    @Test
    public void POTest() {
        // TODO: test PO
    }

    /**
     * Test the property 'poLineNum'
     */
    @Test
    public void poLineNumTest() {
        // TODO: test poLineNum
    }

    /**
     * Test the property 'account'
     */
    @Test
    public void accountTest() {
        // TODO: test account
    }

    /**
     * Test the property 'accountCode'
     */
    @Test
    public void accountCodeTest() {
        // TODO: test accountCode
    }

    /**
     * Test the property 'active'
     */
    @Test
    public void activeTest() {
        // TODO: test active
    }

    /**
     * Test the property 'approvedCurrencyRate'
     */
    @Test
    public void approvedCurrencyRateTest() {
        // TODO: test approvedCurrencyRate
    }

    /**
     * Test the property 'approvedDatetime'
     */
    @Test
    public void approvedDatetimeTest() {
        // TODO: test approvedDatetime
    }

    /**
     * Test the property 'approvedPrice'
     */
    @Test
    public void approvedPriceTest() {
        // TODO: test approvedPrice
    }

    /**
     * Test the property 'approvedQuantity'
     */
    @Test
    public void approvedQuantityTest() {
        // TODO: test approvedQuantity
    }

    /**
     * Test the property 'approvedShippingAmount'
     */
    @Test
    public void approvedShippingAmountTest() {
        // TODO: test approvedShippingAmount
    }

    /**
     * Test the property 'approvedTaxAmount'
     */
    @Test
    public void approvedTaxAmountTest() {
        // TODO: test approvedTaxAmount
    }

    /**
     * Test the property 'attachments'
     */
    @Test
    public void attachmentsTest() {
        // TODO: test attachments
    }

    /**
     * Test the property 'catalogItem'
     */
    @Test
    public void catalogItemTest() {
        // TODO: test catalogItem
    }

    /**
     * Test the property 'createdAt'
     */
    @Test
    public void createdAtTest() {
        // TODO: test createdAt
    }

    /**
     * Test the property 'currency'
     */
    @Test
    public void currencyTest() {
        // TODO: test currency
    }

    /**
     * Test the property 'dateInvoiced'
     */
    @Test
    public void dateInvoicedTest() {
        // TODO: test dateInvoiced
    }

    /**
     * Test the property 'externalId'
     */
    @Test
    public void externalIdTest() {
        // TODO: test externalId
    }

    /**
     * Test the property 'hot'
     */
    @Test
    public void hotTest() {
        // TODO: test hot
    }

    /**
     * Test the property 'id'
     */
    @Test
    public void idTest() {
        // TODO: test id
    }

    /**
     * Test the property 'inventoryItem'
     */
    @Test
    public void inventoryItemTest() {
        // TODO: test inventoryItem
    }

    /**
     * Test the property 'isActive'
     */
    @Test
    public void isActiveTest() {
        // TODO: test isActive
    }

    /**
     * Test the property 'itemAttachments'
     */
    @Test
    public void itemAttachmentsTest() {
        // TODO: test itemAttachments
    }

    /**
     * Test the property 'lastChangedBy'
     */
    @Test
    public void lastChangedByTest() {
        // TODO: test lastChangedBy
    }

    /**
     * Test the property 'lastModified'
     */
    @Test
    public void lastModifiedTest() {
        // TODO: test lastModified
    }

    /**
     * Test the property 'lineComment'
     */
    @Test
    public void lineCommentTest() {
        // TODO: test lineComment
    }

    /**
     * Test the property 'name'
     */
    @Test
    public void nameTest() {
        // TODO: test name
    }

    /**
     * Test the property 'num'
     */
    @Test
    public void numTest() {
        // TODO: test num
    }

    /**
     * Test the property 'orderNum'
     */
    @Test
    public void orderNumTest() {
        // TODO: test orderNum
    }

    /**
     * Test the property 'poNote'
     */
    @Test
    public void poNoteTest() {
        // TODO: test poNote
    }

    /**
     * Test the property 'poVersion'
     */
    @Test
    public void poVersionTest() {
        // TODO: test poVersion
    }

    /**
     * Test the property 'prefVendor'
     */
    @Test
    public void prefVendorTest() {
        // TODO: test prefVendor
    }

    /**
     * Test the property 'price'
     */
    @Test
    public void priceTest() {
        // TODO: test price
    }

    /**
     * Test the property 'purchaseOrder'
     */
    @Test
    public void purchaseOrderTest() {
        // TODO: test purchaseOrder
    }

    /**
     * Test the property 'purchaser'
     */
    @Test
    public void purchaserTest() {
        // TODO: test purchaser
    }

    /**
     * Test the property 'quantity'
     */
    @Test
    public void quantityTest() {
        // TODO: test quantity
    }

    /**
     * Test the property 'receivedFailQty'
     */
    @Test
    public void receivedFailQtyTest() {
        // TODO: test receivedFailQty
    }

    /**
     * Test the property 'receivedPassQty'
     */
    @Test
    public void receivedPassQtyTest() {
        // TODO: test receivedPassQty
    }

    /**
     * Test the property 'shippingAmount'
     */
    @Test
    public void shippingAmountTest() {
        // TODO: test shippingAmount
    }

    /**
     * Test the property 'sku'
     */
    @Test
    public void skuTest() {
        // TODO: test sku
    }

    /**
     * Test the property 'status'
     */
    @Test
    public void statusTest() {
        // TODO: test status
    }

    /**
     * Test the property 'taxAmount'
     */
    @Test
    public void taxAmountTest() {
        // TODO: test taxAmount
    }

    /**
     * Test the property 'totalCost'
     */
    @Test
    public void totalCostTest() {
        // TODO: test totalCost
    }

    /**
     * Test the property 'unit'
     */
    @Test
    public void unitTest() {
        // TODO: test unit
    }

    /**
     * Test the property 'updatedAt'
     */
    @Test
    public void updatedAtTest() {
        // TODO: test updatedAt
    }

    /**
     * Test the property 'vendor'
     */
    @Test
    public void vendorTest() {
        // TODO: test vendor
    }

    /**
     * Test the property 'receiveMethod'
     */
    @Test
    public void receiveMethodTest() {
        // TODO: test receiveMethod
    }

    /**
     * Test the property 'type'
     */
    @Test
    public void typeTest() {
        // TODO: test type
    }

    /**
     * Test the property 'blanket'
     */
    @Test
    public void blanketTest() {
        // TODO: test blanket
    }

    /**
     * Test the property 'comments'
     */
    @Test
    public void commentsTest() {
        // TODO: test comments
    }

    /**
     * Test the property 'confirmationStatus'
     */
    @Test
    public void confirmationStatusTest() {
        // TODO: test confirmationStatus
    }

    /**
     * Test the property 'confirmationStatusDescription'
     */
    @Test
    public void confirmationStatusDescriptionTest() {
        // TODO: test confirmationStatusDescription
    }

    /**
     * Test the property 'costDetails'
     */
    @Test
    public void costDetailsTest() {
        // TODO: test costDetails
    }

    /**
     * Test the property 'customFields'
     */
    @Test
    public void customFieldsTest() {
        // TODO: test customFields
    }

    /**
     * Test the property 'dateRequired'
     */
    @Test
    public void dateRequiredTest() {
        // TODO: test dateRequired
    }

    /**
     * Test the property 'hasSiblingItems'
     */
    @Test
    public void hasSiblingItemsTest() {
        // TODO: test hasSiblingItems
    }

    /**
     * Test the property 'lineComment'
     */
    @Test
    public void lineCommentTest() {
        // TODO: test lineComment
    }

    /**
     * Test the property 'logs'
     */
    @Test
    public void logsTest() {
        // TODO: test logs
    }

    /**
     * Test the property 'orderDescription'
     */
    @Test
    public void orderDescriptionTest() {
        // TODO: test orderDescription
    }

    /**
     * Test the property 'orderStatus'
     */
    @Test
    public void orderStatusTest() {
        // TODO: test orderStatus
    }

    /**
     * Test the property 'orderUuid'
     */
    @Test
    public void orderUuidTest() {
        // TODO: test orderUuid
    }

    /**
     * Test the property 'punchoutSupplierIcon'
     */
    @Test
    public void punchoutSupplierIconTest() {
        // TODO: test punchoutSupplierIcon
    }

    /**
     * Test the property 'punchoutSupplierName'
     */
    @Test
    public void punchoutSupplierNameTest() {
        // TODO: test punchoutSupplierName
    }

    /**
     * Test the property 'punchoutSystem'
     */
    @Test
    public void punchoutSystemTest() {
        // TODO: test punchoutSystem
    }

    /**
     * Test the property 'punchoutVendorReference'
     */
    @Test
    public void punchoutVendorReferenceTest() {
        // TODO: test punchoutVendorReference
    }

    /**
     * Test the property 'punchoutSupplierCanUpdateQuantity'
     */
    @Test
    public void punchoutSupplierCanUpdateQuantityTest() {
        // TODO: test punchoutSupplierCanUpdateQuantity
    }

    /**
     * Test the property 'purchaseOrderNumber'
     */
    @Test
    public void purchaseOrderNumberTest() {
        // TODO: test purchaseOrderNumber
    }

    /**
     * Test the property 'purchaseOrderUuid'
     */
    @Test
    public void purchaseOrderUuidTest() {
        // TODO: test purchaseOrderUuid
    }

    /**
     * Test the property 'purchasedCurrencyRate'
     */
    @Test
    public void purchasedCurrencyRateTest() {
        // TODO: test purchasedCurrencyRate
    }

    /**
     * Test the property 'recurrence'
     */
    @Test
    public void recurrenceTest() {
        // TODO: test recurrence
    }

    /**
     * Test the property 'requester'
     */
    @Test
    public void requesterTest() {
        // TODO: test requester
    }

    /**
     * Test the property 'spendAllocation'
     */
    @Test
    public void spendAllocationTest() {
        // TODO: test spendAllocation
    }

    /**
     * Test the property 'submittedDate'
     */
    @Test
    public void submittedDateTest() {
        // TODO: test submittedDate
    }

    /**
     * Test the property 'taxes'
     */
    @Test
    public void taxesTest() {
        // TODO: test taxes
    }

    /**
     * Test the property 'receiveLogCount'
     */
    @Test
    public void receiveLogCountTest() {
        // TODO: test receiveLogCount
    }

    /**
     * Test the property 'approvalHistory'
     */
    @Test
    public void approvalHistoryTest() {
        // TODO: test approvalHistory
    }

    /**
     * Test the property 'flags'
     */
    @Test
    public void flagsTest() {
        // TODO: test flags
    }

}
