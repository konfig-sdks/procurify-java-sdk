/*
 * Procurify API Documentation
 *  # Disclaimer  - Procurify’s API is evolving and is subject to change at any time. Additionally, aspects of the API are undocumented, including certain methods, events, and properties. Given that both documented and undocumented aspects of the Procurify API may change at any time, the client relies on the API at their own risk. - Client (and/or client’s representative) is responsible for building, testing, and maintaining any API connection between Procurify and any other tool.  Procurify’s responsibility strictly involves providing support on clarifications in regards to the issued API document. - Procurify’s API is offered on an “as is” and “as available” basis, without warranties of any kind. By accepting this agreement, you agree that you have read the current API documentation, and accept the API functionality in its current state including current limitations. For questions and clarification around the documentation, please contact support@procurify.com. - In accordance with Section 2.(b) of our Subscription Services Agreement, Procurify reserves the right to deny access to our API at any time. If your API requests are too large and time out, contact us immediately to avoid possible suspension of access. - You may not attempt to reverse engineer or otherwise derive source code, trade secrets, or know-how in the Procurify API or portion thereof. You may not use the Procurify API to replicate or compete with core products or services offered by Procurify. 
 *
 * The version of the OpenAPI document: 
 * 
 *
 * NOTE: This class is auto generated by Konfig (https://konfigthis.com).
 * Do not edit the class manually.
 */


package com.konfigthis.client.api;

import com.konfigthis.client.ApiCallback;
import com.konfigthis.client.ApiClient;
import com.konfigthis.client.ApiException;
import com.konfigthis.client.ApiResponse;
import com.konfigthis.client.Configuration;
import com.konfigthis.client.Pair;
import com.konfigthis.client.ProgressRequestBody;
import com.konfigthis.client.ProgressResponseBody;

import com.google.gson.reflect.TypeToken;

import java.io.IOException;


import com.konfigthis.client.model.CustomFieldReadSerializerSingle;
import com.konfigthis.client.model.CustomFieldUpdateRequest;
import com.konfigthis.client.model.PaginatedCustomFieldReadList;

import java.lang.reflect.Type;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import javax.ws.rs.core.GenericType;

public class CustomFieldsApiGenerated {
    private ApiClient localVarApiClient;
    private int localHostIndex;
    private String localCustomBaseUrl;

    public CustomFieldsApiGenerated() throws IllegalArgumentException {
        this(Configuration.getDefaultApiClient());
    }

    public CustomFieldsApiGenerated(ApiClient apiClient) throws IllegalArgumentException {
        this.localVarApiClient = apiClient;
    }

    public ApiClient getApiClient() {
        return localVarApiClient;
    }

    public void setApiClient(ApiClient apiClient) {
        this.localVarApiClient = apiClient;
    }

    public int getHostIndex() {
        return localHostIndex;
    }

    public void setHostIndex(int hostIndex) {
        this.localHostIndex = hostIndex;
    }

    public String getCustomBaseUrl() {
        return localCustomBaseUrl;
    }

    public void setCustomBaseUrl(String customBaseUrl) {
        this.localCustomBaseUrl = customBaseUrl;
    }

    private okhttp3.Call getOrderItemCustomFieldsCall(String fieldType, String format, Boolean metaIsActive, Integer page, Integer pageSize, final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = null;

        // create path and map variables
        String localVarPath = "/api/v3/custom-fields/order-items";

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        if (fieldType != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("field_type", fieldType));
        }

        if (format != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("format", format));
        }

        if (metaIsActive != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("meta__is_active", metaIsActive));
        }

        if (page != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("page", page));
        }

        if (pageSize != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("page_size", pageSize));
        }

        final String[] localVarAccepts = {
            "application/json",
            "text/csv"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] { "BasicAuthentication", "M2MAuthentication", "RemoteAuthentication", "cookieAuth", "tokenAuth" };
        return localVarApiClient.buildCall(basePath, localVarPath, "GET", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call getOrderItemCustomFieldsValidateBeforeCall(String fieldType, String format, Boolean metaIsActive, Integer page, Integer pageSize, final ApiCallback _callback) throws ApiException {
        return getOrderItemCustomFieldsCall(fieldType, format, metaIsActive, page, pageSize, _callback);

    }


    private ApiResponse<PaginatedCustomFieldReadList> getOrderItemCustomFieldsWithHttpInfo(String fieldType, String format, Boolean metaIsActive, Integer page, Integer pageSize) throws ApiException {
        okhttp3.Call localVarCall = getOrderItemCustomFieldsValidateBeforeCall(fieldType, format, metaIsActive, page, pageSize, null);
        Type localVarReturnType = new TypeToken<PaginatedCustomFieldReadList>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    private okhttp3.Call getOrderItemCustomFieldsAsync(String fieldType, String format, Boolean metaIsActive, Integer page, Integer pageSize, final ApiCallback<PaginatedCustomFieldReadList> _callback) throws ApiException {

        okhttp3.Call localVarCall = getOrderItemCustomFieldsValidateBeforeCall(fieldType, format, metaIsActive, page, pageSize, _callback);
        Type localVarReturnType = new TypeToken<PaginatedCustomFieldReadList>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }

    public class GetOrderItemCustomFieldsRequestBuilder {
        private String fieldType;
        private String format;
        private Boolean metaIsActive;
        private Integer page;
        private Integer pageSize;

        private GetOrderItemCustomFieldsRequestBuilder() {
        }

        /**
         * Set fieldType
         * @param fieldType  (optional)
         * @return GetOrderItemCustomFieldsRequestBuilder
         */
        public GetOrderItemCustomFieldsRequestBuilder fieldType(String fieldType) {
            this.fieldType = fieldType;
            return this;
        }
        
        /**
         * Set format
         * @param format  (optional)
         * @return GetOrderItemCustomFieldsRequestBuilder
         */
        public GetOrderItemCustomFieldsRequestBuilder format(String format) {
            this.format = format;
            return this;
        }
        
        /**
         * Set metaIsActive
         * @param metaIsActive  (optional)
         * @return GetOrderItemCustomFieldsRequestBuilder
         */
        public GetOrderItemCustomFieldsRequestBuilder metaIsActive(Boolean metaIsActive) {
            this.metaIsActive = metaIsActive;
            return this;
        }
        
        /**
         * Set page
         * @param page A page number within the paginated result set. (optional)
         * @return GetOrderItemCustomFieldsRequestBuilder
         */
        public GetOrderItemCustomFieldsRequestBuilder page(Integer page) {
            this.page = page;
            return this;
        }
        
        /**
         * Set pageSize
         * @param pageSize Number of results to return per page. (optional)
         * @return GetOrderItemCustomFieldsRequestBuilder
         */
        public GetOrderItemCustomFieldsRequestBuilder pageSize(Integer pageSize) {
            this.pageSize = pageSize;
            return this;
        }
        
        /**
         * Build call for getOrderItemCustomFields
         * @param _callback ApiCallback API callback
         * @return Call to execute
         * @throws ApiException If fail to serialize the request body object
         * @http.response.details
         <table summary="Response Details" border="1">
            <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
            <tr><td> 200 </td><td>  </td><td>  -  </td></tr>
         </table>
         */
        public okhttp3.Call buildCall(final ApiCallback _callback) throws ApiException {
            return getOrderItemCustomFieldsCall(fieldType, format, metaIsActive, page, pageSize, _callback);
        }


        /**
         * Execute getOrderItemCustomFields request
         * @return PaginatedCustomFieldReadList
         * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
         * @http.response.details
         <table summary="Response Details" border="1">
            <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
            <tr><td> 200 </td><td>  </td><td>  -  </td></tr>
         </table>
         */
        public PaginatedCustomFieldReadList execute() throws ApiException {
            ApiResponse<PaginatedCustomFieldReadList> localVarResp = getOrderItemCustomFieldsWithHttpInfo(fieldType, format, metaIsActive, page, pageSize);
            return localVarResp.getResponseBody();
        }

        /**
         * Execute getOrderItemCustomFields request with HTTP info returned
         * @return ApiResponse&lt;PaginatedCustomFieldReadList&gt;
         * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
         * @http.response.details
         <table summary="Response Details" border="1">
            <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
            <tr><td> 200 </td><td>  </td><td>  -  </td></tr>
         </table>
         */
        public ApiResponse<PaginatedCustomFieldReadList> executeWithHttpInfo() throws ApiException {
            return getOrderItemCustomFieldsWithHttpInfo(fieldType, format, metaIsActive, page, pageSize);
        }

        /**
         * Execute getOrderItemCustomFields request (asynchronously)
         * @param _callback The callback to be executed when the API call finishes
         * @return The request call
         * @throws ApiException If fail to process the API call, e.g. serializing the request body object
         * @http.response.details
         <table summary="Response Details" border="1">
            <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
            <tr><td> 200 </td><td>  </td><td>  -  </td></tr>
         </table>
         */
        public okhttp3.Call executeAsync(final ApiCallback<PaginatedCustomFieldReadList> _callback) throws ApiException {
            return getOrderItemCustomFieldsAsync(fieldType, format, metaIsActive, page, pageSize, _callback);
        }
    }

    /**
     * Get Active/Inactive Order Item Custom Fields
     * Get list of custom fields associated with order items
     * @return GetOrderItemCustomFieldsRequestBuilder
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td>  </td><td>  -  </td></tr>
     </table>
     */
    public GetOrderItemCustomFieldsRequestBuilder getOrderItemCustomFields() throws IllegalArgumentException {
        return new GetOrderItemCustomFieldsRequestBuilder();
    }
    private okhttp3.Call updateOrderItemCustomFieldDropdownChoicesCall(Integer id, CustomFieldUpdateRequest customFieldUpdateRequest, String format, final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = customFieldUpdateRequest;

        // create path and map variables
        String localVarPath = "/api/v3/custom-fields/{id}"
            .replace("{" + "id" + "}", localVarApiClient.escapeString(id.toString()));

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        if (format != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("format", format));
        }

        final String[] localVarAccepts = {
            "application/json",
            "text/csv"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
            "application/json",
            "application/x-www-form-urlencoded",
            "",
            "application/xml",
            "multipart/form-data"
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] { "BasicAuthentication", "M2MAuthentication", "RemoteAuthentication", "cookieAuth", "tokenAuth" };
        return localVarApiClient.buildCall(basePath, localVarPath, "PUT", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call updateOrderItemCustomFieldDropdownChoicesValidateBeforeCall(Integer id, CustomFieldUpdateRequest customFieldUpdateRequest, String format, final ApiCallback _callback) throws ApiException {
        // verify the required parameter 'id' is set
        if (id == null) {
            throw new ApiException("Missing the required parameter 'id' when calling updateOrderItemCustomFieldDropdownChoices(Async)");
        }

        // verify the required parameter 'customFieldUpdateRequest' is set
        if (customFieldUpdateRequest == null) {
            throw new ApiException("Missing the required parameter 'customFieldUpdateRequest' when calling updateOrderItemCustomFieldDropdownChoices(Async)");
        }

        return updateOrderItemCustomFieldDropdownChoicesCall(id, customFieldUpdateRequest, format, _callback);

    }


    private ApiResponse<CustomFieldReadSerializerSingle> updateOrderItemCustomFieldDropdownChoicesWithHttpInfo(Integer id, CustomFieldUpdateRequest customFieldUpdateRequest, String format) throws ApiException {
        okhttp3.Call localVarCall = updateOrderItemCustomFieldDropdownChoicesValidateBeforeCall(id, customFieldUpdateRequest, format, null);
        Type localVarReturnType = new TypeToken<CustomFieldReadSerializerSingle>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    private okhttp3.Call updateOrderItemCustomFieldDropdownChoicesAsync(Integer id, CustomFieldUpdateRequest customFieldUpdateRequest, String format, final ApiCallback<CustomFieldReadSerializerSingle> _callback) throws ApiException {

        okhttp3.Call localVarCall = updateOrderItemCustomFieldDropdownChoicesValidateBeforeCall(id, customFieldUpdateRequest, format, _callback);
        Type localVarReturnType = new TypeToken<CustomFieldReadSerializerSingle>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }

    public class UpdateOrderItemCustomFieldDropdownChoicesRequestBuilder {
        private final String name;
        private final String fieldType;
        private final Integer id;
        private String defaultValue;
        private Boolean isRequired;
        private List<String> fieldChoices;
        private String format;

        private UpdateOrderItemCustomFieldDropdownChoicesRequestBuilder(String name, String fieldType, Integer id) {
            this.name = name;
            this.fieldType = fieldType;
            this.id = id;
        }

        /**
         * Set defaultValue
         * @param defaultValue  (optional)
         * @return UpdateOrderItemCustomFieldDropdownChoicesRequestBuilder
         */
        public UpdateOrderItemCustomFieldDropdownChoicesRequestBuilder defaultValue(String defaultValue) {
            this.defaultValue = defaultValue;
            return this;
        }
        
        /**
         * Set isRequired
         * @param isRequired  (optional)
         * @return UpdateOrderItemCustomFieldDropdownChoicesRequestBuilder
         */
        public UpdateOrderItemCustomFieldDropdownChoicesRequestBuilder isRequired(Boolean isRequired) {
            this.isRequired = isRequired;
            return this;
        }
        
        /**
         * Set fieldChoices
         * @param fieldChoices  (optional)
         * @return UpdateOrderItemCustomFieldDropdownChoicesRequestBuilder
         */
        public UpdateOrderItemCustomFieldDropdownChoicesRequestBuilder fieldChoices(List<String> fieldChoices) {
            this.fieldChoices = fieldChoices;
            return this;
        }
        
        /**
         * Set format
         * @param format  (optional)
         * @return UpdateOrderItemCustomFieldDropdownChoicesRequestBuilder
         */
        public UpdateOrderItemCustomFieldDropdownChoicesRequestBuilder format(String format) {
            this.format = format;
            return this;
        }
        
        /**
         * Build call for updateOrderItemCustomFieldDropdownChoices
         * @param _callback ApiCallback API callback
         * @return Call to execute
         * @throws ApiException If fail to serialize the request body object
         * @http.response.details
         <table summary="Response Details" border="1">
            <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
            <tr><td> 200 </td><td>  </td><td>  -  </td></tr>
         </table>
         */
        public okhttp3.Call buildCall(final ApiCallback _callback) throws ApiException {
            CustomFieldUpdateRequest customFieldUpdateRequest = buildBodyParams();
            return updateOrderItemCustomFieldDropdownChoicesCall(id, customFieldUpdateRequest, format, _callback);
        }

        private CustomFieldUpdateRequest buildBodyParams() {
            CustomFieldUpdateRequest customFieldUpdateRequest = new CustomFieldUpdateRequest();
            customFieldUpdateRequest.name(this.name);
            customFieldUpdateRequest.defaultValue(this.defaultValue);
            customFieldUpdateRequest.isRequired(this.isRequired);
            customFieldUpdateRequest.fieldType(this.fieldType);
            customFieldUpdateRequest.fieldChoices(this.fieldChoices);
            return customFieldUpdateRequest;
        }

        /**
         * Execute updateOrderItemCustomFieldDropdownChoices request
         * @return CustomFieldReadSerializerSingle
         * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
         * @http.response.details
         <table summary="Response Details" border="1">
            <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
            <tr><td> 200 </td><td>  </td><td>  -  </td></tr>
         </table>
         */
        public CustomFieldReadSerializerSingle execute() throws ApiException {
            CustomFieldUpdateRequest customFieldUpdateRequest = buildBodyParams();
            ApiResponse<CustomFieldReadSerializerSingle> localVarResp = updateOrderItemCustomFieldDropdownChoicesWithHttpInfo(id, customFieldUpdateRequest, format);
            return localVarResp.getResponseBody();
        }

        /**
         * Execute updateOrderItemCustomFieldDropdownChoices request with HTTP info returned
         * @return ApiResponse&lt;CustomFieldReadSerializerSingle&gt;
         * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
         * @http.response.details
         <table summary="Response Details" border="1">
            <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
            <tr><td> 200 </td><td>  </td><td>  -  </td></tr>
         </table>
         */
        public ApiResponse<CustomFieldReadSerializerSingle> executeWithHttpInfo() throws ApiException {
            CustomFieldUpdateRequest customFieldUpdateRequest = buildBodyParams();
            return updateOrderItemCustomFieldDropdownChoicesWithHttpInfo(id, customFieldUpdateRequest, format);
        }

        /**
         * Execute updateOrderItemCustomFieldDropdownChoices request (asynchronously)
         * @param _callback The callback to be executed when the API call finishes
         * @return The request call
         * @throws ApiException If fail to process the API call, e.g. serializing the request body object
         * @http.response.details
         <table summary="Response Details" border="1">
            <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
            <tr><td> 200 </td><td>  </td><td>  -  </td></tr>
         </table>
         */
        public okhttp3.Call executeAsync(final ApiCallback<CustomFieldReadSerializerSingle> _callback) throws ApiException {
            CustomFieldUpdateRequest customFieldUpdateRequest = buildBodyParams();
            return updateOrderItemCustomFieldDropdownChoicesAsync(id, customFieldUpdateRequest, format, _callback);
        }
    }

    /**
     * Update Order Item Custom Field Dropdown Choices
     *  
     * @param id A unique integer value identifying this custom field. (required)
     * @param customFieldUpdateRequest  (required)
     * @return UpdateOrderItemCustomFieldDropdownChoicesRequestBuilder
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td>  </td><td>  -  </td></tr>
     </table>
     */
    public UpdateOrderItemCustomFieldDropdownChoicesRequestBuilder updateOrderItemCustomFieldDropdownChoices(String name, String fieldType, Integer id) throws IllegalArgumentException {
        if (name == null) throw new IllegalArgumentException("\"name\" is required but got null");
            if (name != null && name.length() < 1) {
              throw new IllegalArgumentException("Invalid value for name. Length must be greater than or equal to 1.");
            }

        if (fieldType == null) throw new IllegalArgumentException("\"fieldType\" is required but got null");
            if (fieldType != null && fieldType.length() < 1) {
              throw new IllegalArgumentException("Invalid value for fieldType. Length must be greater than or equal to 1.");
            }

        if (id == null) throw new IllegalArgumentException("\"id\" is required but got null");
        return new UpdateOrderItemCustomFieldDropdownChoicesRequestBuilder(name, fieldType, id);
    }
}
