/*
 * Procurify API Documentation
 *  # Disclaimer  - Procurify’s API is evolving and is subject to change at any time. Additionally, aspects of the API are undocumented, including certain methods, events, and properties. Given that both documented and undocumented aspects of the Procurify API may change at any time, the client relies on the API at their own risk. - Client (and/or client’s representative) is responsible for building, testing, and maintaining any API connection between Procurify and any other tool.  Procurify’s responsibility strictly involves providing support on clarifications in regards to the issued API document. - Procurify’s API is offered on an “as is” and “as available” basis, without warranties of any kind. By accepting this agreement, you agree that you have read the current API documentation, and accept the API functionality in its current state including current limitations. For questions and clarification around the documentation, please contact support@procurify.com. - In accordance with Section 2.(b) of our Subscription Services Agreement, Procurify reserves the right to deny access to our API at any time. If your API requests are too large and time out, contact us immediately to avoid possible suspension of access. - You may not attempt to reverse engineer or otherwise derive source code, trade secrets, or know-how in the Procurify API or portion thereof. You may not use the Procurify API to replicate or compete with core products or services offered by Procurify. 
 *
 * The version of the OpenAPI document: 
 * 
 *
 * NOTE: This class is auto generated by Konfig (https://konfigthis.com).
 * Do not edit the class manually.
 */


package com.konfigthis.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import com.konfigthis.client.model.OrderItemPurchaseEditRequest;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.math.BigDecimal;
import java.time.OffsetDateTime;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import org.openapitools.jackson.nullable.JsonNullable;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import org.apache.commons.lang3.StringUtils;

import java.lang.reflect.Type;
import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Map.Entry;
import java.util.Set;

import com.konfigthis.client.JSON;

/**
 * PurchaseOrderUpdateRequest
 */@javax.annotation.Generated(value = "Generated by https://konfigthis.com")
public class PurchaseOrderUpdateRequest {
  public static final String SERIALIZED_NAME_VERSION = "version";
  @SerializedName(SERIALIZED_NAME_VERSION)
  private Integer version;

  public static final String SERIALIZED_NAME_ORDER_ITEMS = "order_items";
  @SerializedName(SERIALIZED_NAME_ORDER_ITEMS)
  private List<OrderItemPurchaseEditRequest> orderItems = new ArrayList<>();

  public static final String SERIALIZED_NAME_CUSTOM_FIELDS = "custom_fields";
  @SerializedName(SERIALIZED_NAME_CUSTOM_FIELDS)
  private List<Map<String, Object>> customFields = null;

  public static final String SERIALIZED_NAME_PO_NUM = "PO_Num";
  @SerializedName(SERIALIZED_NAME_PO_NUM)
  private String poNum;

  public static final String SERIALIZED_NAME_BUYER_NAME = "buyer_name";
  @SerializedName(SERIALIZED_NAME_BUYER_NAME)
  private String buyerName;

  public static final String SERIALIZED_NAME_BUYER_CONTACT = "buyer_contact";
  @SerializedName(SERIALIZED_NAME_BUYER_CONTACT)
  private String buyerContact;

  public static final String SERIALIZED_NAME_BUYER_ADDRESS_LINE_ONE = "buyer_addressLineOne";
  @SerializedName(SERIALIZED_NAME_BUYER_ADDRESS_LINE_ONE)
  private String buyerAddressLineOne;

  public static final String SERIALIZED_NAME_BUYER_POSTAL_CODE = "buyer_postalCode";
  @SerializedName(SERIALIZED_NAME_BUYER_POSTAL_CODE)
  private String buyerPostalCode;

  public static final String SERIALIZED_NAME_BUYER_CITY = "buyer_city";
  @SerializedName(SERIALIZED_NAME_BUYER_CITY)
  private String buyerCity;

  public static final String SERIALIZED_NAME_BUYER_STATE_PROVINCE = "buyer_state_province";
  @SerializedName(SERIALIZED_NAME_BUYER_STATE_PROVINCE)
  private String buyerStateProvince;

  public static final String SERIALIZED_NAME_BUYER_COUNTRY = "buyer_country";
  @SerializedName(SERIALIZED_NAME_BUYER_COUNTRY)
  private String buyerCountry;

  public static final String SERIALIZED_NAME_BUYER_ADDRESS = "buyer_address";
  @SerializedName(SERIALIZED_NAME_BUYER_ADDRESS)
  private Integer buyerAddress;

  public static final String SERIALIZED_NAME_COMMENT = "comment";
  @SerializedName(SERIALIZED_NAME_COMMENT)
  private String comment;

  public static final String SERIALIZED_NAME_RECEIVER_NAME = "receiver_name";
  @SerializedName(SERIALIZED_NAME_RECEIVER_NAME)
  private String receiverName;

  public static final String SERIALIZED_NAME_RECEIVER_CONTACT = "receiver_contact";
  @SerializedName(SERIALIZED_NAME_RECEIVER_CONTACT)
  private String receiverContact;

  public static final String SERIALIZED_NAME_RECEIVER_ADDRESS_LINE_ONE = "receiver_addressLineOne";
  @SerializedName(SERIALIZED_NAME_RECEIVER_ADDRESS_LINE_ONE)
  private String receiverAddressLineOne;

  public static final String SERIALIZED_NAME_RECEIVER_POSTAL_CODE = "receiver_postalCode";
  @SerializedName(SERIALIZED_NAME_RECEIVER_POSTAL_CODE)
  private String receiverPostalCode;

  public static final String SERIALIZED_NAME_RECEIVER_CITY = "receiver_city";
  @SerializedName(SERIALIZED_NAME_RECEIVER_CITY)
  private String receiverCity;

  public static final String SERIALIZED_NAME_RECEIVER_STATE_PROVINCE = "receiver_state_province";
  @SerializedName(SERIALIZED_NAME_RECEIVER_STATE_PROVINCE)
  private String receiverStateProvince;

  public static final String SERIALIZED_NAME_RECEIVER_COUNTRY = "receiver_country";
  @SerializedName(SERIALIZED_NAME_RECEIVER_COUNTRY)
  private String receiverCountry;

  public static final String SERIALIZED_NAME_RECEIVER_ADDRESS = "receiver_address";
  @SerializedName(SERIALIZED_NAME_RECEIVER_ADDRESS)
  private Integer receiverAddress;

  public static final String SERIALIZED_NAME_PROMISE_DATE = "promise_date";
  @SerializedName(SERIALIZED_NAME_PROMISE_DATE)
  private OffsetDateTime promiseDate;

  public static final String SERIALIZED_NAME_FREIGHT = "freight";
  @SerializedName(SERIALIZED_NAME_FREIGHT)
  private BigDecimal freight;

  public static final String SERIALIZED_NAME_DISCOUNT = "discount";
  @SerializedName(SERIALIZED_NAME_DISCOUNT)
  private Map<String, Object> discount = new HashMap<>();

  public static final String SERIALIZED_NAME_TAX = "tax";
  @SerializedName(SERIALIZED_NAME_TAX)
  private Map<String, Object> tax = new HashMap<>();

  public static final String SERIALIZED_NAME_OTHER = "other";
  @SerializedName(SERIALIZED_NAME_OTHER)
  private BigDecimal other;

  public static final String SERIALIZED_NAME_DISCLAIMER_DESCRIPTION = "disclaimer_description";
  @SerializedName(SERIALIZED_NAME_DISCLAIMER_DESCRIPTION)
  private String disclaimerDescription;

  public static final String SERIALIZED_NAME_DISCLAIMER_TEXT = "disclaimer_text";
  @SerializedName(SERIALIZED_NAME_DISCLAIMER_TEXT)
  private String disclaimerText;

  public static final String SERIALIZED_NAME_PAYMENT_TERM_REF = "payment_term_ref";
  @SerializedName(SERIALIZED_NAME_PAYMENT_TERM_REF)
  private Integer paymentTermRef;

  public static final String SERIALIZED_NAME_SHIPPING_TERM_REF = "shipping_term_ref";
  @SerializedName(SERIALIZED_NAME_SHIPPING_TERM_REF)
  private Integer shippingTermRef;

  public static final String SERIALIZED_NAME_PAYMENT_METHOD_REF = "payment_method_ref";
  @SerializedName(SERIALIZED_NAME_PAYMENT_METHOD_REF)
  private Integer paymentMethodRef;

  public static final String SERIALIZED_NAME_SHIPPING_METHOD_REF = "shipping_method_ref";
  @SerializedName(SERIALIZED_NAME_SHIPPING_METHOD_REF)
  private Integer shippingMethodRef;

  public static final String SERIALIZED_NAME_CREDITCARD = "creditcard";
  @SerializedName(SERIALIZED_NAME_CREDITCARD)
  private Integer creditcard;

  public static final String SERIALIZED_NAME_EXPIRY_DATE = "expiry_date";
  @SerializedName(SERIALIZED_NAME_EXPIRY_DATE)
  private OffsetDateTime expiryDate;

  public static final String SERIALIZED_NAME_CONTRACT = "contract";
  @SerializedName(SERIALIZED_NAME_CONTRACT)
  private Integer contract;

  public PurchaseOrderUpdateRequest() {
  }

  public PurchaseOrderUpdateRequest version(Integer version) {
    
    
    
    
    this.version = version;
    return this;
  }

   /**
   * Get version
   * @return version
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")

  public Integer getVersion() {
    return version;
  }


  public void setVersion(Integer version) {
    
    
    
    this.version = version;
  }


  public PurchaseOrderUpdateRequest orderItems(List<OrderItemPurchaseEditRequest> orderItems) {
    
    
    
    
    this.orderItems = orderItems;
    return this;
  }

  public PurchaseOrderUpdateRequest addOrderItemsItem(OrderItemPurchaseEditRequest orderItemsItem) {
    this.orderItems.add(orderItemsItem);
    return this;
  }

   /**
   * Get orderItems
   * @return orderItems
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")

  public List<OrderItemPurchaseEditRequest> getOrderItems() {
    return orderItems;
  }


  public void setOrderItems(List<OrderItemPurchaseEditRequest> orderItems) {
    
    
    
    this.orderItems = orderItems;
  }


  public PurchaseOrderUpdateRequest customFields(List<Map<String, Object>> customFields) {
    
    
    
    
    this.customFields = customFields;
    return this;
  }

  public PurchaseOrderUpdateRequest addCustomFieldsItem(Map<String, Object> customFieldsItem) {
    if (this.customFields == null) {
      this.customFields = new ArrayList<>();
    }
    this.customFields.add(customFieldsItem);
    return this;
  }

   /**
   * Get customFields
   * @return customFields
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "[]", value = "")

  public List<Map<String, Object>> getCustomFields() {
    return customFields;
  }


  public void setCustomFields(List<Map<String, Object>> customFields) {
    
    
    
    this.customFields = customFields;
  }


  public PurchaseOrderUpdateRequest poNum(String poNum) {
    
    
    
    
    this.poNum = poNum;
    return this;
  }

   /**
   * Get poNum
   * @return poNum
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getPoNum() {
    return poNum;
  }


  public void setPoNum(String poNum) {
    
    
    
    this.poNum = poNum;
  }


  public PurchaseOrderUpdateRequest buyerName(String buyerName) {
    
    
    if (buyerName != null && buyerName.length() < 1) {
      throw new IllegalArgumentException("Invalid value for buyerName. Length must be greater than or equal to 1.");
    }
    
    this.buyerName = buyerName;
    return this;
  }

   /**
   * Get buyerName
   * @return buyerName
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")

  public String getBuyerName() {
    return buyerName;
  }


  public void setBuyerName(String buyerName) {
    
    
    if (buyerName != null && buyerName.length() < 1) {
      throw new IllegalArgumentException("Invalid value for buyerName. Length must be greater than or equal to 1.");
    }
    this.buyerName = buyerName;
  }


  public PurchaseOrderUpdateRequest buyerContact(String buyerContact) {
    
    
    if (buyerContact != null && buyerContact.length() < 1) {
      throw new IllegalArgumentException("Invalid value for buyerContact. Length must be greater than or equal to 1.");
    }
    
    this.buyerContact = buyerContact;
    return this;
  }

   /**
   * Get buyerContact
   * @return buyerContact
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")

  public String getBuyerContact() {
    return buyerContact;
  }


  public void setBuyerContact(String buyerContact) {
    
    
    if (buyerContact != null && buyerContact.length() < 1) {
      throw new IllegalArgumentException("Invalid value for buyerContact. Length must be greater than or equal to 1.");
    }
    this.buyerContact = buyerContact;
  }


  public PurchaseOrderUpdateRequest buyerAddressLineOne(String buyerAddressLineOne) {
    
    
    if (buyerAddressLineOne != null && buyerAddressLineOne.length() < 1) {
      throw new IllegalArgumentException("Invalid value for buyerAddressLineOne. Length must be greater than or equal to 1.");
    }
    
    this.buyerAddressLineOne = buyerAddressLineOne;
    return this;
  }

   /**
   * Get buyerAddressLineOne
   * @return buyerAddressLineOne
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")

  public String getBuyerAddressLineOne() {
    return buyerAddressLineOne;
  }


  public void setBuyerAddressLineOne(String buyerAddressLineOne) {
    
    
    if (buyerAddressLineOne != null && buyerAddressLineOne.length() < 1) {
      throw new IllegalArgumentException("Invalid value for buyerAddressLineOne. Length must be greater than or equal to 1.");
    }
    this.buyerAddressLineOne = buyerAddressLineOne;
  }


  public PurchaseOrderUpdateRequest buyerPostalCode(String buyerPostalCode) {
    
    
    if (buyerPostalCode != null && buyerPostalCode.length() < 1) {
      throw new IllegalArgumentException("Invalid value for buyerPostalCode. Length must be greater than or equal to 1.");
    }
    
    this.buyerPostalCode = buyerPostalCode;
    return this;
  }

   /**
   * Get buyerPostalCode
   * @return buyerPostalCode
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")

  public String getBuyerPostalCode() {
    return buyerPostalCode;
  }


  public void setBuyerPostalCode(String buyerPostalCode) {
    
    
    if (buyerPostalCode != null && buyerPostalCode.length() < 1) {
      throw new IllegalArgumentException("Invalid value for buyerPostalCode. Length must be greater than or equal to 1.");
    }
    this.buyerPostalCode = buyerPostalCode;
  }


  public PurchaseOrderUpdateRequest buyerCity(String buyerCity) {
    
    
    if (buyerCity != null && buyerCity.length() < 1) {
      throw new IllegalArgumentException("Invalid value for buyerCity. Length must be greater than or equal to 1.");
    }
    
    this.buyerCity = buyerCity;
    return this;
  }

   /**
   * Get buyerCity
   * @return buyerCity
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")

  public String getBuyerCity() {
    return buyerCity;
  }


  public void setBuyerCity(String buyerCity) {
    
    
    if (buyerCity != null && buyerCity.length() < 1) {
      throw new IllegalArgumentException("Invalid value for buyerCity. Length must be greater than or equal to 1.");
    }
    this.buyerCity = buyerCity;
  }


  public PurchaseOrderUpdateRequest buyerStateProvince(String buyerStateProvince) {
    
    
    
    
    this.buyerStateProvince = buyerStateProvince;
    return this;
  }

   /**
   * Get buyerStateProvince
   * @return buyerStateProvince
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getBuyerStateProvince() {
    return buyerStateProvince;
  }


  public void setBuyerStateProvince(String buyerStateProvince) {
    
    
    
    this.buyerStateProvince = buyerStateProvince;
  }


  public PurchaseOrderUpdateRequest buyerCountry(String buyerCountry) {
    
    
    if (buyerCountry != null && buyerCountry.length() < 1) {
      throw new IllegalArgumentException("Invalid value for buyerCountry. Length must be greater than or equal to 1.");
    }
    
    this.buyerCountry = buyerCountry;
    return this;
  }

   /**
   * Get buyerCountry
   * @return buyerCountry
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")

  public String getBuyerCountry() {
    return buyerCountry;
  }


  public void setBuyerCountry(String buyerCountry) {
    
    
    if (buyerCountry != null && buyerCountry.length() < 1) {
      throw new IllegalArgumentException("Invalid value for buyerCountry. Length must be greater than or equal to 1.");
    }
    this.buyerCountry = buyerCountry;
  }


  public PurchaseOrderUpdateRequest buyerAddress(Integer buyerAddress) {
    
    
    
    
    this.buyerAddress = buyerAddress;
    return this;
  }

   /**
   * Get buyerAddress
   * @return buyerAddress
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")

  public Integer getBuyerAddress() {
    return buyerAddress;
  }


  public void setBuyerAddress(Integer buyerAddress) {
    
    
    
    this.buyerAddress = buyerAddress;
  }


  public PurchaseOrderUpdateRequest comment(String comment) {
    
    
    
    
    this.comment = comment;
    return this;
  }

   /**
   * Get comment
   * @return comment
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getComment() {
    return comment;
  }


  public void setComment(String comment) {
    
    
    
    this.comment = comment;
  }


  public PurchaseOrderUpdateRequest receiverName(String receiverName) {
    
    
    if (receiverName != null && receiverName.length() < 1) {
      throw new IllegalArgumentException("Invalid value for receiverName. Length must be greater than or equal to 1.");
    }
    
    this.receiverName = receiverName;
    return this;
  }

   /**
   * Get receiverName
   * @return receiverName
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")

  public String getReceiverName() {
    return receiverName;
  }


  public void setReceiverName(String receiverName) {
    
    
    if (receiverName != null && receiverName.length() < 1) {
      throw new IllegalArgumentException("Invalid value for receiverName. Length must be greater than or equal to 1.");
    }
    this.receiverName = receiverName;
  }


  public PurchaseOrderUpdateRequest receiverContact(String receiverContact) {
    
    
    if (receiverContact != null && receiverContact.length() < 1) {
      throw new IllegalArgumentException("Invalid value for receiverContact. Length must be greater than or equal to 1.");
    }
    
    this.receiverContact = receiverContact;
    return this;
  }

   /**
   * Get receiverContact
   * @return receiverContact
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")

  public String getReceiverContact() {
    return receiverContact;
  }


  public void setReceiverContact(String receiverContact) {
    
    
    if (receiverContact != null && receiverContact.length() < 1) {
      throw new IllegalArgumentException("Invalid value for receiverContact. Length must be greater than or equal to 1.");
    }
    this.receiverContact = receiverContact;
  }


  public PurchaseOrderUpdateRequest receiverAddressLineOne(String receiverAddressLineOne) {
    
    
    if (receiverAddressLineOne != null && receiverAddressLineOne.length() < 1) {
      throw new IllegalArgumentException("Invalid value for receiverAddressLineOne. Length must be greater than or equal to 1.");
    }
    
    this.receiverAddressLineOne = receiverAddressLineOne;
    return this;
  }

   /**
   * Get receiverAddressLineOne
   * @return receiverAddressLineOne
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")

  public String getReceiverAddressLineOne() {
    return receiverAddressLineOne;
  }


  public void setReceiverAddressLineOne(String receiverAddressLineOne) {
    
    
    if (receiverAddressLineOne != null && receiverAddressLineOne.length() < 1) {
      throw new IllegalArgumentException("Invalid value for receiverAddressLineOne. Length must be greater than or equal to 1.");
    }
    this.receiverAddressLineOne = receiverAddressLineOne;
  }


  public PurchaseOrderUpdateRequest receiverPostalCode(String receiverPostalCode) {
    
    
    if (receiverPostalCode != null && receiverPostalCode.length() < 1) {
      throw new IllegalArgumentException("Invalid value for receiverPostalCode. Length must be greater than or equal to 1.");
    }
    
    this.receiverPostalCode = receiverPostalCode;
    return this;
  }

   /**
   * Get receiverPostalCode
   * @return receiverPostalCode
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")

  public String getReceiverPostalCode() {
    return receiverPostalCode;
  }


  public void setReceiverPostalCode(String receiverPostalCode) {
    
    
    if (receiverPostalCode != null && receiverPostalCode.length() < 1) {
      throw new IllegalArgumentException("Invalid value for receiverPostalCode. Length must be greater than or equal to 1.");
    }
    this.receiverPostalCode = receiverPostalCode;
  }


  public PurchaseOrderUpdateRequest receiverCity(String receiverCity) {
    
    
    if (receiverCity != null && receiverCity.length() < 1) {
      throw new IllegalArgumentException("Invalid value for receiverCity. Length must be greater than or equal to 1.");
    }
    
    this.receiverCity = receiverCity;
    return this;
  }

   /**
   * Get receiverCity
   * @return receiverCity
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")

  public String getReceiverCity() {
    return receiverCity;
  }


  public void setReceiverCity(String receiverCity) {
    
    
    if (receiverCity != null && receiverCity.length() < 1) {
      throw new IllegalArgumentException("Invalid value for receiverCity. Length must be greater than or equal to 1.");
    }
    this.receiverCity = receiverCity;
  }


  public PurchaseOrderUpdateRequest receiverStateProvince(String receiverStateProvince) {
    
    
    
    
    this.receiverStateProvince = receiverStateProvince;
    return this;
  }

   /**
   * Get receiverStateProvince
   * @return receiverStateProvince
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getReceiverStateProvince() {
    return receiverStateProvince;
  }


  public void setReceiverStateProvince(String receiverStateProvince) {
    
    
    
    this.receiverStateProvince = receiverStateProvince;
  }


  public PurchaseOrderUpdateRequest receiverCountry(String receiverCountry) {
    
    
    if (receiverCountry != null && receiverCountry.length() < 1) {
      throw new IllegalArgumentException("Invalid value for receiverCountry. Length must be greater than or equal to 1.");
    }
    
    this.receiverCountry = receiverCountry;
    return this;
  }

   /**
   * Get receiverCountry
   * @return receiverCountry
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")

  public String getReceiverCountry() {
    return receiverCountry;
  }


  public void setReceiverCountry(String receiverCountry) {
    
    
    if (receiverCountry != null && receiverCountry.length() < 1) {
      throw new IllegalArgumentException("Invalid value for receiverCountry. Length must be greater than or equal to 1.");
    }
    this.receiverCountry = receiverCountry;
  }


  public PurchaseOrderUpdateRequest receiverAddress(Integer receiverAddress) {
    
    
    
    
    this.receiverAddress = receiverAddress;
    return this;
  }

   /**
   * Get receiverAddress
   * @return receiverAddress
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")

  public Integer getReceiverAddress() {
    return receiverAddress;
  }


  public void setReceiverAddress(Integer receiverAddress) {
    
    
    
    this.receiverAddress = receiverAddress;
  }


  public PurchaseOrderUpdateRequest promiseDate(OffsetDateTime promiseDate) {
    
    
    
    
    this.promiseDate = promiseDate;
    return this;
  }

   /**
   * Get promiseDate
   * @return promiseDate
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")

  public OffsetDateTime getPromiseDate() {
    return promiseDate;
  }


  public void setPromiseDate(OffsetDateTime promiseDate) {
    
    
    
    this.promiseDate = promiseDate;
  }


  public PurchaseOrderUpdateRequest freight(BigDecimal freight) {
    
    
    
    
    this.freight = freight;
    return this;
  }

   /**
   * Get freight
   * @return freight
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public BigDecimal getFreight() {
    return freight;
  }


  public void setFreight(BigDecimal freight) {
    
    
    
    this.freight = freight;
  }


  public PurchaseOrderUpdateRequest discount(Map<String, Object> discount) {
    
    
    
    
    this.discount = discount;
    return this;
  }

  public PurchaseOrderUpdateRequest putDiscountItem(String key, Object discountItem) {
    this.discount.put(key, discountItem);
    return this;
  }

   /**
   * Get discount
   * @return discount
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")

  public Map<String, Object> getDiscount() {
    return discount;
  }


  public void setDiscount(Map<String, Object> discount) {
    
    
    
    this.discount = discount;
  }


  public PurchaseOrderUpdateRequest tax(Map<String, Object> tax) {
    
    
    
    
    this.tax = tax;
    return this;
  }

  public PurchaseOrderUpdateRequest putTaxItem(String key, Object taxItem) {
    this.tax.put(key, taxItem);
    return this;
  }

   /**
   * Get tax
   * @return tax
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")

  public Map<String, Object> getTax() {
    return tax;
  }


  public void setTax(Map<String, Object> tax) {
    
    
    
    this.tax = tax;
  }


  public PurchaseOrderUpdateRequest other(BigDecimal other) {
    
    
    
    
    this.other = other;
    return this;
  }

   /**
   * Get other
   * @return other
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public BigDecimal getOther() {
    return other;
  }


  public void setOther(BigDecimal other) {
    
    
    
    this.other = other;
  }


  public PurchaseOrderUpdateRequest disclaimerDescription(String disclaimerDescription) {
    
    
    
    
    this.disclaimerDescription = disclaimerDescription;
    return this;
  }

   /**
   * Get disclaimerDescription
   * @return disclaimerDescription
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getDisclaimerDescription() {
    return disclaimerDescription;
  }


  public void setDisclaimerDescription(String disclaimerDescription) {
    
    
    
    this.disclaimerDescription = disclaimerDescription;
  }


  public PurchaseOrderUpdateRequest disclaimerText(String disclaimerText) {
    
    
    
    
    this.disclaimerText = disclaimerText;
    return this;
  }

   /**
   * Get disclaimerText
   * @return disclaimerText
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getDisclaimerText() {
    return disclaimerText;
  }


  public void setDisclaimerText(String disclaimerText) {
    
    
    
    this.disclaimerText = disclaimerText;
  }


  public PurchaseOrderUpdateRequest paymentTermRef(Integer paymentTermRef) {
    
    
    
    
    this.paymentTermRef = paymentTermRef;
    return this;
  }

   /**
   * Get paymentTermRef
   * @return paymentTermRef
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Integer getPaymentTermRef() {
    return paymentTermRef;
  }


  public void setPaymentTermRef(Integer paymentTermRef) {
    
    
    
    this.paymentTermRef = paymentTermRef;
  }


  public PurchaseOrderUpdateRequest shippingTermRef(Integer shippingTermRef) {
    
    
    
    
    this.shippingTermRef = shippingTermRef;
    return this;
  }

   /**
   * Get shippingTermRef
   * @return shippingTermRef
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Integer getShippingTermRef() {
    return shippingTermRef;
  }


  public void setShippingTermRef(Integer shippingTermRef) {
    
    
    
    this.shippingTermRef = shippingTermRef;
  }


  public PurchaseOrderUpdateRequest paymentMethodRef(Integer paymentMethodRef) {
    
    
    
    
    this.paymentMethodRef = paymentMethodRef;
    return this;
  }

   /**
   * Get paymentMethodRef
   * @return paymentMethodRef
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Integer getPaymentMethodRef() {
    return paymentMethodRef;
  }


  public void setPaymentMethodRef(Integer paymentMethodRef) {
    
    
    
    this.paymentMethodRef = paymentMethodRef;
  }


  public PurchaseOrderUpdateRequest shippingMethodRef(Integer shippingMethodRef) {
    
    
    
    
    this.shippingMethodRef = shippingMethodRef;
    return this;
  }

   /**
   * Get shippingMethodRef
   * @return shippingMethodRef
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Integer getShippingMethodRef() {
    return shippingMethodRef;
  }


  public void setShippingMethodRef(Integer shippingMethodRef) {
    
    
    
    this.shippingMethodRef = shippingMethodRef;
  }


  public PurchaseOrderUpdateRequest creditcard(Integer creditcard) {
    
    
    
    
    this.creditcard = creditcard;
    return this;
  }

   /**
   * Get creditcard
   * @return creditcard
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Integer getCreditcard() {
    return creditcard;
  }


  public void setCreditcard(Integer creditcard) {
    
    
    
    this.creditcard = creditcard;
  }


  public PurchaseOrderUpdateRequest expiryDate(OffsetDateTime expiryDate) {
    
    
    
    
    this.expiryDate = expiryDate;
    return this;
  }

   /**
   * Get expiryDate
   * @return expiryDate
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public OffsetDateTime getExpiryDate() {
    return expiryDate;
  }


  public void setExpiryDate(OffsetDateTime expiryDate) {
    
    
    
    this.expiryDate = expiryDate;
  }


  public PurchaseOrderUpdateRequest contract(Integer contract) {
    
    
    
    
    this.contract = contract;
    return this;
  }

   /**
   * Get contract
   * @return contract
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Integer getContract() {
    return contract;
  }


  public void setContract(Integer contract) {
    
    
    
    this.contract = contract;
  }

  /**
   * A container for additional, undeclared properties.
   * This is a holder for any undeclared properties as specified with
   * the 'additionalProperties' keyword in the OAS document.
   */
  private Map<String, Object> additionalProperties;

  /**
   * Set the additional (undeclared) property with the specified name and value.
   * If the property does not already exist, create it otherwise replace it.
   *
   * @param key name of the property
   * @param value value of the property
   * @return the PurchaseOrderUpdateRequest instance itself
   */
  public PurchaseOrderUpdateRequest putAdditionalProperty(String key, Object value) {
    if (this.additionalProperties == null) {
        this.additionalProperties = new HashMap<String, Object>();
    }
    this.additionalProperties.put(key, value);
    return this;
  }

  /**
   * Return the additional (undeclared) property.
   *
   * @return a map of objects
   */
  public Map<String, Object> getAdditionalProperties() {
    return additionalProperties;
  }

  /**
   * Return the additional (undeclared) property with the specified name.
   *
   * @param key name of the property
   * @return an object
   */
  public Object getAdditionalProperty(String key) {
    if (this.additionalProperties == null) {
        return null;
    }
    return this.additionalProperties.get(key);
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    PurchaseOrderUpdateRequest purchaseOrderUpdateRequest = (PurchaseOrderUpdateRequest) o;
    return Objects.equals(this.version, purchaseOrderUpdateRequest.version) &&
        Objects.equals(this.orderItems, purchaseOrderUpdateRequest.orderItems) &&
        Objects.equals(this.customFields, purchaseOrderUpdateRequest.customFields) &&
        Objects.equals(this.poNum, purchaseOrderUpdateRequest.poNum) &&
        Objects.equals(this.buyerName, purchaseOrderUpdateRequest.buyerName) &&
        Objects.equals(this.buyerContact, purchaseOrderUpdateRequest.buyerContact) &&
        Objects.equals(this.buyerAddressLineOne, purchaseOrderUpdateRequest.buyerAddressLineOne) &&
        Objects.equals(this.buyerPostalCode, purchaseOrderUpdateRequest.buyerPostalCode) &&
        Objects.equals(this.buyerCity, purchaseOrderUpdateRequest.buyerCity) &&
        Objects.equals(this.buyerStateProvince, purchaseOrderUpdateRequest.buyerStateProvince) &&
        Objects.equals(this.buyerCountry, purchaseOrderUpdateRequest.buyerCountry) &&
        Objects.equals(this.buyerAddress, purchaseOrderUpdateRequest.buyerAddress) &&
        Objects.equals(this.comment, purchaseOrderUpdateRequest.comment) &&
        Objects.equals(this.receiverName, purchaseOrderUpdateRequest.receiverName) &&
        Objects.equals(this.receiverContact, purchaseOrderUpdateRequest.receiverContact) &&
        Objects.equals(this.receiverAddressLineOne, purchaseOrderUpdateRequest.receiverAddressLineOne) &&
        Objects.equals(this.receiverPostalCode, purchaseOrderUpdateRequest.receiverPostalCode) &&
        Objects.equals(this.receiverCity, purchaseOrderUpdateRequest.receiverCity) &&
        Objects.equals(this.receiverStateProvince, purchaseOrderUpdateRequest.receiverStateProvince) &&
        Objects.equals(this.receiverCountry, purchaseOrderUpdateRequest.receiverCountry) &&
        Objects.equals(this.receiverAddress, purchaseOrderUpdateRequest.receiverAddress) &&
        Objects.equals(this.promiseDate, purchaseOrderUpdateRequest.promiseDate) &&
        Objects.equals(this.freight, purchaseOrderUpdateRequest.freight) &&
        Objects.equals(this.discount, purchaseOrderUpdateRequest.discount) &&
        Objects.equals(this.tax, purchaseOrderUpdateRequest.tax) &&
        Objects.equals(this.other, purchaseOrderUpdateRequest.other) &&
        Objects.equals(this.disclaimerDescription, purchaseOrderUpdateRequest.disclaimerDescription) &&
        Objects.equals(this.disclaimerText, purchaseOrderUpdateRequest.disclaimerText) &&
        Objects.equals(this.paymentTermRef, purchaseOrderUpdateRequest.paymentTermRef) &&
        Objects.equals(this.shippingTermRef, purchaseOrderUpdateRequest.shippingTermRef) &&
        Objects.equals(this.paymentMethodRef, purchaseOrderUpdateRequest.paymentMethodRef) &&
        Objects.equals(this.shippingMethodRef, purchaseOrderUpdateRequest.shippingMethodRef) &&
        Objects.equals(this.creditcard, purchaseOrderUpdateRequest.creditcard) &&
        Objects.equals(this.expiryDate, purchaseOrderUpdateRequest.expiryDate) &&
        Objects.equals(this.contract, purchaseOrderUpdateRequest.contract)&&
        Objects.equals(this.additionalProperties, purchaseOrderUpdateRequest.additionalProperties);
  }

  private static <T> boolean equalsNullable(JsonNullable<T> a, JsonNullable<T> b) {
    return a == b || (a != null && b != null && a.isPresent() && b.isPresent() && Objects.deepEquals(a.get(), b.get()));
  }

  @Override
  public int hashCode() {
    return Objects.hash(version, orderItems, customFields, poNum, buyerName, buyerContact, buyerAddressLineOne, buyerPostalCode, buyerCity, buyerStateProvince, buyerCountry, buyerAddress, comment, receiverName, receiverContact, receiverAddressLineOne, receiverPostalCode, receiverCity, receiverStateProvince, receiverCountry, receiverAddress, promiseDate, freight, discount, tax, other, disclaimerDescription, disclaimerText, paymentTermRef, shippingTermRef, paymentMethodRef, shippingMethodRef, creditcard, expiryDate, contract, additionalProperties);
  }

  private static <T> int hashCodeNullable(JsonNullable<T> a) {
    if (a == null) {
      return 1;
    }
    return a.isPresent() ? Arrays.deepHashCode(new Object[]{a.get()}) : 31;
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class PurchaseOrderUpdateRequest {\n");
    sb.append("    version: ").append(toIndentedString(version)).append("\n");
    sb.append("    orderItems: ").append(toIndentedString(orderItems)).append("\n");
    sb.append("    customFields: ").append(toIndentedString(customFields)).append("\n");
    sb.append("    poNum: ").append(toIndentedString(poNum)).append("\n");
    sb.append("    buyerName: ").append(toIndentedString(buyerName)).append("\n");
    sb.append("    buyerContact: ").append(toIndentedString(buyerContact)).append("\n");
    sb.append("    buyerAddressLineOne: ").append(toIndentedString(buyerAddressLineOne)).append("\n");
    sb.append("    buyerPostalCode: ").append(toIndentedString(buyerPostalCode)).append("\n");
    sb.append("    buyerCity: ").append(toIndentedString(buyerCity)).append("\n");
    sb.append("    buyerStateProvince: ").append(toIndentedString(buyerStateProvince)).append("\n");
    sb.append("    buyerCountry: ").append(toIndentedString(buyerCountry)).append("\n");
    sb.append("    buyerAddress: ").append(toIndentedString(buyerAddress)).append("\n");
    sb.append("    comment: ").append(toIndentedString(comment)).append("\n");
    sb.append("    receiverName: ").append(toIndentedString(receiverName)).append("\n");
    sb.append("    receiverContact: ").append(toIndentedString(receiverContact)).append("\n");
    sb.append("    receiverAddressLineOne: ").append(toIndentedString(receiverAddressLineOne)).append("\n");
    sb.append("    receiverPostalCode: ").append(toIndentedString(receiverPostalCode)).append("\n");
    sb.append("    receiverCity: ").append(toIndentedString(receiverCity)).append("\n");
    sb.append("    receiverStateProvince: ").append(toIndentedString(receiverStateProvince)).append("\n");
    sb.append("    receiverCountry: ").append(toIndentedString(receiverCountry)).append("\n");
    sb.append("    receiverAddress: ").append(toIndentedString(receiverAddress)).append("\n");
    sb.append("    promiseDate: ").append(toIndentedString(promiseDate)).append("\n");
    sb.append("    freight: ").append(toIndentedString(freight)).append("\n");
    sb.append("    discount: ").append(toIndentedString(discount)).append("\n");
    sb.append("    tax: ").append(toIndentedString(tax)).append("\n");
    sb.append("    other: ").append(toIndentedString(other)).append("\n");
    sb.append("    disclaimerDescription: ").append(toIndentedString(disclaimerDescription)).append("\n");
    sb.append("    disclaimerText: ").append(toIndentedString(disclaimerText)).append("\n");
    sb.append("    paymentTermRef: ").append(toIndentedString(paymentTermRef)).append("\n");
    sb.append("    shippingTermRef: ").append(toIndentedString(shippingTermRef)).append("\n");
    sb.append("    paymentMethodRef: ").append(toIndentedString(paymentMethodRef)).append("\n");
    sb.append("    shippingMethodRef: ").append(toIndentedString(shippingMethodRef)).append("\n");
    sb.append("    creditcard: ").append(toIndentedString(creditcard)).append("\n");
    sb.append("    expiryDate: ").append(toIndentedString(expiryDate)).append("\n");
    sb.append("    contract: ").append(toIndentedString(contract)).append("\n");
    sb.append("    additionalProperties: ").append(toIndentedString(additionalProperties)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("version");
    openapiFields.add("order_items");
    openapiFields.add("custom_fields");
    openapiFields.add("PO_Num");
    openapiFields.add("buyer_name");
    openapiFields.add("buyer_contact");
    openapiFields.add("buyer_addressLineOne");
    openapiFields.add("buyer_postalCode");
    openapiFields.add("buyer_city");
    openapiFields.add("buyer_state_province");
    openapiFields.add("buyer_country");
    openapiFields.add("buyer_address");
    openapiFields.add("comment");
    openapiFields.add("receiver_name");
    openapiFields.add("receiver_contact");
    openapiFields.add("receiver_addressLineOne");
    openapiFields.add("receiver_postalCode");
    openapiFields.add("receiver_city");
    openapiFields.add("receiver_state_province");
    openapiFields.add("receiver_country");
    openapiFields.add("receiver_address");
    openapiFields.add("promise_date");
    openapiFields.add("freight");
    openapiFields.add("discount");
    openapiFields.add("tax");
    openapiFields.add("other");
    openapiFields.add("disclaimer_description");
    openapiFields.add("disclaimer_text");
    openapiFields.add("payment_term_ref");
    openapiFields.add("shipping_term_ref");
    openapiFields.add("payment_method_ref");
    openapiFields.add("shipping_method_ref");
    openapiFields.add("creditcard");
    openapiFields.add("expiry_date");
    openapiFields.add("contract");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
    openapiRequiredFields.add("version");
    openapiRequiredFields.add("order_items");
    openapiRequiredFields.add("buyer_name");
    openapiRequiredFields.add("buyer_contact");
    openapiRequiredFields.add("buyer_addressLineOne");
    openapiRequiredFields.add("buyer_postalCode");
    openapiRequiredFields.add("buyer_city");
    openapiRequiredFields.add("buyer_country");
    openapiRequiredFields.add("buyer_address");
    openapiRequiredFields.add("receiver_name");
    openapiRequiredFields.add("receiver_contact");
    openapiRequiredFields.add("receiver_addressLineOne");
    openapiRequiredFields.add("receiver_postalCode");
    openapiRequiredFields.add("receiver_city");
    openapiRequiredFields.add("receiver_country");
    openapiRequiredFields.add("receiver_address");
    openapiRequiredFields.add("promise_date");
    openapiRequiredFields.add("discount");
    openapiRequiredFields.add("tax");
  }

 /**
  * Validates the JSON Object and throws an exception if issues found
  *
  * @param jsonObj JSON Object
  * @throws IOException if the JSON Object is invalid with respect to PurchaseOrderUpdateRequest
  */
  public static void validateJsonObject(JsonObject jsonObj) throws IOException {
      if (jsonObj == null) {
        if (!PurchaseOrderUpdateRequest.openapiRequiredFields.isEmpty()) { // has required fields but JSON object is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in PurchaseOrderUpdateRequest is not found in the empty JSON string", PurchaseOrderUpdateRequest.openapiRequiredFields.toString()));
        }
      }

      // check to make sure all required properties/fields are present in the JSON string
      for (String requiredField : PurchaseOrderUpdateRequest.openapiRequiredFields) {
        if (jsonObj.get(requiredField) == null) {
          throw new IllegalArgumentException(String.format("The required field `%s` is not found in the JSON string: %s", requiredField, jsonObj.toString()));
        }
      }
      // ensure the json data is an array
      if (!jsonObj.get("order_items").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `order_items` to be an array in the JSON string but got `%s`", jsonObj.get("order_items").toString()));
      }

      JsonArray jsonArrayorderItems = jsonObj.getAsJsonArray("order_items");
      // validate the required field `order_items` (array)
      for (int i = 0; i < jsonArrayorderItems.size(); i++) {
        OrderItemPurchaseEditRequest.validateJsonObject(jsonArrayorderItems.get(i).getAsJsonObject());
      };
      // ensure the optional json data is an array if present
      if (jsonObj.get("custom_fields") != null && !jsonObj.get("custom_fields").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `custom_fields` to be an array in the JSON string but got `%s`", jsonObj.get("custom_fields").toString()));
      }
      if (!jsonObj.get("PO_Num").isJsonNull() && (jsonObj.get("PO_Num") != null && !jsonObj.get("PO_Num").isJsonNull()) && !jsonObj.get("PO_Num").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `PO_Num` to be a primitive type in the JSON string but got `%s`", jsonObj.get("PO_Num").toString()));
      }
      if (!jsonObj.get("buyer_name").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `buyer_name` to be a primitive type in the JSON string but got `%s`", jsonObj.get("buyer_name").toString()));
      }
      if (!jsonObj.get("buyer_contact").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `buyer_contact` to be a primitive type in the JSON string but got `%s`", jsonObj.get("buyer_contact").toString()));
      }
      if (!jsonObj.get("buyer_addressLineOne").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `buyer_addressLineOne` to be a primitive type in the JSON string but got `%s`", jsonObj.get("buyer_addressLineOne").toString()));
      }
      if (!jsonObj.get("buyer_postalCode").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `buyer_postalCode` to be a primitive type in the JSON string but got `%s`", jsonObj.get("buyer_postalCode").toString()));
      }
      if (!jsonObj.get("buyer_city").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `buyer_city` to be a primitive type in the JSON string but got `%s`", jsonObj.get("buyer_city").toString()));
      }
      if ((jsonObj.get("buyer_state_province") != null && !jsonObj.get("buyer_state_province").isJsonNull()) && !jsonObj.get("buyer_state_province").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `buyer_state_province` to be a primitive type in the JSON string but got `%s`", jsonObj.get("buyer_state_province").toString()));
      }
      if (!jsonObj.get("buyer_country").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `buyer_country` to be a primitive type in the JSON string but got `%s`", jsonObj.get("buyer_country").toString()));
      }
      if (!jsonObj.get("comment").isJsonNull() && (jsonObj.get("comment") != null && !jsonObj.get("comment").isJsonNull()) && !jsonObj.get("comment").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `comment` to be a primitive type in the JSON string but got `%s`", jsonObj.get("comment").toString()));
      }
      if (!jsonObj.get("receiver_name").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `receiver_name` to be a primitive type in the JSON string but got `%s`", jsonObj.get("receiver_name").toString()));
      }
      if (!jsonObj.get("receiver_contact").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `receiver_contact` to be a primitive type in the JSON string but got `%s`", jsonObj.get("receiver_contact").toString()));
      }
      if (!jsonObj.get("receiver_addressLineOne").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `receiver_addressLineOne` to be a primitive type in the JSON string but got `%s`", jsonObj.get("receiver_addressLineOne").toString()));
      }
      if (!jsonObj.get("receiver_postalCode").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `receiver_postalCode` to be a primitive type in the JSON string but got `%s`", jsonObj.get("receiver_postalCode").toString()));
      }
      if (!jsonObj.get("receiver_city").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `receiver_city` to be a primitive type in the JSON string but got `%s`", jsonObj.get("receiver_city").toString()));
      }
      if ((jsonObj.get("receiver_state_province") != null && !jsonObj.get("receiver_state_province").isJsonNull()) && !jsonObj.get("receiver_state_province").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `receiver_state_province` to be a primitive type in the JSON string but got `%s`", jsonObj.get("receiver_state_province").toString()));
      }
      if (!jsonObj.get("receiver_country").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `receiver_country` to be a primitive type in the JSON string but got `%s`", jsonObj.get("receiver_country").toString()));
      }
      if (!jsonObj.get("freight").isJsonNull() && (jsonObj.get("freight") != null && !jsonObj.get("freight").isJsonNull()) && !jsonObj.get("freight").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `freight` to be a primitive type in the JSON string but got `%s`", jsonObj.get("freight").toString()));
      }
      if (!jsonObj.get("other").isJsonNull() && (jsonObj.get("other") != null && !jsonObj.get("other").isJsonNull()) && !jsonObj.get("other").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `other` to be a primitive type in the JSON string but got `%s`", jsonObj.get("other").toString()));
      }
      if (!jsonObj.get("disclaimer_description").isJsonNull() && (jsonObj.get("disclaimer_description") != null && !jsonObj.get("disclaimer_description").isJsonNull()) && !jsonObj.get("disclaimer_description").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `disclaimer_description` to be a primitive type in the JSON string but got `%s`", jsonObj.get("disclaimer_description").toString()));
      }
      if (!jsonObj.get("disclaimer_text").isJsonNull() && (jsonObj.get("disclaimer_text") != null && !jsonObj.get("disclaimer_text").isJsonNull()) && !jsonObj.get("disclaimer_text").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `disclaimer_text` to be a primitive type in the JSON string but got `%s`", jsonObj.get("disclaimer_text").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!PurchaseOrderUpdateRequest.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'PurchaseOrderUpdateRequest' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<PurchaseOrderUpdateRequest> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(PurchaseOrderUpdateRequest.class));

       return (TypeAdapter<T>) new TypeAdapter<PurchaseOrderUpdateRequest>() {
           @Override
           public void write(JsonWriter out, PurchaseOrderUpdateRequest value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             obj.remove("additionalProperties");
             // serialize additonal properties
             if (value.getAdditionalProperties() != null) {
               for (Map.Entry<String, Object> entry : value.getAdditionalProperties().entrySet()) {
                 if (entry.getValue() instanceof String)
                   obj.addProperty(entry.getKey(), (String) entry.getValue());
                 else if (entry.getValue() instanceof Number)
                   obj.addProperty(entry.getKey(), (Number) entry.getValue());
                 else if (entry.getValue() instanceof Boolean)
                   obj.addProperty(entry.getKey(), (Boolean) entry.getValue());
                 else if (entry.getValue() instanceof Character)
                   obj.addProperty(entry.getKey(), (Character) entry.getValue());
                 else {
                   obj.add(entry.getKey(), gson.toJsonTree(entry.getValue()).getAsJsonObject());
                 }
               }
             }
             elementAdapter.write(out, obj);
           }

           @Override
           public PurchaseOrderUpdateRequest read(JsonReader in) throws IOException {
             JsonObject jsonObj = elementAdapter.read(in).getAsJsonObject();
             validateJsonObject(jsonObj);
             // store additional fields in the deserialized instance
             PurchaseOrderUpdateRequest instance = thisAdapter.fromJsonTree(jsonObj);
             for (Map.Entry<String, JsonElement> entry : jsonObj.entrySet()) {
               if (!openapiFields.contains(entry.getKey())) {
                 if (entry.getValue().isJsonPrimitive()) { // primitive type
                   if (entry.getValue().getAsJsonPrimitive().isString())
                     instance.putAdditionalProperty(entry.getKey(), entry.getValue().getAsString());
                   else if (entry.getValue().getAsJsonPrimitive().isNumber())
                     instance.putAdditionalProperty(entry.getKey(), entry.getValue().getAsNumber());
                   else if (entry.getValue().getAsJsonPrimitive().isBoolean())
                     instance.putAdditionalProperty(entry.getKey(), entry.getValue().getAsBoolean());
                   else
                     throw new IllegalArgumentException(String.format("The field `%s` has unknown primitive type. Value: %s", entry.getKey(), entry.getValue().toString()));
                 } else if (entry.getValue().isJsonArray()) {
                     instance.putAdditionalProperty(entry.getKey(), gson.fromJson(entry.getValue(), List.class));
                 } else { // JSON object
                     instance.putAdditionalProperty(entry.getKey(), gson.fromJson(entry.getValue(), HashMap.class));
                 }
               }
             }
             return instance;
           }

       }.nullSafe();
    }
  }

 /**
  * Create an instance of PurchaseOrderUpdateRequest given an JSON string
  *
  * @param jsonString JSON string
  * @return An instance of PurchaseOrderUpdateRequest
  * @throws IOException if the JSON string is invalid with respect to PurchaseOrderUpdateRequest
  */
  public static PurchaseOrderUpdateRequest fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, PurchaseOrderUpdateRequest.class);
  }

 /**
  * Convert an instance of PurchaseOrderUpdateRequest to an JSON string
  *
  * @return JSON string
  */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

