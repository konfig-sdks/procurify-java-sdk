/*
 * Procurify API Documentation
 *  # Disclaimer  - Procurify’s API is evolving and is subject to change at any time. Additionally, aspects of the API are undocumented, including certain methods, events, and properties. Given that both documented and undocumented aspects of the Procurify API may change at any time, the client relies on the API at their own risk. - Client (and/or client’s representative) is responsible for building, testing, and maintaining any API connection between Procurify and any other tool.  Procurify’s responsibility strictly involves providing support on clarifications in regards to the issued API document. - Procurify’s API is offered on an “as is” and “as available” basis, without warranties of any kind. By accepting this agreement, you agree that you have read the current API documentation, and accept the API functionality in its current state including current limitations. For questions and clarification around the documentation, please contact support@procurify.com. - In accordance with Section 2.(b) of our Subscription Services Agreement, Procurify reserves the right to deny access to our API at any time. If your API requests are too large and time out, contact us immediately to avoid possible suspension of access. - You may not attempt to reverse engineer or otherwise derive source code, trade secrets, or know-how in the Procurify API or portion thereof. You may not use the Procurify API to replicate or compete with core products or services offered by Procurify. 
 *
 * The version of the OpenAPI document: 
 * 
 *
 * NOTE: This class is auto generated by Konfig (https://konfigthis.com).
 * Do not edit the class manually.
 */


package com.konfigthis.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import com.konfigthis.client.model.CreditCard;
import com.konfigthis.client.model.NestedVendorRequest;
import com.konfigthis.client.model.PaymentMethodNullable;
import com.konfigthis.client.model.PaymentMethodRead;
import com.konfigthis.client.model.PaymentTermNullable;
import com.konfigthis.client.model.ShippingMethodNullable;
import com.konfigthis.client.model.ShippingTermNullable;
import com.konfigthis.client.model.VendorTypeEnum;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.math.BigDecimal;
import java.time.OffsetDateTime;
import java.util.ArrayList;
import java.util.List;
import org.openapitools.jackson.nullable.JsonNullable;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import org.apache.commons.lang3.StringUtils;

import java.lang.reflect.Type;
import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Map.Entry;
import java.util.Set;

import com.konfigthis.client.JSON;

/**
 * OptimizedVendor
 */@javax.annotation.Generated(value = "Generated by https://konfigthis.com")
public class OptimizedVendor {
  public static final String SERIALIZED_NAME_ID = "id";
  @SerializedName(SERIALIZED_NAME_ID)
  private Integer id;

  public static final String SERIALIZED_NAME_NAME = "name";
  @SerializedName(SERIALIZED_NAME_NAME)
  private String name;

  public static final String SERIALIZED_NAME_ACTIVE = "active";
  @SerializedName(SERIALIZED_NAME_ACTIVE)
  private Boolean active;

  public static final String SERIALIZED_NAME_ADDRESS_LINE_ONE = "addressLineOne";
  @SerializedName(SERIALIZED_NAME_ADDRESS_LINE_ONE)
  private String addressLineOne;

  public static final String SERIALIZED_NAME_ADDRESS_LINE_TWO = "addressLineTwo";
  @SerializedName(SERIALIZED_NAME_ADDRESS_LINE_TWO)
  private String addressLineTwo;

  public static final String SERIALIZED_NAME_POSTAL_CODE = "postalCode";
  @SerializedName(SERIALIZED_NAME_POSTAL_CODE)
  private String postalCode;

  public static final String SERIALIZED_NAME_CITY = "city";
  @SerializedName(SERIALIZED_NAME_CITY)
  private String city;

  public static final String SERIALIZED_NAME_STATE_PROVINCE = "state_province";
  @SerializedName(SERIALIZED_NAME_STATE_PROVINCE)
  private String stateProvince;

  public static final String SERIALIZED_NAME_COUNTRY = "country";
  @SerializedName(SERIALIZED_NAME_COUNTRY)
  private String country;

  public static final String SERIALIZED_NAME_PHONE_ONE = "phoneOne";
  @SerializedName(SERIALIZED_NAME_PHONE_ONE)
  private String phoneOne;

  public static final String SERIALIZED_NAME_PHONE_TWO = "phoneTwo";
  @SerializedName(SERIALIZED_NAME_PHONE_TWO)
  private String phoneTwo;

  public static final String SERIALIZED_NAME_FAX = "fax";
  @SerializedName(SERIALIZED_NAME_FAX)
  private String fax;

  public static final String SERIALIZED_NAME_EMAIL = "email";
  @SerializedName(SERIALIZED_NAME_EMAIL)
  private List<String> email = new ArrayList<>();

  public static final String SERIALIZED_NAME_COMMENTS = "comments";
  @SerializedName(SERIALIZED_NAME_COMMENTS)
  private String comments;

  public static final String SERIALIZED_NAME_CONTACT = "contact";
  @SerializedName(SERIALIZED_NAME_CONTACT)
  private String contact;

  public static final String SERIALIZED_NAME_URL = "url";
  @SerializedName(SERIALIZED_NAME_URL)
  private String url;

  public static final String SERIALIZED_NAME_EXTERNAL_ID = "external_id";
  @SerializedName(SERIALIZED_NAME_EXTERNAL_ID)
  private String externalId;

  public static final String SERIALIZED_NAME_DATE_MODIFIED = "dateModified";
  @SerializedName(SERIALIZED_NAME_DATE_MODIFIED)
  private OffsetDateTime dateModified;

  public static final String SERIALIZED_NAME_CURRENCY = "currency";
  @SerializedName(SERIALIZED_NAME_CURRENCY)
  private Integer currency;

  public static final String SERIALIZED_NAME_PAYMENT_TERM_REF = "payment_term_ref";
  @SerializedName(SERIALIZED_NAME_PAYMENT_TERM_REF)
  private PaymentTermNullable paymentTermRef;

  public static final String SERIALIZED_NAME_SHIPPING_TERM_REF = "shipping_term_ref";
  @SerializedName(SERIALIZED_NAME_SHIPPING_TERM_REF)
  private ShippingTermNullable shippingTermRef;

  public static final String SERIALIZED_NAME_PAYMENT_METHOD_REF = "payment_method_ref";
  @SerializedName(SERIALIZED_NAME_PAYMENT_METHOD_REF)
  private PaymentMethodNullable paymentMethodRef;

  public static final String SERIALIZED_NAME_SHIPPING_METHOD_REF = "shipping_method_ref";
  @SerializedName(SERIALIZED_NAME_SHIPPING_METHOD_REF)
  private ShippingMethodNullable shippingMethodRef;

  public static final String SERIALIZED_NAME_PAYMENT_METHODS = "payment_methods";
  @SerializedName(SERIALIZED_NAME_PAYMENT_METHODS)
  private List<PaymentMethodRead> paymentMethods = null;

  public static final String SERIALIZED_NAME_TAX = "tax";
  @SerializedName(SERIALIZED_NAME_TAX)
  private Integer tax;

  public static final String SERIALIZED_NAME_TYPE = "type";
  @SerializedName(SERIALIZED_NAME_TYPE)
  private VendorTypeEnum type;

  public static final String SERIALIZED_NAME_DEFAULT_PAYMENT_METHOD = "default_payment_method";
  @SerializedName(SERIALIZED_NAME_DEFAULT_PAYMENT_METHOD)
  private Integer defaultPaymentMethod;

  public static final String SERIALIZED_NAME_CREDITCARDS = "creditcards";
  @SerializedName(SERIALIZED_NAME_CREDITCARDS)
  private List<CreditCard> creditcards = null;

  public static final String SERIALIZED_NAME_IS1099_ELIGIBLE = "is_1099_eligible";
  @SerializedName(SERIALIZED_NAME_IS1099_ELIGIBLE)
  private Boolean is1099Eligible;

  public static final String SERIALIZED_NAME_OVERALL_SCORE = "overall_score";
  @SerializedName(SERIALIZED_NAME_OVERALL_SCORE)
  private BigDecimal overallScore;

  public static final String SERIALIZED_NAME_IS_AUTO_EMAIL_PO_ENABLED = "is_auto_email_po_enabled";
  @SerializedName(SERIALIZED_NAME_IS_AUTO_EMAIL_PO_ENABLED)
  private Boolean isAutoEmailPoEnabled;

  public static final String SERIALIZED_NAME_PO_PDF_LABELS = "po_pdf_labels";
  @SerializedName(SERIALIZED_NAME_PO_PDF_LABELS)
  private String poPdfLabels;

  public static final String SERIALIZED_NAME_VENDOR_REQUEST = "vendor_request";
  @SerializedName(SERIALIZED_NAME_VENDOR_REQUEST)
  private NestedVendorRequest vendorRequest;

  public OptimizedVendor() {
  }

  
  public OptimizedVendor(
     Integer id, 
     OffsetDateTime dateModified, 
     List<PaymentMethodRead> paymentMethods, 
     List<CreditCard> creditcards
  ) {
    this();
    this.id = id;
    this.dateModified = dateModified;
    this.paymentMethods = paymentMethods;
    this.creditcards = creditcards;
  }

   /**
   * Get id
   * @return id
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Integer getId() {
    return id;
  }




  public OptimizedVendor name(String name) {
    
    
    
    
    this.name = name;
    return this;
  }

   /**
   * Name of the vendor
   * @return name
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "Name of the vendor")

  public String getName() {
    return name;
  }


  public void setName(String name) {
    
    
    
    this.name = name;
  }


  public OptimizedVendor active(Boolean active) {
    
    
    
    
    this.active = active;
    return this;
  }

   /**
   * Get active
   * @return active
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Boolean getActive() {
    return active;
  }


  public void setActive(Boolean active) {
    
    
    
    this.active = active;
  }


  public OptimizedVendor addressLineOne(String addressLineOne) {
    
    
    
    
    this.addressLineOne = addressLineOne;
    return this;
  }

   /**
   * First line of address
   * @return addressLineOne
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "First line of address")

  public String getAddressLineOne() {
    return addressLineOne;
  }


  public void setAddressLineOne(String addressLineOne) {
    
    
    
    this.addressLineOne = addressLineOne;
  }


  public OptimizedVendor addressLineTwo(String addressLineTwo) {
    
    
    
    
    this.addressLineTwo = addressLineTwo;
    return this;
  }

   /**
   * Second line of address
   * @return addressLineTwo
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Second line of address")

  public String getAddressLineTwo() {
    return addressLineTwo;
  }


  public void setAddressLineTwo(String addressLineTwo) {
    
    
    
    this.addressLineTwo = addressLineTwo;
  }


  public OptimizedVendor postalCode(String postalCode) {
    
    
    
    
    this.postalCode = postalCode;
    return this;
  }

   /**
   * Postal or Zip code of the vendor
   * @return postalCode
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Postal or Zip code of the vendor")

  public String getPostalCode() {
    return postalCode;
  }


  public void setPostalCode(String postalCode) {
    
    
    
    this.postalCode = postalCode;
  }


  public OptimizedVendor city(String city) {
    
    
    
    
    this.city = city;
    return this;
  }

   /**
   * City of the vendor
   * @return city
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "City of the vendor")

  public String getCity() {
    return city;
  }


  public void setCity(String city) {
    
    
    
    this.city = city;
  }


  public OptimizedVendor stateProvince(String stateProvince) {
    
    
    
    
    this.stateProvince = stateProvince;
    return this;
  }

   /**
   * State or Province of the vendor
   * @return stateProvince
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "State or Province of the vendor")

  public String getStateProvince() {
    return stateProvince;
  }


  public void setStateProvince(String stateProvince) {
    
    
    
    this.stateProvince = stateProvince;
  }


  public OptimizedVendor country(String country) {
    
    
    
    
    this.country = country;
    return this;
  }

   /**
   * Country of the vendor
   * @return country
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Country of the vendor")

  public String getCountry() {
    return country;
  }


  public void setCountry(String country) {
    
    
    
    this.country = country;
  }


  public OptimizedVendor phoneOne(String phoneOne) {
    
    
    
    
    this.phoneOne = phoneOne;
    return this;
  }

   /**
   * Primary phone no. of the vendor
   * @return phoneOne
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Primary phone no. of the vendor")

  public String getPhoneOne() {
    return phoneOne;
  }


  public void setPhoneOne(String phoneOne) {
    
    
    
    this.phoneOne = phoneOne;
  }


  public OptimizedVendor phoneTwo(String phoneTwo) {
    
    
    
    
    this.phoneTwo = phoneTwo;
    return this;
  }

   /**
   * Secondary phone no. of the vendor
   * @return phoneTwo
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Secondary phone no. of the vendor")

  public String getPhoneTwo() {
    return phoneTwo;
  }


  public void setPhoneTwo(String phoneTwo) {
    
    
    
    this.phoneTwo = phoneTwo;
  }


  public OptimizedVendor fax(String fax) {
    
    
    
    
    this.fax = fax;
    return this;
  }

   /**
   * Fax no. of the vendor
   * @return fax
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Fax no. of the vendor")

  public String getFax() {
    return fax;
  }


  public void setFax(String fax) {
    
    
    
    this.fax = fax;
  }


  public OptimizedVendor email(List<String> email) {
    
    
    
    
    this.email = email;
    return this;
  }

  public OptimizedVendor addEmailItem(String emailItem) {
    this.email.add(emailItem);
    return this;
  }

   /**
   * Get email
   * @return email
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")

  public List<String> getEmail() {
    return email;
  }


  public void setEmail(List<String> email) {
    
    
    
    this.email = email;
  }


  public OptimizedVendor comments(String comments) {
    
    
    
    
    this.comments = comments;
    return this;
  }

   /**
   * Notes about the vendor
   * @return comments
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Notes about the vendor")

  public String getComments() {
    return comments;
  }


  public void setComments(String comments) {
    
    
    
    this.comments = comments;
  }


  public OptimizedVendor contact(String contact) {
    
    
    
    
    this.contact = contact;
    return this;
  }

   /**
   * Contact person of the vendor
   * @return contact
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Contact person of the vendor")

  public String getContact() {
    return contact;
  }


  public void setContact(String contact) {
    
    
    
    this.contact = contact;
  }


  public OptimizedVendor url(String url) {
    
    
    
    
    this.url = url;
    return this;
  }

   /**
   * Website of the vendor
   * @return url
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Website of the vendor")

  public String getUrl() {
    return url;
  }


  public void setUrl(String url) {
    
    
    
    this.url = url;
  }


  public OptimizedVendor externalId(String externalId) {
    
    
    
    
    this.externalId = externalId;
    return this;
  }

   /**
   * External id of the vendor
   * @return externalId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "External id of the vendor")

  public String getExternalId() {
    return externalId;
  }


  public void setExternalId(String externalId) {
    
    
    
    this.externalId = externalId;
  }


   /**
   * Get dateModified
   * @return dateModified
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public OffsetDateTime getDateModified() {
    return dateModified;
  }




  public OptimizedVendor currency(Integer currency) {
    
    
    
    
    this.currency = currency;
    return this;
  }

   /**
   * Get currency
   * @return currency
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Integer getCurrency() {
    return currency;
  }


  public void setCurrency(Integer currency) {
    
    
    
    this.currency = currency;
  }


  public OptimizedVendor paymentTermRef(PaymentTermNullable paymentTermRef) {
    
    
    
    
    this.paymentTermRef = paymentTermRef;
    return this;
  }

   /**
   * Get paymentTermRef
   * @return paymentTermRef
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public PaymentTermNullable getPaymentTermRef() {
    return paymentTermRef;
  }


  public void setPaymentTermRef(PaymentTermNullable paymentTermRef) {
    
    
    
    this.paymentTermRef = paymentTermRef;
  }


  public OptimizedVendor shippingTermRef(ShippingTermNullable shippingTermRef) {
    
    
    
    
    this.shippingTermRef = shippingTermRef;
    return this;
  }

   /**
   * Get shippingTermRef
   * @return shippingTermRef
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public ShippingTermNullable getShippingTermRef() {
    return shippingTermRef;
  }


  public void setShippingTermRef(ShippingTermNullable shippingTermRef) {
    
    
    
    this.shippingTermRef = shippingTermRef;
  }


  public OptimizedVendor paymentMethodRef(PaymentMethodNullable paymentMethodRef) {
    
    
    
    
    this.paymentMethodRef = paymentMethodRef;
    return this;
  }

   /**
   * Get paymentMethodRef
   * @return paymentMethodRef
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public PaymentMethodNullable getPaymentMethodRef() {
    return paymentMethodRef;
  }


  public void setPaymentMethodRef(PaymentMethodNullable paymentMethodRef) {
    
    
    
    this.paymentMethodRef = paymentMethodRef;
  }


  public OptimizedVendor shippingMethodRef(ShippingMethodNullable shippingMethodRef) {
    
    
    
    
    this.shippingMethodRef = shippingMethodRef;
    return this;
  }

   /**
   * Get shippingMethodRef
   * @return shippingMethodRef
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public ShippingMethodNullable getShippingMethodRef() {
    return shippingMethodRef;
  }


  public void setShippingMethodRef(ShippingMethodNullable shippingMethodRef) {
    
    
    
    this.shippingMethodRef = shippingMethodRef;
  }


   /**
   * Get paymentMethods
   * @return paymentMethods
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public List<PaymentMethodRead> getPaymentMethods() {
    return paymentMethods;
  }




  public OptimizedVendor tax(Integer tax) {
    
    
    
    
    this.tax = tax;
    return this;
  }

   /**
   * Get tax
   * @return tax
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Integer getTax() {
    return tax;
  }


  public void setTax(Integer tax) {
    
    
    
    this.tax = tax;
  }


  public OptimizedVendor type(VendorTypeEnum type) {
    
    
    
    
    this.type = type;
    return this;
  }

   /**
   * Get type
   * @return type
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")

  public VendorTypeEnum getType() {
    return type;
  }


  public void setType(VendorTypeEnum type) {
    
    
    
    this.type = type;
  }


  public OptimizedVendor defaultPaymentMethod(Integer defaultPaymentMethod) {
    
    
    
    
    this.defaultPaymentMethod = defaultPaymentMethod;
    return this;
  }

   /**
   * Get defaultPaymentMethod
   * @return defaultPaymentMethod
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Integer getDefaultPaymentMethod() {
    return defaultPaymentMethod;
  }


  public void setDefaultPaymentMethod(Integer defaultPaymentMethod) {
    
    
    
    this.defaultPaymentMethod = defaultPaymentMethod;
  }


   /**
   * Get creditcards
   * @return creditcards
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public List<CreditCard> getCreditcards() {
    return creditcards;
  }




  public OptimizedVendor is1099Eligible(Boolean is1099Eligible) {
    
    
    
    
    this.is1099Eligible = is1099Eligible;
    return this;
  }

   /**
   * Get is1099Eligible
   * @return is1099Eligible
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Boolean getIs1099Eligible() {
    return is1099Eligible;
  }


  public void setIs1099Eligible(Boolean is1099Eligible) {
    
    
    
    this.is1099Eligible = is1099Eligible;
  }


  public OptimizedVendor overallScore(BigDecimal overallScore) {
    
    
    
    
    this.overallScore = overallScore;
    return this;
  }

   /**
   * Get overallScore
   * @return overallScore
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(required = true, value = "")

  public BigDecimal getOverallScore() {
    return overallScore;
  }


  public void setOverallScore(BigDecimal overallScore) {
    
    
    
    this.overallScore = overallScore;
  }


  public OptimizedVendor isAutoEmailPoEnabled(Boolean isAutoEmailPoEnabled) {
    
    
    
    
    this.isAutoEmailPoEnabled = isAutoEmailPoEnabled;
    return this;
  }

   /**
   * Get isAutoEmailPoEnabled
   * @return isAutoEmailPoEnabled
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Boolean getIsAutoEmailPoEnabled() {
    return isAutoEmailPoEnabled;
  }


  public void setIsAutoEmailPoEnabled(Boolean isAutoEmailPoEnabled) {
    
    
    
    this.isAutoEmailPoEnabled = isAutoEmailPoEnabled;
  }


  public OptimizedVendor poPdfLabels(String poPdfLabels) {
    
    
    
    
    this.poPdfLabels = poPdfLabels;
    return this;
  }

   /**
   * Placeholder for a KVStore value
   * @return poPdfLabels
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Placeholder for a KVStore value")

  public String getPoPdfLabels() {
    return poPdfLabels;
  }


  public void setPoPdfLabels(String poPdfLabels) {
    
    
    
    this.poPdfLabels = poPdfLabels;
  }


  public OptimizedVendor vendorRequest(NestedVendorRequest vendorRequest) {
    
    
    
    
    this.vendorRequest = vendorRequest;
    return this;
  }

   /**
   * Get vendorRequest
   * @return vendorRequest
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public NestedVendorRequest getVendorRequest() {
    return vendorRequest;
  }


  public void setVendorRequest(NestedVendorRequest vendorRequest) {
    
    
    
    this.vendorRequest = vendorRequest;
  }

  /**
   * A container for additional, undeclared properties.
   * This is a holder for any undeclared properties as specified with
   * the 'additionalProperties' keyword in the OAS document.
   */
  private Map<String, Object> additionalProperties;

  /**
   * Set the additional (undeclared) property with the specified name and value.
   * If the property does not already exist, create it otherwise replace it.
   *
   * @param key name of the property
   * @param value value of the property
   * @return the OptimizedVendor instance itself
   */
  public OptimizedVendor putAdditionalProperty(String key, Object value) {
    if (this.additionalProperties == null) {
        this.additionalProperties = new HashMap<String, Object>();
    }
    this.additionalProperties.put(key, value);
    return this;
  }

  /**
   * Return the additional (undeclared) property.
   *
   * @return a map of objects
   */
  public Map<String, Object> getAdditionalProperties() {
    return additionalProperties;
  }

  /**
   * Return the additional (undeclared) property with the specified name.
   *
   * @param key name of the property
   * @return an object
   */
  public Object getAdditionalProperty(String key) {
    if (this.additionalProperties == null) {
        return null;
    }
    return this.additionalProperties.get(key);
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    OptimizedVendor optimizedVendor = (OptimizedVendor) o;
    return Objects.equals(this.id, optimizedVendor.id) &&
        Objects.equals(this.name, optimizedVendor.name) &&
        Objects.equals(this.active, optimizedVendor.active) &&
        Objects.equals(this.addressLineOne, optimizedVendor.addressLineOne) &&
        Objects.equals(this.addressLineTwo, optimizedVendor.addressLineTwo) &&
        Objects.equals(this.postalCode, optimizedVendor.postalCode) &&
        Objects.equals(this.city, optimizedVendor.city) &&
        Objects.equals(this.stateProvince, optimizedVendor.stateProvince) &&
        Objects.equals(this.country, optimizedVendor.country) &&
        Objects.equals(this.phoneOne, optimizedVendor.phoneOne) &&
        Objects.equals(this.phoneTwo, optimizedVendor.phoneTwo) &&
        Objects.equals(this.fax, optimizedVendor.fax) &&
        Objects.equals(this.email, optimizedVendor.email) &&
        Objects.equals(this.comments, optimizedVendor.comments) &&
        Objects.equals(this.contact, optimizedVendor.contact) &&
        Objects.equals(this.url, optimizedVendor.url) &&
        Objects.equals(this.externalId, optimizedVendor.externalId) &&
        Objects.equals(this.dateModified, optimizedVendor.dateModified) &&
        Objects.equals(this.currency, optimizedVendor.currency) &&
        Objects.equals(this.paymentTermRef, optimizedVendor.paymentTermRef) &&
        Objects.equals(this.shippingTermRef, optimizedVendor.shippingTermRef) &&
        Objects.equals(this.paymentMethodRef, optimizedVendor.paymentMethodRef) &&
        Objects.equals(this.shippingMethodRef, optimizedVendor.shippingMethodRef) &&
        Objects.equals(this.paymentMethods, optimizedVendor.paymentMethods) &&
        Objects.equals(this.tax, optimizedVendor.tax) &&
        Objects.equals(this.type, optimizedVendor.type) &&
        Objects.equals(this.defaultPaymentMethod, optimizedVendor.defaultPaymentMethod) &&
        Objects.equals(this.creditcards, optimizedVendor.creditcards) &&
        Objects.equals(this.is1099Eligible, optimizedVendor.is1099Eligible) &&
        Objects.equals(this.overallScore, optimizedVendor.overallScore) &&
        Objects.equals(this.isAutoEmailPoEnabled, optimizedVendor.isAutoEmailPoEnabled) &&
        Objects.equals(this.poPdfLabels, optimizedVendor.poPdfLabels) &&
        Objects.equals(this.vendorRequest, optimizedVendor.vendorRequest)&&
        Objects.equals(this.additionalProperties, optimizedVendor.additionalProperties);
  }

  private static <T> boolean equalsNullable(JsonNullable<T> a, JsonNullable<T> b) {
    return a == b || (a != null && b != null && a.isPresent() && b.isPresent() && Objects.deepEquals(a.get(), b.get()));
  }

  @Override
  public int hashCode() {
    return Objects.hash(id, name, active, addressLineOne, addressLineTwo, postalCode, city, stateProvince, country, phoneOne, phoneTwo, fax, email, comments, contact, url, externalId, dateModified, currency, paymentTermRef, shippingTermRef, paymentMethodRef, shippingMethodRef, paymentMethods, tax, type, defaultPaymentMethod, creditcards, is1099Eligible, overallScore, isAutoEmailPoEnabled, poPdfLabels, vendorRequest, additionalProperties);
  }

  private static <T> int hashCodeNullable(JsonNullable<T> a) {
    if (a == null) {
      return 1;
    }
    return a.isPresent() ? Arrays.deepHashCode(new Object[]{a.get()}) : 31;
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class OptimizedVendor {\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    active: ").append(toIndentedString(active)).append("\n");
    sb.append("    addressLineOne: ").append(toIndentedString(addressLineOne)).append("\n");
    sb.append("    addressLineTwo: ").append(toIndentedString(addressLineTwo)).append("\n");
    sb.append("    postalCode: ").append(toIndentedString(postalCode)).append("\n");
    sb.append("    city: ").append(toIndentedString(city)).append("\n");
    sb.append("    stateProvince: ").append(toIndentedString(stateProvince)).append("\n");
    sb.append("    country: ").append(toIndentedString(country)).append("\n");
    sb.append("    phoneOne: ").append(toIndentedString(phoneOne)).append("\n");
    sb.append("    phoneTwo: ").append(toIndentedString(phoneTwo)).append("\n");
    sb.append("    fax: ").append(toIndentedString(fax)).append("\n");
    sb.append("    email: ").append(toIndentedString(email)).append("\n");
    sb.append("    comments: ").append(toIndentedString(comments)).append("\n");
    sb.append("    contact: ").append(toIndentedString(contact)).append("\n");
    sb.append("    url: ").append(toIndentedString(url)).append("\n");
    sb.append("    externalId: ").append(toIndentedString(externalId)).append("\n");
    sb.append("    dateModified: ").append(toIndentedString(dateModified)).append("\n");
    sb.append("    currency: ").append(toIndentedString(currency)).append("\n");
    sb.append("    paymentTermRef: ").append(toIndentedString(paymentTermRef)).append("\n");
    sb.append("    shippingTermRef: ").append(toIndentedString(shippingTermRef)).append("\n");
    sb.append("    paymentMethodRef: ").append(toIndentedString(paymentMethodRef)).append("\n");
    sb.append("    shippingMethodRef: ").append(toIndentedString(shippingMethodRef)).append("\n");
    sb.append("    paymentMethods: ").append(toIndentedString(paymentMethods)).append("\n");
    sb.append("    tax: ").append(toIndentedString(tax)).append("\n");
    sb.append("    type: ").append(toIndentedString(type)).append("\n");
    sb.append("    defaultPaymentMethod: ").append(toIndentedString(defaultPaymentMethod)).append("\n");
    sb.append("    creditcards: ").append(toIndentedString(creditcards)).append("\n");
    sb.append("    is1099Eligible: ").append(toIndentedString(is1099Eligible)).append("\n");
    sb.append("    overallScore: ").append(toIndentedString(overallScore)).append("\n");
    sb.append("    isAutoEmailPoEnabled: ").append(toIndentedString(isAutoEmailPoEnabled)).append("\n");
    sb.append("    poPdfLabels: ").append(toIndentedString(poPdfLabels)).append("\n");
    sb.append("    vendorRequest: ").append(toIndentedString(vendorRequest)).append("\n");
    sb.append("    additionalProperties: ").append(toIndentedString(additionalProperties)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("id");
    openapiFields.add("name");
    openapiFields.add("active");
    openapiFields.add("addressLineOne");
    openapiFields.add("addressLineTwo");
    openapiFields.add("postalCode");
    openapiFields.add("city");
    openapiFields.add("state_province");
    openapiFields.add("country");
    openapiFields.add("phoneOne");
    openapiFields.add("phoneTwo");
    openapiFields.add("fax");
    openapiFields.add("email");
    openapiFields.add("comments");
    openapiFields.add("contact");
    openapiFields.add("url");
    openapiFields.add("external_id");
    openapiFields.add("dateModified");
    openapiFields.add("currency");
    openapiFields.add("payment_term_ref");
    openapiFields.add("shipping_term_ref");
    openapiFields.add("payment_method_ref");
    openapiFields.add("shipping_method_ref");
    openapiFields.add("payment_methods");
    openapiFields.add("tax");
    openapiFields.add("type");
    openapiFields.add("default_payment_method");
    openapiFields.add("creditcards");
    openapiFields.add("is_1099_eligible");
    openapiFields.add("overall_score");
    openapiFields.add("is_auto_email_po_enabled");
    openapiFields.add("po_pdf_labels");
    openapiFields.add("vendor_request");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
    openapiRequiredFields.add("name");
    openapiRequiredFields.add("email");
    openapiRequiredFields.add("type");
    openapiRequiredFields.add("overall_score");
  }

 /**
  * Validates the JSON Object and throws an exception if issues found
  *
  * @param jsonObj JSON Object
  * @throws IOException if the JSON Object is invalid with respect to OptimizedVendor
  */
  public static void validateJsonObject(JsonObject jsonObj) throws IOException {
      if (jsonObj == null) {
        if (!OptimizedVendor.openapiRequiredFields.isEmpty()) { // has required fields but JSON object is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in OptimizedVendor is not found in the empty JSON string", OptimizedVendor.openapiRequiredFields.toString()));
        }
      }

      // check to make sure all required properties/fields are present in the JSON string
      for (String requiredField : OptimizedVendor.openapiRequiredFields) {
        if (jsonObj.get(requiredField) == null) {
          throw new IllegalArgumentException(String.format("The required field `%s` is not found in the JSON string: %s", requiredField, jsonObj.toString()));
        }
      }
      if (!jsonObj.get("name").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `name` to be a primitive type in the JSON string but got `%s`", jsonObj.get("name").toString()));
      }
      if (!jsonObj.get("addressLineOne").isJsonNull() && (jsonObj.get("addressLineOne") != null && !jsonObj.get("addressLineOne").isJsonNull()) && !jsonObj.get("addressLineOne").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `addressLineOne` to be a primitive type in the JSON string but got `%s`", jsonObj.get("addressLineOne").toString()));
      }
      if (!jsonObj.get("addressLineTwo").isJsonNull() && (jsonObj.get("addressLineTwo") != null && !jsonObj.get("addressLineTwo").isJsonNull()) && !jsonObj.get("addressLineTwo").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `addressLineTwo` to be a primitive type in the JSON string but got `%s`", jsonObj.get("addressLineTwo").toString()));
      }
      if (!jsonObj.get("postalCode").isJsonNull() && (jsonObj.get("postalCode") != null && !jsonObj.get("postalCode").isJsonNull()) && !jsonObj.get("postalCode").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `postalCode` to be a primitive type in the JSON string but got `%s`", jsonObj.get("postalCode").toString()));
      }
      if (!jsonObj.get("city").isJsonNull() && (jsonObj.get("city") != null && !jsonObj.get("city").isJsonNull()) && !jsonObj.get("city").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `city` to be a primitive type in the JSON string but got `%s`", jsonObj.get("city").toString()));
      }
      if (!jsonObj.get("state_province").isJsonNull() && (jsonObj.get("state_province") != null && !jsonObj.get("state_province").isJsonNull()) && !jsonObj.get("state_province").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `state_province` to be a primitive type in the JSON string but got `%s`", jsonObj.get("state_province").toString()));
      }
      if (!jsonObj.get("country").isJsonNull() && (jsonObj.get("country") != null && !jsonObj.get("country").isJsonNull()) && !jsonObj.get("country").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `country` to be a primitive type in the JSON string but got `%s`", jsonObj.get("country").toString()));
      }
      if (!jsonObj.get("phoneOne").isJsonNull() && (jsonObj.get("phoneOne") != null && !jsonObj.get("phoneOne").isJsonNull()) && !jsonObj.get("phoneOne").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `phoneOne` to be a primitive type in the JSON string but got `%s`", jsonObj.get("phoneOne").toString()));
      }
      if (!jsonObj.get("phoneTwo").isJsonNull() && (jsonObj.get("phoneTwo") != null && !jsonObj.get("phoneTwo").isJsonNull()) && !jsonObj.get("phoneTwo").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `phoneTwo` to be a primitive type in the JSON string but got `%s`", jsonObj.get("phoneTwo").toString()));
      }
      if (!jsonObj.get("fax").isJsonNull() && (jsonObj.get("fax") != null && !jsonObj.get("fax").isJsonNull()) && !jsonObj.get("fax").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `fax` to be a primitive type in the JSON string but got `%s`", jsonObj.get("fax").toString()));
      }
      // ensure the required json array is present
      if (jsonObj.get("email") == null) {
        throw new IllegalArgumentException("Expected the field `linkedContent` to be an array in the JSON string but got `null`");
      } else if (!jsonObj.get("email").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `email` to be an array in the JSON string but got `%s`", jsonObj.get("email").toString()));
      }
      if (!jsonObj.get("comments").isJsonNull() && (jsonObj.get("comments") != null && !jsonObj.get("comments").isJsonNull()) && !jsonObj.get("comments").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `comments` to be a primitive type in the JSON string but got `%s`", jsonObj.get("comments").toString()));
      }
      if (!jsonObj.get("contact").isJsonNull() && (jsonObj.get("contact") != null && !jsonObj.get("contact").isJsonNull()) && !jsonObj.get("contact").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `contact` to be a primitive type in the JSON string but got `%s`", jsonObj.get("contact").toString()));
      }
      if (!jsonObj.get("url").isJsonNull() && (jsonObj.get("url") != null && !jsonObj.get("url").isJsonNull()) && !jsonObj.get("url").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `url` to be a primitive type in the JSON string but got `%s`", jsonObj.get("url").toString()));
      }
      if (!jsonObj.get("external_id").isJsonNull() && (jsonObj.get("external_id") != null && !jsonObj.get("external_id").isJsonNull()) && !jsonObj.get("external_id").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `external_id` to be a primitive type in the JSON string but got `%s`", jsonObj.get("external_id").toString()));
      }
      // validate the optional field `payment_term_ref`
      if (jsonObj.get("payment_term_ref") != null && !jsonObj.get("payment_term_ref").isJsonNull()) {
        PaymentTermNullable.validateJsonObject(jsonObj.getAsJsonObject("payment_term_ref"));
      }
      // validate the optional field `shipping_term_ref`
      if (jsonObj.get("shipping_term_ref") != null && !jsonObj.get("shipping_term_ref").isJsonNull()) {
        ShippingTermNullable.validateJsonObject(jsonObj.getAsJsonObject("shipping_term_ref"));
      }
      // validate the optional field `payment_method_ref`
      if (jsonObj.get("payment_method_ref") != null && !jsonObj.get("payment_method_ref").isJsonNull()) {
        PaymentMethodNullable.validateJsonObject(jsonObj.getAsJsonObject("payment_method_ref"));
      }
      // validate the optional field `shipping_method_ref`
      if (jsonObj.get("shipping_method_ref") != null && !jsonObj.get("shipping_method_ref").isJsonNull()) {
        ShippingMethodNullable.validateJsonObject(jsonObj.getAsJsonObject("shipping_method_ref"));
      }
      if (jsonObj.get("payment_methods") != null && !jsonObj.get("payment_methods").isJsonNull()) {
        JsonArray jsonArraypaymentMethods = jsonObj.getAsJsonArray("payment_methods");
        if (jsonArraypaymentMethods != null) {
          // ensure the json data is an array
          if (!jsonObj.get("payment_methods").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `payment_methods` to be an array in the JSON string but got `%s`", jsonObj.get("payment_methods").toString()));
          }

          // validate the optional field `payment_methods` (array)
          for (int i = 0; i < jsonArraypaymentMethods.size(); i++) {
            PaymentMethodRead.validateJsonObject(jsonArraypaymentMethods.get(i).getAsJsonObject());
          };
        }
      }
      if (jsonObj.get("creditcards") != null && !jsonObj.get("creditcards").isJsonNull()) {
        JsonArray jsonArraycreditcards = jsonObj.getAsJsonArray("creditcards");
        if (jsonArraycreditcards != null) {
          // ensure the json data is an array
          if (!jsonObj.get("creditcards").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `creditcards` to be an array in the JSON string but got `%s`", jsonObj.get("creditcards").toString()));
          }

          // validate the optional field `creditcards` (array)
          for (int i = 0; i < jsonArraycreditcards.size(); i++) {
            CreditCard.validateJsonObject(jsonArraycreditcards.get(i).getAsJsonObject());
          };
        }
      }
      if (!jsonObj.get("overall_score").isJsonNull() && !jsonObj.get("overall_score").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `overall_score` to be a primitive type in the JSON string but got `%s`", jsonObj.get("overall_score").toString()));
      }
      if ((jsonObj.get("po_pdf_labels") != null && !jsonObj.get("po_pdf_labels").isJsonNull()) && !jsonObj.get("po_pdf_labels").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `po_pdf_labels` to be a primitive type in the JSON string but got `%s`", jsonObj.get("po_pdf_labels").toString()));
      }
      // validate the optional field `vendor_request`
      if (jsonObj.get("vendor_request") != null && !jsonObj.get("vendor_request").isJsonNull()) {
        NestedVendorRequest.validateJsonObject(jsonObj.getAsJsonObject("vendor_request"));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!OptimizedVendor.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'OptimizedVendor' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<OptimizedVendor> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(OptimizedVendor.class));

       return (TypeAdapter<T>) new TypeAdapter<OptimizedVendor>() {
           @Override
           public void write(JsonWriter out, OptimizedVendor value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             obj.remove("additionalProperties");
             // serialize additonal properties
             if (value.getAdditionalProperties() != null) {
               for (Map.Entry<String, Object> entry : value.getAdditionalProperties().entrySet()) {
                 if (entry.getValue() instanceof String)
                   obj.addProperty(entry.getKey(), (String) entry.getValue());
                 else if (entry.getValue() instanceof Number)
                   obj.addProperty(entry.getKey(), (Number) entry.getValue());
                 else if (entry.getValue() instanceof Boolean)
                   obj.addProperty(entry.getKey(), (Boolean) entry.getValue());
                 else if (entry.getValue() instanceof Character)
                   obj.addProperty(entry.getKey(), (Character) entry.getValue());
                 else {
                   obj.add(entry.getKey(), gson.toJsonTree(entry.getValue()).getAsJsonObject());
                 }
               }
             }
             elementAdapter.write(out, obj);
           }

           @Override
           public OptimizedVendor read(JsonReader in) throws IOException {
             JsonObject jsonObj = elementAdapter.read(in).getAsJsonObject();
             validateJsonObject(jsonObj);
             // store additional fields in the deserialized instance
             OptimizedVendor instance = thisAdapter.fromJsonTree(jsonObj);
             for (Map.Entry<String, JsonElement> entry : jsonObj.entrySet()) {
               if (!openapiFields.contains(entry.getKey())) {
                 if (entry.getValue().isJsonPrimitive()) { // primitive type
                   if (entry.getValue().getAsJsonPrimitive().isString())
                     instance.putAdditionalProperty(entry.getKey(), entry.getValue().getAsString());
                   else if (entry.getValue().getAsJsonPrimitive().isNumber())
                     instance.putAdditionalProperty(entry.getKey(), entry.getValue().getAsNumber());
                   else if (entry.getValue().getAsJsonPrimitive().isBoolean())
                     instance.putAdditionalProperty(entry.getKey(), entry.getValue().getAsBoolean());
                   else
                     throw new IllegalArgumentException(String.format("The field `%s` has unknown primitive type. Value: %s", entry.getKey(), entry.getValue().toString()));
                 } else if (entry.getValue().isJsonArray()) {
                     instance.putAdditionalProperty(entry.getKey(), gson.fromJson(entry.getValue(), List.class));
                 } else { // JSON object
                     instance.putAdditionalProperty(entry.getKey(), gson.fromJson(entry.getValue(), HashMap.class));
                 }
               }
             }
             return instance;
           }

       }.nullSafe();
    }
  }

 /**
  * Create an instance of OptimizedVendor given an JSON string
  *
  * @param jsonString JSON string
  * @return An instance of OptimizedVendor
  * @throws IOException if the JSON string is invalid with respect to OptimizedVendor
  */
  public static OptimizedVendor fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, OptimizedVendor.class);
  }

 /**
  * Convert an instance of OptimizedVendor to an JSON string
  *
  * @return JSON string
  */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

