/*
 * Procurify API Documentation
 *  # Disclaimer  - Procurify’s API is evolving and is subject to change at any time. Additionally, aspects of the API are undocumented, including certain methods, events, and properties. Given that both documented and undocumented aspects of the Procurify API may change at any time, the client relies on the API at their own risk. - Client (and/or client’s representative) is responsible for building, testing, and maintaining any API connection between Procurify and any other tool.  Procurify’s responsibility strictly involves providing support on clarifications in regards to the issued API document. - Procurify’s API is offered on an “as is” and “as available” basis, without warranties of any kind. By accepting this agreement, you agree that you have read the current API documentation, and accept the API functionality in its current state including current limitations. For questions and clarification around the documentation, please contact support@procurify.com. - In accordance with Section 2.(b) of our Subscription Services Agreement, Procurify reserves the right to deny access to our API at any time. If your API requests are too large and time out, contact us immediately to avoid possible suspension of access. - You may not attempt to reverse engineer or otherwise derive source code, trade secrets, or know-how in the Procurify API or portion thereof. You may not use the Procurify API to replicate or compete with core products or services offered by Procurify. 
 *
 * The version of the OpenAPI document: 
 * 
 *
 * NOTE: This class is auto generated by Konfig (https://konfigthis.com).
 * Do not edit the class manually.
 */


package com.konfigthis.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import com.konfigthis.client.model.AddressSummary;
import com.konfigthis.client.model.CostDetailsNullable;
import com.konfigthis.client.model.CreditCardReadNullable;
import com.konfigthis.client.model.CurrencySummary;
import com.konfigthis.client.model.CustomFieldValueRead;
import com.konfigthis.client.model.ExpenseTypeEnumNullable;
import com.konfigthis.client.model.FulfilmentStatusEnum;
import com.konfigthis.client.model.PaymentTerm;
import com.konfigthis.client.model.PriceModifierDocs;
import com.konfigthis.client.model.PurchaseOrderContract;
import com.konfigthis.client.model.PurchaseOrderLineItemRead;
import com.konfigthis.client.model.ShippingMethod;
import com.konfigthis.client.model.ShippingTerm;
import com.konfigthis.client.model.UserSummary;
import com.konfigthis.client.model.VendorRead;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.math.BigDecimal;
import java.time.OffsetDateTime;
import java.util.ArrayList;
import java.util.List;
import java.util.UUID;
import org.openapitools.jackson.nullable.JsonNullable;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import org.apache.commons.lang3.StringUtils;

import java.lang.reflect.Type;
import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Map.Entry;
import java.util.Set;

import com.konfigthis.client.JSON;

/**
 * PurchaseOrderDetail
 */@javax.annotation.Generated(value = "Generated by https://konfigthis.com")
public class PurchaseOrderDetail {
  public static final String SERIALIZED_NAME_VERSION = "version";
  @SerializedName(SERIALIZED_NAME_VERSION)
  private Integer version;

  public static final String SERIALIZED_NAME_NUMBER = "number";
  @SerializedName(SERIALIZED_NAME_NUMBER)
  private String number;

  public static final String SERIALIZED_NAME_UUID = "uuid";
  @SerializedName(SERIALIZED_NAME_UUID)
  private UUID uuid;

  public static final String SERIALIZED_NAME_PURCHASER = "purchaser";
  @SerializedName(SERIALIZED_NAME_PURCHASER)
  private UserSummary purchaser;

  public static final String SERIALIZED_NAME_PROCURIFY_P_O = "procurify_PO";
  @SerializedName(SERIALIZED_NAME_PROCURIFY_P_O)
  private Integer procurifyPO;

  public static final String SERIALIZED_NAME_PO_NUM = "PO_Num";
  @SerializedName(SERIALIZED_NAME_PO_NUM)
  private String poNum;

  public static final String SERIALIZED_NAME_DATE = "date";
  @SerializedName(SERIALIZED_NAME_DATE)
  private OffsetDateTime date;

  public static final String SERIALIZED_NAME_BUYER_NAME = "buyer_name";
  @SerializedName(SERIALIZED_NAME_BUYER_NAME)
  private String buyerName;

  public static final String SERIALIZED_NAME_BUYER_CONTACT = "buyer_contact";
  @SerializedName(SERIALIZED_NAME_BUYER_CONTACT)
  private String buyerContact;

  public static final String SERIALIZED_NAME_BUYER_ADDRESS_LINE_ONE = "buyer_addressLineOne";
  @SerializedName(SERIALIZED_NAME_BUYER_ADDRESS_LINE_ONE)
  private String buyerAddressLineOne;

  public static final String SERIALIZED_NAME_BUYER_POSTAL_CODE = "buyer_postalCode";
  @SerializedName(SERIALIZED_NAME_BUYER_POSTAL_CODE)
  private String buyerPostalCode;

  public static final String SERIALIZED_NAME_BUYER_CITY = "buyer_city";
  @SerializedName(SERIALIZED_NAME_BUYER_CITY)
  private String buyerCity;

  public static final String SERIALIZED_NAME_BUYER_STATE_PROVINCE = "buyer_state_province";
  @SerializedName(SERIALIZED_NAME_BUYER_STATE_PROVINCE)
  private String buyerStateProvince;

  public static final String SERIALIZED_NAME_BUYER_COUNTRY = "buyer_country";
  @SerializedName(SERIALIZED_NAME_BUYER_COUNTRY)
  private String buyerCountry;

  public static final String SERIALIZED_NAME_BUYER_ADDRESS = "buyer_address";
  @SerializedName(SERIALIZED_NAME_BUYER_ADDRESS)
  private AddressSummary buyerAddress;

  public static final String SERIALIZED_NAME_RECEIVER_NAME = "receiver_name";
  @SerializedName(SERIALIZED_NAME_RECEIVER_NAME)
  private String receiverName;

  public static final String SERIALIZED_NAME_RECEIVER_CONTACT = "receiver_contact";
  @SerializedName(SERIALIZED_NAME_RECEIVER_CONTACT)
  private String receiverContact;

  public static final String SERIALIZED_NAME_RECEIVER_ADDRESS_LINE_ONE = "receiver_addressLineOne";
  @SerializedName(SERIALIZED_NAME_RECEIVER_ADDRESS_LINE_ONE)
  private String receiverAddressLineOne;

  public static final String SERIALIZED_NAME_RECEIVER_POSTAL_CODE = "receiver_postalCode";
  @SerializedName(SERIALIZED_NAME_RECEIVER_POSTAL_CODE)
  private String receiverPostalCode;

  public static final String SERIALIZED_NAME_RECEIVER_CITY = "receiver_city";
  @SerializedName(SERIALIZED_NAME_RECEIVER_CITY)
  private String receiverCity;

  public static final String SERIALIZED_NAME_RECEIVER_STATE_PROVINCE = "receiver_state_province";
  @SerializedName(SERIALIZED_NAME_RECEIVER_STATE_PROVINCE)
  private String receiverStateProvince;

  public static final String SERIALIZED_NAME_RECEIVER_COUNTRY = "receiver_country";
  @SerializedName(SERIALIZED_NAME_RECEIVER_COUNTRY)
  private String receiverCountry;

  public static final String SERIALIZED_NAME_RECEIVER_ADDRESS = "receiver_address";
  @SerializedName(SERIALIZED_NAME_RECEIVER_ADDRESS)
  private AddressSummary receiverAddress;

  public static final String SERIALIZED_NAME_PREF_VENDOR = "pref_vendor";
  @SerializedName(SERIALIZED_NAME_PREF_VENDOR)
  private VendorRead prefVendor;

  public static final String SERIALIZED_NAME_VENDOR_NAME = "vendor_name";
  @SerializedName(SERIALIZED_NAME_VENDOR_NAME)
  private String vendorName;

  public static final String SERIALIZED_NAME_VENDOR_CONTACT = "vendor_contact";
  @SerializedName(SERIALIZED_NAME_VENDOR_CONTACT)
  private String vendorContact;

  public static final String SERIALIZED_NAME_VENDOR_ADDRESS_LINE_ONE = "vendor_addressLineOne";
  @SerializedName(SERIALIZED_NAME_VENDOR_ADDRESS_LINE_ONE)
  private String vendorAddressLineOne;

  public static final String SERIALIZED_NAME_VENDOR_POSTAL_CODE = "vendor_postalCode";
  @SerializedName(SERIALIZED_NAME_VENDOR_POSTAL_CODE)
  private String vendorPostalCode;

  public static final String SERIALIZED_NAME_VENDOR_CITY = "vendor_city";
  @SerializedName(SERIALIZED_NAME_VENDOR_CITY)
  private String vendorCity;

  public static final String SERIALIZED_NAME_VENDOR_STATE_PROVINCE = "vendor_state_province";
  @SerializedName(SERIALIZED_NAME_VENDOR_STATE_PROVINCE)
  private String vendorStateProvince;

  public static final String SERIALIZED_NAME_VENDOR_COUNTRY = "vendor_country";
  @SerializedName(SERIALIZED_NAME_VENDOR_COUNTRY)
  private String vendorCountry;

  public static final String SERIALIZED_NAME_PAYMENT_TERMS = "payment_terms";
  @SerializedName(SERIALIZED_NAME_PAYMENT_TERMS)
  private String paymentTerms;

  public static final String SERIALIZED_NAME_SHIPPING_TERMS = "shipping_terms";
  @SerializedName(SERIALIZED_NAME_SHIPPING_TERMS)
  private String shippingTerms;

  public static final String SERIALIZED_NAME_SHIPPING_METHOD = "shipping_method";
  @SerializedName(SERIALIZED_NAME_SHIPPING_METHOD)
  private ShippingMethod shippingMethod;

  public static final String SERIALIZED_NAME_PROMISE_DATE = "promise_date";
  @SerializedName(SERIALIZED_NAME_PROMISE_DATE)
  private OffsetDateTime promiseDate;

  public static final String SERIALIZED_NAME_SUBTOTAL = "subtotal";
  @SerializedName(SERIALIZED_NAME_SUBTOTAL)
  private BigDecimal subtotal;

  public static final String SERIALIZED_NAME_FREIGHT = "freight";
  @SerializedName(SERIALIZED_NAME_FREIGHT)
  private BigDecimal freight;

  public static final String SERIALIZED_NAME_TAX = "tax";
  @SerializedName(SERIALIZED_NAME_TAX)
  private PriceModifierDocs tax;

  public static final String SERIALIZED_NAME_DISCOUNT = "discount";
  @SerializedName(SERIALIZED_NAME_DISCOUNT)
  private PriceModifierDocs discount;

  public static final String SERIALIZED_NAME_OTHER = "other";
  @SerializedName(SERIALIZED_NAME_OTHER)
  private BigDecimal other;

  public static final String SERIALIZED_NAME_TOTAL = "total";
  @SerializedName(SERIALIZED_NAME_TOTAL)
  private BigDecimal total;

  public static final String SERIALIZED_NAME_COMMENT = "comment";
  @SerializedName(SERIALIZED_NAME_COMMENT)
  private String comment;

  public static final String SERIALIZED_NAME_PURCHASED_CURRENCY = "purchased_currency";
  @SerializedName(SERIALIZED_NAME_PURCHASED_CURRENCY)
  private CurrencySummary purchasedCurrency;

  public static final String SERIALIZED_NAME_PURCHASED_CURRENCY_RATE = "purchased_currency_rate";
  @SerializedName(SERIALIZED_NAME_PURCHASED_CURRENCY_RATE)
  private BigDecimal purchasedCurrencyRate;

  public static final String SERIALIZED_NAME_ACTIVE = "active";
  @SerializedName(SERIALIZED_NAME_ACTIVE)
  private Boolean active;

  public static final String SERIALIZED_NAME_STATE = "state";
  @SerializedName(SERIALIZED_NAME_STATE)
  private Object state = null;

  public static final String SERIALIZED_NAME_FULFILMENT_STATUS = "fulfilment_status";
  @SerializedName(SERIALIZED_NAME_FULFILMENT_STATUS)
  private FulfilmentStatusEnum fulfilmentStatus;

  public static final String SERIALIZED_NAME_DISCLAIMER_DESCRIPTION = "disclaimer_description";
  @SerializedName(SERIALIZED_NAME_DISCLAIMER_DESCRIPTION)
  private String disclaimerDescription;

  public static final String SERIALIZED_NAME_DISCLAIMER_TEXT = "disclaimer_text";
  @SerializedName(SERIALIZED_NAME_DISCLAIMER_TEXT)
  private String disclaimerText;

  public static final String SERIALIZED_NAME_RECORDED_DATE = "recorded_date";
  @SerializedName(SERIALIZED_NAME_RECORDED_DATE)
  private OffsetDateTime recordedDate;

  public static final String SERIALIZED_NAME_CLOSED_DATE = "closed_date";
  @SerializedName(SERIALIZED_NAME_CLOSED_DATE)
  private OffsetDateTime closedDate;

  public static final String SERIALIZED_NAME_LAST_MODIFIED = "last_modified";
  @SerializedName(SERIALIZED_NAME_LAST_MODIFIED)
  private OffsetDateTime lastModified;

  public static final String SERIALIZED_NAME_STAGED_FOR_EXPORT = "staged_for_export";
  @SerializedName(SERIALIZED_NAME_STAGED_FOR_EXPORT)
  private Boolean stagedForExport;

  public static final String SERIALIZED_NAME_ITEM_COUNT = "item_count";
  @SerializedName(SERIALIZED_NAME_ITEM_COUNT)
  private Integer itemCount;

  public static final String SERIALIZED_NAME_MOST_RECENT_VERSION = "most_recent_version";
  @SerializedName(SERIALIZED_NAME_MOST_RECENT_VERSION)
  private Integer mostRecentVersion;

  public static final String SERIALIZED_NAME_PUNCHOUT_SYSTEM = "punchout_system";
  @SerializedName(SERIALIZED_NAME_PUNCHOUT_SYSTEM)
  private Integer punchoutSystem;

  public static final String SERIALIZED_NAME_PURCHASE_AGREEMENT = "purchase_agreement";
  @SerializedName(SERIALIZED_NAME_PURCHASE_AGREEMENT)
  private Integer purchaseAgreement;

  public static final String SERIALIZED_NAME_PURCHASE_AGREEMENT_STATUS = "purchase_agreement_status";
  @SerializedName(SERIALIZED_NAME_PURCHASE_AGREEMENT_STATUS)
  private ExpenseTypeEnumNullable purchaseAgreementStatus;

  public static final String SERIALIZED_NAME_PUNCHOUT_VENDOR_REFERENCE = "punchout_vendor_reference";
  @SerializedName(SERIALIZED_NAME_PUNCHOUT_VENDOR_REFERENCE)
  private Integer punchoutVendorReference;

  public static final String SERIALIZED_NAME_PUNCHOUT_SUPPLIER_ICON = "punchout_supplier_icon";
  @SerializedName(SERIALIZED_NAME_PUNCHOUT_SUPPLIER_ICON)
  private String punchoutSupplierIcon;

  public static final String SERIALIZED_NAME_PUNCHOUT_SUPPLIER_NAME = "punchout_supplier_name";
  @SerializedName(SERIALIZED_NAME_PUNCHOUT_SUPPLIER_NAME)
  private String punchoutSupplierName;

  public static final String SERIALIZED_NAME_HAS_BLANKET_ORDER_ITEMS = "has_blanket_order_items";
  @SerializedName(SERIALIZED_NAME_HAS_BLANKET_ORDER_ITEMS)
  private Boolean hasBlanketOrderItems;

  public static final String SERIALIZED_NAME_EXPIRY_DATE = "expiry_date";
  @SerializedName(SERIALIZED_NAME_EXPIRY_DATE)
  private OffsetDateTime expiryDate;

  public static final String SERIALIZED_NAME_CONTRACT = "contract";
  @SerializedName(SERIALIZED_NAME_CONTRACT)
  private PurchaseOrderContract contract;

  public static final String SERIALIZED_NAME_ORDER_ITEMS = "order_items";
  @SerializedName(SERIALIZED_NAME_ORDER_ITEMS)
  private List<PurchaseOrderLineItemRead> orderItems = new ArrayList<>();

  public static final String SERIALIZED_NAME_CREDITCARD_IS_EDITABLE = "creditcard_is_editable";
  @SerializedName(SERIALIZED_NAME_CREDITCARD_IS_EDITABLE)
  private Boolean creditcardIsEditable;

  public static final String SERIALIZED_NAME_CUSTOM_FIELDS = "custom_fields";
  @SerializedName(SERIALIZED_NAME_CUSTOM_FIELDS)
  private List<CustomFieldValueRead> customFields = null;

  public static final String SERIALIZED_NAME_CREDITCARD = "creditcard";
  @SerializedName(SERIALIZED_NAME_CREDITCARD)
  private CreditCardReadNullable creditcard;

  public static final String SERIALIZED_NAME_PAYMENT_TERM = "payment_term";
  @SerializedName(SERIALIZED_NAME_PAYMENT_TERM)
  private PaymentTerm paymentTerm;

  public static final String SERIALIZED_NAME_SHIPPING_TERM = "shipping_term";
  @SerializedName(SERIALIZED_NAME_SHIPPING_TERM)
  private ShippingTerm shippingTerm;

  public static final String SERIALIZED_NAME_COST_DETAILS = "cost_details";
  @SerializedName(SERIALIZED_NAME_COST_DETAILS)
  private CostDetailsNullable costDetails;

  public PurchaseOrderDetail() {
  }

  
  public PurchaseOrderDetail(
     String number, 
     Integer procurifyPO, 
     OffsetDateTime date, 
     OffsetDateTime lastModified, 
     Integer itemCount, 
     Integer mostRecentVersion, 
     Integer punchoutSystem, 
     Integer purchaseAgreement, 
     Integer punchoutVendorReference, 
     String punchoutSupplierIcon, 
     String punchoutSupplierName, 
     Boolean hasBlanketOrderItems, 
     List<CustomFieldValueRead> customFields
  ) {
    this();
    this.number = number;
    this.procurifyPO = procurifyPO;
    this.date = date;
    this.lastModified = lastModified;
    this.itemCount = itemCount;
    this.mostRecentVersion = mostRecentVersion;
    this.punchoutSystem = punchoutSystem;
    this.purchaseAgreement = purchaseAgreement;
    this.punchoutVendorReference = punchoutVendorReference;
    this.punchoutSupplierIcon = punchoutSupplierIcon;
    this.punchoutSupplierName = punchoutSupplierName;
    this.hasBlanketOrderItems = hasBlanketOrderItems;
    this.customFields = customFields;
  }

  public PurchaseOrderDetail version(Integer version) {
    if (version != null && version < -2147483648) {
      throw new IllegalArgumentException("Invalid value for version. Must be greater than or equal to -2147483648.");
    }
    if (version != null && version > 2147483647) {
      throw new IllegalArgumentException("Invalid value for version. Must be less than or equal to 2147483647.");
    }
    
    
    this.version = version;
    return this;
  }

   /**
   * Get version
   * minimum: -2147483648
   * maximum: 2147483647
   * @return version
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Integer getVersion() {
    return version;
  }


  public void setVersion(Integer version) {
    if (version != null && version < -2147483648) {
      throw new IllegalArgumentException("Invalid value for version. Must be greater than or equal to -2147483648.");
    }
    if (version != null && version > 2147483647) {
      throw new IllegalArgumentException("Invalid value for version. Must be less than or equal to 2147483647.");
    }
    
    this.version = version;
  }


   /**
   * Get number
   * @return number
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getNumber() {
    return number;
  }




  public PurchaseOrderDetail uuid(UUID uuid) {
    
    
    
    
    this.uuid = uuid;
    return this;
  }

   /**
   * Get uuid
   * @return uuid
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")

  public UUID getUuid() {
    return uuid;
  }


  public void setUuid(UUID uuid) {
    
    
    
    this.uuid = uuid;
  }


  public PurchaseOrderDetail purchaser(UserSummary purchaser) {
    
    
    
    
    this.purchaser = purchaser;
    return this;
  }

   /**
   * Get purchaser
   * @return purchaser
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")

  public UserSummary getPurchaser() {
    return purchaser;
  }


  public void setPurchaser(UserSummary purchaser) {
    
    
    
    this.purchaser = purchaser;
  }


   /**
   * Get procurifyPO
   * @return procurifyPO
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Integer getProcurifyPO() {
    return procurifyPO;
  }




  public PurchaseOrderDetail poNum(String poNum) {
    
    
    
    
    this.poNum = poNum;
    return this;
  }

   /**
   * Get poNum
   * @return poNum
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getPoNum() {
    return poNum;
  }


  public void setPoNum(String poNum) {
    
    
    
    this.poNum = poNum;
  }


   /**
   * Get date
   * @return date
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public OffsetDateTime getDate() {
    return date;
  }




  public PurchaseOrderDetail buyerName(String buyerName) {
    
    
    
    
    this.buyerName = buyerName;
    return this;
  }

   /**
   * Get buyerName
   * @return buyerName
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")

  public String getBuyerName() {
    return buyerName;
  }


  public void setBuyerName(String buyerName) {
    
    
    
    this.buyerName = buyerName;
  }


  public PurchaseOrderDetail buyerContact(String buyerContact) {
    
    
    
    
    this.buyerContact = buyerContact;
    return this;
  }

   /**
   * Get buyerContact
   * @return buyerContact
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")

  public String getBuyerContact() {
    return buyerContact;
  }


  public void setBuyerContact(String buyerContact) {
    
    
    
    this.buyerContact = buyerContact;
  }


  public PurchaseOrderDetail buyerAddressLineOne(String buyerAddressLineOne) {
    
    
    
    
    this.buyerAddressLineOne = buyerAddressLineOne;
    return this;
  }

   /**
   * Get buyerAddressLineOne
   * @return buyerAddressLineOne
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")

  public String getBuyerAddressLineOne() {
    return buyerAddressLineOne;
  }


  public void setBuyerAddressLineOne(String buyerAddressLineOne) {
    
    
    
    this.buyerAddressLineOne = buyerAddressLineOne;
  }


  public PurchaseOrderDetail buyerPostalCode(String buyerPostalCode) {
    
    
    
    
    this.buyerPostalCode = buyerPostalCode;
    return this;
  }

   /**
   * Get buyerPostalCode
   * @return buyerPostalCode
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")

  public String getBuyerPostalCode() {
    return buyerPostalCode;
  }


  public void setBuyerPostalCode(String buyerPostalCode) {
    
    
    
    this.buyerPostalCode = buyerPostalCode;
  }


  public PurchaseOrderDetail buyerCity(String buyerCity) {
    
    
    
    
    this.buyerCity = buyerCity;
    return this;
  }

   /**
   * Get buyerCity
   * @return buyerCity
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")

  public String getBuyerCity() {
    return buyerCity;
  }


  public void setBuyerCity(String buyerCity) {
    
    
    
    this.buyerCity = buyerCity;
  }


  public PurchaseOrderDetail buyerStateProvince(String buyerStateProvince) {
    
    
    
    
    this.buyerStateProvince = buyerStateProvince;
    return this;
  }

   /**
   * Get buyerStateProvince
   * @return buyerStateProvince
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getBuyerStateProvince() {
    return buyerStateProvince;
  }


  public void setBuyerStateProvince(String buyerStateProvince) {
    
    
    
    this.buyerStateProvince = buyerStateProvince;
  }


  public PurchaseOrderDetail buyerCountry(String buyerCountry) {
    
    
    
    
    this.buyerCountry = buyerCountry;
    return this;
  }

   /**
   * Get buyerCountry
   * @return buyerCountry
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")

  public String getBuyerCountry() {
    return buyerCountry;
  }


  public void setBuyerCountry(String buyerCountry) {
    
    
    
    this.buyerCountry = buyerCountry;
  }


  public PurchaseOrderDetail buyerAddress(AddressSummary buyerAddress) {
    
    
    
    
    this.buyerAddress = buyerAddress;
    return this;
  }

   /**
   * Get buyerAddress
   * @return buyerAddress
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")

  public AddressSummary getBuyerAddress() {
    return buyerAddress;
  }


  public void setBuyerAddress(AddressSummary buyerAddress) {
    
    
    
    this.buyerAddress = buyerAddress;
  }


  public PurchaseOrderDetail receiverName(String receiverName) {
    
    
    
    
    this.receiverName = receiverName;
    return this;
  }

   /**
   * Get receiverName
   * @return receiverName
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")

  public String getReceiverName() {
    return receiverName;
  }


  public void setReceiverName(String receiverName) {
    
    
    
    this.receiverName = receiverName;
  }


  public PurchaseOrderDetail receiverContact(String receiverContact) {
    
    
    
    
    this.receiverContact = receiverContact;
    return this;
  }

   /**
   * Get receiverContact
   * @return receiverContact
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")

  public String getReceiverContact() {
    return receiverContact;
  }


  public void setReceiverContact(String receiverContact) {
    
    
    
    this.receiverContact = receiverContact;
  }


  public PurchaseOrderDetail receiverAddressLineOne(String receiverAddressLineOne) {
    
    
    
    
    this.receiverAddressLineOne = receiverAddressLineOne;
    return this;
  }

   /**
   * Get receiverAddressLineOne
   * @return receiverAddressLineOne
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")

  public String getReceiverAddressLineOne() {
    return receiverAddressLineOne;
  }


  public void setReceiverAddressLineOne(String receiverAddressLineOne) {
    
    
    
    this.receiverAddressLineOne = receiverAddressLineOne;
  }


  public PurchaseOrderDetail receiverPostalCode(String receiverPostalCode) {
    
    
    
    
    this.receiverPostalCode = receiverPostalCode;
    return this;
  }

   /**
   * Get receiverPostalCode
   * @return receiverPostalCode
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")

  public String getReceiverPostalCode() {
    return receiverPostalCode;
  }


  public void setReceiverPostalCode(String receiverPostalCode) {
    
    
    
    this.receiverPostalCode = receiverPostalCode;
  }


  public PurchaseOrderDetail receiverCity(String receiverCity) {
    
    
    
    
    this.receiverCity = receiverCity;
    return this;
  }

   /**
   * Get receiverCity
   * @return receiverCity
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")

  public String getReceiverCity() {
    return receiverCity;
  }


  public void setReceiverCity(String receiverCity) {
    
    
    
    this.receiverCity = receiverCity;
  }


  public PurchaseOrderDetail receiverStateProvince(String receiverStateProvince) {
    
    
    
    
    this.receiverStateProvince = receiverStateProvince;
    return this;
  }

   /**
   * Get receiverStateProvince
   * @return receiverStateProvince
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getReceiverStateProvince() {
    return receiverStateProvince;
  }


  public void setReceiverStateProvince(String receiverStateProvince) {
    
    
    
    this.receiverStateProvince = receiverStateProvince;
  }


  public PurchaseOrderDetail receiverCountry(String receiverCountry) {
    
    
    
    
    this.receiverCountry = receiverCountry;
    return this;
  }

   /**
   * Get receiverCountry
   * @return receiverCountry
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")

  public String getReceiverCountry() {
    return receiverCountry;
  }


  public void setReceiverCountry(String receiverCountry) {
    
    
    
    this.receiverCountry = receiverCountry;
  }


  public PurchaseOrderDetail receiverAddress(AddressSummary receiverAddress) {
    
    
    
    
    this.receiverAddress = receiverAddress;
    return this;
  }

   /**
   * Get receiverAddress
   * @return receiverAddress
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")

  public AddressSummary getReceiverAddress() {
    return receiverAddress;
  }


  public void setReceiverAddress(AddressSummary receiverAddress) {
    
    
    
    this.receiverAddress = receiverAddress;
  }


  public PurchaseOrderDetail prefVendor(VendorRead prefVendor) {
    
    
    
    
    this.prefVendor = prefVendor;
    return this;
  }

   /**
   * Get prefVendor
   * @return prefVendor
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")

  public VendorRead getPrefVendor() {
    return prefVendor;
  }


  public void setPrefVendor(VendorRead prefVendor) {
    
    
    
    this.prefVendor = prefVendor;
  }


  public PurchaseOrderDetail vendorName(String vendorName) {
    
    
    
    
    this.vendorName = vendorName;
    return this;
  }

   /**
   * Get vendorName
   * @return vendorName
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getVendorName() {
    return vendorName;
  }


  public void setVendorName(String vendorName) {
    
    
    
    this.vendorName = vendorName;
  }


  public PurchaseOrderDetail vendorContact(String vendorContact) {
    
    
    
    
    this.vendorContact = vendorContact;
    return this;
  }

   /**
   * Get vendorContact
   * @return vendorContact
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getVendorContact() {
    return vendorContact;
  }


  public void setVendorContact(String vendorContact) {
    
    
    
    this.vendorContact = vendorContact;
  }


  public PurchaseOrderDetail vendorAddressLineOne(String vendorAddressLineOne) {
    
    
    
    
    this.vendorAddressLineOne = vendorAddressLineOne;
    return this;
  }

   /**
   * Get vendorAddressLineOne
   * @return vendorAddressLineOne
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getVendorAddressLineOne() {
    return vendorAddressLineOne;
  }


  public void setVendorAddressLineOne(String vendorAddressLineOne) {
    
    
    
    this.vendorAddressLineOne = vendorAddressLineOne;
  }


  public PurchaseOrderDetail vendorPostalCode(String vendorPostalCode) {
    
    
    
    
    this.vendorPostalCode = vendorPostalCode;
    return this;
  }

   /**
   * Get vendorPostalCode
   * @return vendorPostalCode
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getVendorPostalCode() {
    return vendorPostalCode;
  }


  public void setVendorPostalCode(String vendorPostalCode) {
    
    
    
    this.vendorPostalCode = vendorPostalCode;
  }


  public PurchaseOrderDetail vendorCity(String vendorCity) {
    
    
    
    
    this.vendorCity = vendorCity;
    return this;
  }

   /**
   * Get vendorCity
   * @return vendorCity
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getVendorCity() {
    return vendorCity;
  }


  public void setVendorCity(String vendorCity) {
    
    
    
    this.vendorCity = vendorCity;
  }


  public PurchaseOrderDetail vendorStateProvince(String vendorStateProvince) {
    
    
    
    
    this.vendorStateProvince = vendorStateProvince;
    return this;
  }

   /**
   * Get vendorStateProvince
   * @return vendorStateProvince
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getVendorStateProvince() {
    return vendorStateProvince;
  }


  public void setVendorStateProvince(String vendorStateProvince) {
    
    
    
    this.vendorStateProvince = vendorStateProvince;
  }


  public PurchaseOrderDetail vendorCountry(String vendorCountry) {
    
    
    
    
    this.vendorCountry = vendorCountry;
    return this;
  }

   /**
   * Get vendorCountry
   * @return vendorCountry
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getVendorCountry() {
    return vendorCountry;
  }


  public void setVendorCountry(String vendorCountry) {
    
    
    
    this.vendorCountry = vendorCountry;
  }


  public PurchaseOrderDetail paymentTerms(String paymentTerms) {
    
    
    
    
    this.paymentTerms = paymentTerms;
    return this;
  }

   /**
   * Get paymentTerms
   * @return paymentTerms
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")

  public String getPaymentTerms() {
    return paymentTerms;
  }


  public void setPaymentTerms(String paymentTerms) {
    
    
    
    this.paymentTerms = paymentTerms;
  }


  public PurchaseOrderDetail shippingTerms(String shippingTerms) {
    
    
    
    
    this.shippingTerms = shippingTerms;
    return this;
  }

   /**
   * Get shippingTerms
   * @return shippingTerms
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")

  public String getShippingTerms() {
    return shippingTerms;
  }


  public void setShippingTerms(String shippingTerms) {
    
    
    
    this.shippingTerms = shippingTerms;
  }


  public PurchaseOrderDetail shippingMethod(ShippingMethod shippingMethod) {
    
    
    
    
    this.shippingMethod = shippingMethod;
    return this;
  }

   /**
   * Get shippingMethod
   * @return shippingMethod
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")

  public ShippingMethod getShippingMethod() {
    return shippingMethod;
  }


  public void setShippingMethod(ShippingMethod shippingMethod) {
    
    
    
    this.shippingMethod = shippingMethod;
  }


  public PurchaseOrderDetail promiseDate(OffsetDateTime promiseDate) {
    
    
    
    
    this.promiseDate = promiseDate;
    return this;
  }

   /**
   * Get promiseDate
   * @return promiseDate
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")

  public OffsetDateTime getPromiseDate() {
    return promiseDate;
  }


  public void setPromiseDate(OffsetDateTime promiseDate) {
    
    
    
    this.promiseDate = promiseDate;
  }


  public PurchaseOrderDetail subtotal(BigDecimal subtotal) {
    
    
    
    
    this.subtotal = subtotal;
    return this;
  }

   /**
   * Get subtotal
   * @return subtotal
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")

  public BigDecimal getSubtotal() {
    return subtotal;
  }


  public void setSubtotal(BigDecimal subtotal) {
    
    
    
    this.subtotal = subtotal;
  }


  public PurchaseOrderDetail freight(BigDecimal freight) {
    
    
    
    
    this.freight = freight;
    return this;
  }

   /**
   * Get freight
   * @return freight
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public BigDecimal getFreight() {
    return freight;
  }


  public void setFreight(BigDecimal freight) {
    
    
    
    this.freight = freight;
  }


  public PurchaseOrderDetail tax(PriceModifierDocs tax) {
    
    
    
    
    this.tax = tax;
    return this;
  }

   /**
   * Get tax
   * @return tax
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public PriceModifierDocs getTax() {
    return tax;
  }


  public void setTax(PriceModifierDocs tax) {
    
    
    
    this.tax = tax;
  }


  public PurchaseOrderDetail discount(PriceModifierDocs discount) {
    
    
    
    
    this.discount = discount;
    return this;
  }

   /**
   * Get discount
   * @return discount
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public PriceModifierDocs getDiscount() {
    return discount;
  }


  public void setDiscount(PriceModifierDocs discount) {
    
    
    
    this.discount = discount;
  }


  public PurchaseOrderDetail other(BigDecimal other) {
    
    
    
    
    this.other = other;
    return this;
  }

   /**
   * Get other
   * @return other
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public BigDecimal getOther() {
    return other;
  }


  public void setOther(BigDecimal other) {
    
    
    
    this.other = other;
  }


  public PurchaseOrderDetail total(BigDecimal total) {
    
    
    
    
    this.total = total;
    return this;
  }

   /**
   * Get total
   * @return total
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")

  public BigDecimal getTotal() {
    return total;
  }


  public void setTotal(BigDecimal total) {
    
    
    
    this.total = total;
  }


  public PurchaseOrderDetail comment(String comment) {
    
    
    
    
    this.comment = comment;
    return this;
  }

   /**
   * Get comment
   * @return comment
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getComment() {
    return comment;
  }


  public void setComment(String comment) {
    
    
    
    this.comment = comment;
  }


  public PurchaseOrderDetail purchasedCurrency(CurrencySummary purchasedCurrency) {
    
    
    
    
    this.purchasedCurrency = purchasedCurrency;
    return this;
  }

   /**
   * Get purchasedCurrency
   * @return purchasedCurrency
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")

  public CurrencySummary getPurchasedCurrency() {
    return purchasedCurrency;
  }


  public void setPurchasedCurrency(CurrencySummary purchasedCurrency) {
    
    
    
    this.purchasedCurrency = purchasedCurrency;
  }


  public PurchaseOrderDetail purchasedCurrencyRate(BigDecimal purchasedCurrencyRate) {
    
    
    
    
    this.purchasedCurrencyRate = purchasedCurrencyRate;
    return this;
  }

   /**
   * Get purchasedCurrencyRate
   * @return purchasedCurrencyRate
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public BigDecimal getPurchasedCurrencyRate() {
    return purchasedCurrencyRate;
  }


  public void setPurchasedCurrencyRate(BigDecimal purchasedCurrencyRate) {
    
    
    
    this.purchasedCurrencyRate = purchasedCurrencyRate;
  }


  public PurchaseOrderDetail active(Boolean active) {
    
    
    
    
    this.active = active;
    return this;
  }

   /**
   * Get active
   * @return active
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Boolean getActive() {
    return active;
  }


  public void setActive(Boolean active) {
    
    
    
    this.active = active;
  }


  public PurchaseOrderDetail state(Object state) {
    
    
    
    
    this.state = state;
    return this;
  }

   /**
   * Get state
   * @return state
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Object getState() {
    return state;
  }


  public void setState(Object state) {
    
    
    
    this.state = state;
  }


  public PurchaseOrderDetail fulfilmentStatus(FulfilmentStatusEnum fulfilmentStatus) {
    
    
    
    
    this.fulfilmentStatus = fulfilmentStatus;
    return this;
  }

   /**
   * Get fulfilmentStatus
   * @return fulfilmentStatus
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public FulfilmentStatusEnum getFulfilmentStatus() {
    return fulfilmentStatus;
  }


  public void setFulfilmentStatus(FulfilmentStatusEnum fulfilmentStatus) {
    
    
    
    this.fulfilmentStatus = fulfilmentStatus;
  }


  public PurchaseOrderDetail disclaimerDescription(String disclaimerDescription) {
    
    
    
    
    this.disclaimerDescription = disclaimerDescription;
    return this;
  }

   /**
   * Get disclaimerDescription
   * @return disclaimerDescription
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getDisclaimerDescription() {
    return disclaimerDescription;
  }


  public void setDisclaimerDescription(String disclaimerDescription) {
    
    
    
    this.disclaimerDescription = disclaimerDescription;
  }


  public PurchaseOrderDetail disclaimerText(String disclaimerText) {
    
    
    
    
    this.disclaimerText = disclaimerText;
    return this;
  }

   /**
   * Get disclaimerText
   * @return disclaimerText
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getDisclaimerText() {
    return disclaimerText;
  }


  public void setDisclaimerText(String disclaimerText) {
    
    
    
    this.disclaimerText = disclaimerText;
  }


  public PurchaseOrderDetail recordedDate(OffsetDateTime recordedDate) {
    
    
    
    
    this.recordedDate = recordedDate;
    return this;
  }

   /**
   * Get recordedDate
   * @return recordedDate
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public OffsetDateTime getRecordedDate() {
    return recordedDate;
  }


  public void setRecordedDate(OffsetDateTime recordedDate) {
    
    
    
    this.recordedDate = recordedDate;
  }


  public PurchaseOrderDetail closedDate(OffsetDateTime closedDate) {
    
    
    
    
    this.closedDate = closedDate;
    return this;
  }

   /**
   * Get closedDate
   * @return closedDate
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public OffsetDateTime getClosedDate() {
    return closedDate;
  }


  public void setClosedDate(OffsetDateTime closedDate) {
    
    
    
    this.closedDate = closedDate;
  }


   /**
   * Get lastModified
   * @return lastModified
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public OffsetDateTime getLastModified() {
    return lastModified;
  }




  public PurchaseOrderDetail stagedForExport(Boolean stagedForExport) {
    
    
    
    
    this.stagedForExport = stagedForExport;
    return this;
  }

   /**
   * Get stagedForExport
   * @return stagedForExport
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Boolean getStagedForExport() {
    return stagedForExport;
  }


  public void setStagedForExport(Boolean stagedForExport) {
    
    
    
    this.stagedForExport = stagedForExport;
  }


   /**
   * Get itemCount
   * @return itemCount
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Integer getItemCount() {
    return itemCount;
  }




   /**
   * Get mostRecentVersion
   * minimum: -2147483648
   * maximum: 2147483647
   * @return mostRecentVersion
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Integer getMostRecentVersion() {
    return mostRecentVersion;
  }




   /**
   * Get punchoutSystem
   * @return punchoutSystem
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Integer getPunchoutSystem() {
    return punchoutSystem;
  }




   /**
   * Get purchaseAgreement
   * @return purchaseAgreement
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Integer getPurchaseAgreement() {
    return purchaseAgreement;
  }




  public PurchaseOrderDetail purchaseAgreementStatus(ExpenseTypeEnumNullable purchaseAgreementStatus) {
    
    
    
    
    this.purchaseAgreementStatus = purchaseAgreementStatus;
    return this;
  }

   /**
   * Get purchaseAgreementStatus
   * @return purchaseAgreementStatus
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public ExpenseTypeEnumNullable getPurchaseAgreementStatus() {
    return purchaseAgreementStatus;
  }


  public void setPurchaseAgreementStatus(ExpenseTypeEnumNullable purchaseAgreementStatus) {
    
    
    
    this.purchaseAgreementStatus = purchaseAgreementStatus;
  }


   /**
   * Get punchoutVendorReference
   * @return punchoutVendorReference
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Integer getPunchoutVendorReference() {
    return punchoutVendorReference;
  }




   /**
   * Get punchoutSupplierIcon
   * @return punchoutSupplierIcon
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getPunchoutSupplierIcon() {
    return punchoutSupplierIcon;
  }




   /**
   * Get punchoutSupplierName
   * @return punchoutSupplierName
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getPunchoutSupplierName() {
    return punchoutSupplierName;
  }




   /**
   * Get hasBlanketOrderItems
   * @return hasBlanketOrderItems
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Boolean getHasBlanketOrderItems() {
    return hasBlanketOrderItems;
  }




  public PurchaseOrderDetail expiryDate(OffsetDateTime expiryDate) {
    
    
    
    
    this.expiryDate = expiryDate;
    return this;
  }

   /**
   * Get expiryDate
   * @return expiryDate
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public OffsetDateTime getExpiryDate() {
    return expiryDate;
  }


  public void setExpiryDate(OffsetDateTime expiryDate) {
    
    
    
    this.expiryDate = expiryDate;
  }


  public PurchaseOrderDetail contract(PurchaseOrderContract contract) {
    
    
    
    
    this.contract = contract;
    return this;
  }

   /**
   * Get contract
   * @return contract
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")

  public PurchaseOrderContract getContract() {
    return contract;
  }


  public void setContract(PurchaseOrderContract contract) {
    
    
    
    this.contract = contract;
  }


  public PurchaseOrderDetail orderItems(List<PurchaseOrderLineItemRead> orderItems) {
    
    
    
    
    this.orderItems = orderItems;
    return this;
  }

  public PurchaseOrderDetail addOrderItemsItem(PurchaseOrderLineItemRead orderItemsItem) {
    this.orderItems.add(orderItemsItem);
    return this;
  }

   /**
   * Get orderItems
   * @return orderItems
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")

  public List<PurchaseOrderLineItemRead> getOrderItems() {
    return orderItems;
  }


  public void setOrderItems(List<PurchaseOrderLineItemRead> orderItems) {
    
    
    
    this.orderItems = orderItems;
  }


  public PurchaseOrderDetail creditcardIsEditable(Boolean creditcardIsEditable) {
    
    
    
    
    this.creditcardIsEditable = creditcardIsEditable;
    return this;
  }

   /**
   * Get creditcardIsEditable
   * @return creditcardIsEditable
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")

  public Boolean getCreditcardIsEditable() {
    return creditcardIsEditable;
  }


  public void setCreditcardIsEditable(Boolean creditcardIsEditable) {
    
    
    
    this.creditcardIsEditable = creditcardIsEditable;
  }


   /**
   * Get customFields
   * @return customFields
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public List<CustomFieldValueRead> getCustomFields() {
    return customFields;
  }




  public PurchaseOrderDetail creditcard(CreditCardReadNullable creditcard) {
    
    
    
    
    this.creditcard = creditcard;
    return this;
  }

   /**
   * Get creditcard
   * @return creditcard
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(required = true, value = "")

  public CreditCardReadNullable getCreditcard() {
    return creditcard;
  }


  public void setCreditcard(CreditCardReadNullable creditcard) {
    
    
    
    this.creditcard = creditcard;
  }


  public PurchaseOrderDetail paymentTerm(PaymentTerm paymentTerm) {
    
    
    
    
    this.paymentTerm = paymentTerm;
    return this;
  }

   /**
   * Get paymentTerm
   * @return paymentTerm
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")

  public PaymentTerm getPaymentTerm() {
    return paymentTerm;
  }


  public void setPaymentTerm(PaymentTerm paymentTerm) {
    
    
    
    this.paymentTerm = paymentTerm;
  }


  public PurchaseOrderDetail shippingTerm(ShippingTerm shippingTerm) {
    
    
    
    
    this.shippingTerm = shippingTerm;
    return this;
  }

   /**
   * Get shippingTerm
   * @return shippingTerm
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")

  public ShippingTerm getShippingTerm() {
    return shippingTerm;
  }


  public void setShippingTerm(ShippingTerm shippingTerm) {
    
    
    
    this.shippingTerm = shippingTerm;
  }


  public PurchaseOrderDetail costDetails(CostDetailsNullable costDetails) {
    
    
    
    
    this.costDetails = costDetails;
    return this;
  }

   /**
   * Get costDetails
   * @return costDetails
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public CostDetailsNullable getCostDetails() {
    return costDetails;
  }


  public void setCostDetails(CostDetailsNullable costDetails) {
    
    
    
    this.costDetails = costDetails;
  }

  /**
   * A container for additional, undeclared properties.
   * This is a holder for any undeclared properties as specified with
   * the 'additionalProperties' keyword in the OAS document.
   */
  private Map<String, Object> additionalProperties;

  /**
   * Set the additional (undeclared) property with the specified name and value.
   * If the property does not already exist, create it otherwise replace it.
   *
   * @param key name of the property
   * @param value value of the property
   * @return the PurchaseOrderDetail instance itself
   */
  public PurchaseOrderDetail putAdditionalProperty(String key, Object value) {
    if (this.additionalProperties == null) {
        this.additionalProperties = new HashMap<String, Object>();
    }
    this.additionalProperties.put(key, value);
    return this;
  }

  /**
   * Return the additional (undeclared) property.
   *
   * @return a map of objects
   */
  public Map<String, Object> getAdditionalProperties() {
    return additionalProperties;
  }

  /**
   * Return the additional (undeclared) property with the specified name.
   *
   * @param key name of the property
   * @return an object
   */
  public Object getAdditionalProperty(String key) {
    if (this.additionalProperties == null) {
        return null;
    }
    return this.additionalProperties.get(key);
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    PurchaseOrderDetail purchaseOrderDetail = (PurchaseOrderDetail) o;
    return Objects.equals(this.version, purchaseOrderDetail.version) &&
        Objects.equals(this.number, purchaseOrderDetail.number) &&
        Objects.equals(this.uuid, purchaseOrderDetail.uuid) &&
        Objects.equals(this.purchaser, purchaseOrderDetail.purchaser) &&
        Objects.equals(this.procurifyPO, purchaseOrderDetail.procurifyPO) &&
        Objects.equals(this.poNum, purchaseOrderDetail.poNum) &&
        Objects.equals(this.date, purchaseOrderDetail.date) &&
        Objects.equals(this.buyerName, purchaseOrderDetail.buyerName) &&
        Objects.equals(this.buyerContact, purchaseOrderDetail.buyerContact) &&
        Objects.equals(this.buyerAddressLineOne, purchaseOrderDetail.buyerAddressLineOne) &&
        Objects.equals(this.buyerPostalCode, purchaseOrderDetail.buyerPostalCode) &&
        Objects.equals(this.buyerCity, purchaseOrderDetail.buyerCity) &&
        Objects.equals(this.buyerStateProvince, purchaseOrderDetail.buyerStateProvince) &&
        Objects.equals(this.buyerCountry, purchaseOrderDetail.buyerCountry) &&
        Objects.equals(this.buyerAddress, purchaseOrderDetail.buyerAddress) &&
        Objects.equals(this.receiverName, purchaseOrderDetail.receiverName) &&
        Objects.equals(this.receiverContact, purchaseOrderDetail.receiverContact) &&
        Objects.equals(this.receiverAddressLineOne, purchaseOrderDetail.receiverAddressLineOne) &&
        Objects.equals(this.receiverPostalCode, purchaseOrderDetail.receiverPostalCode) &&
        Objects.equals(this.receiverCity, purchaseOrderDetail.receiverCity) &&
        Objects.equals(this.receiverStateProvince, purchaseOrderDetail.receiverStateProvince) &&
        Objects.equals(this.receiverCountry, purchaseOrderDetail.receiverCountry) &&
        Objects.equals(this.receiverAddress, purchaseOrderDetail.receiverAddress) &&
        Objects.equals(this.prefVendor, purchaseOrderDetail.prefVendor) &&
        Objects.equals(this.vendorName, purchaseOrderDetail.vendorName) &&
        Objects.equals(this.vendorContact, purchaseOrderDetail.vendorContact) &&
        Objects.equals(this.vendorAddressLineOne, purchaseOrderDetail.vendorAddressLineOne) &&
        Objects.equals(this.vendorPostalCode, purchaseOrderDetail.vendorPostalCode) &&
        Objects.equals(this.vendorCity, purchaseOrderDetail.vendorCity) &&
        Objects.equals(this.vendorStateProvince, purchaseOrderDetail.vendorStateProvince) &&
        Objects.equals(this.vendorCountry, purchaseOrderDetail.vendorCountry) &&
        Objects.equals(this.paymentTerms, purchaseOrderDetail.paymentTerms) &&
        Objects.equals(this.shippingTerms, purchaseOrderDetail.shippingTerms) &&
        Objects.equals(this.shippingMethod, purchaseOrderDetail.shippingMethod) &&
        Objects.equals(this.promiseDate, purchaseOrderDetail.promiseDate) &&
        Objects.equals(this.subtotal, purchaseOrderDetail.subtotal) &&
        Objects.equals(this.freight, purchaseOrderDetail.freight) &&
        Objects.equals(this.tax, purchaseOrderDetail.tax) &&
        Objects.equals(this.discount, purchaseOrderDetail.discount) &&
        Objects.equals(this.other, purchaseOrderDetail.other) &&
        Objects.equals(this.total, purchaseOrderDetail.total) &&
        Objects.equals(this.comment, purchaseOrderDetail.comment) &&
        Objects.equals(this.purchasedCurrency, purchaseOrderDetail.purchasedCurrency) &&
        Objects.equals(this.purchasedCurrencyRate, purchaseOrderDetail.purchasedCurrencyRate) &&
        Objects.equals(this.active, purchaseOrderDetail.active) &&
        Objects.equals(this.state, purchaseOrderDetail.state) &&
        Objects.equals(this.fulfilmentStatus, purchaseOrderDetail.fulfilmentStatus) &&
        Objects.equals(this.disclaimerDescription, purchaseOrderDetail.disclaimerDescription) &&
        Objects.equals(this.disclaimerText, purchaseOrderDetail.disclaimerText) &&
        Objects.equals(this.recordedDate, purchaseOrderDetail.recordedDate) &&
        Objects.equals(this.closedDate, purchaseOrderDetail.closedDate) &&
        Objects.equals(this.lastModified, purchaseOrderDetail.lastModified) &&
        Objects.equals(this.stagedForExport, purchaseOrderDetail.stagedForExport) &&
        Objects.equals(this.itemCount, purchaseOrderDetail.itemCount) &&
        Objects.equals(this.mostRecentVersion, purchaseOrderDetail.mostRecentVersion) &&
        Objects.equals(this.punchoutSystem, purchaseOrderDetail.punchoutSystem) &&
        Objects.equals(this.purchaseAgreement, purchaseOrderDetail.purchaseAgreement) &&
        Objects.equals(this.purchaseAgreementStatus, purchaseOrderDetail.purchaseAgreementStatus) &&
        Objects.equals(this.punchoutVendorReference, purchaseOrderDetail.punchoutVendorReference) &&
        Objects.equals(this.punchoutSupplierIcon, purchaseOrderDetail.punchoutSupplierIcon) &&
        Objects.equals(this.punchoutSupplierName, purchaseOrderDetail.punchoutSupplierName) &&
        Objects.equals(this.hasBlanketOrderItems, purchaseOrderDetail.hasBlanketOrderItems) &&
        Objects.equals(this.expiryDate, purchaseOrderDetail.expiryDate) &&
        Objects.equals(this.contract, purchaseOrderDetail.contract) &&
        Objects.equals(this.orderItems, purchaseOrderDetail.orderItems) &&
        Objects.equals(this.creditcardIsEditable, purchaseOrderDetail.creditcardIsEditable) &&
        Objects.equals(this.customFields, purchaseOrderDetail.customFields) &&
        Objects.equals(this.creditcard, purchaseOrderDetail.creditcard) &&
        Objects.equals(this.paymentTerm, purchaseOrderDetail.paymentTerm) &&
        Objects.equals(this.shippingTerm, purchaseOrderDetail.shippingTerm) &&
        Objects.equals(this.costDetails, purchaseOrderDetail.costDetails)&&
        Objects.equals(this.additionalProperties, purchaseOrderDetail.additionalProperties);
  }

  private static <T> boolean equalsNullable(JsonNullable<T> a, JsonNullable<T> b) {
    return a == b || (a != null && b != null && a.isPresent() && b.isPresent() && Objects.deepEquals(a.get(), b.get()));
  }

  @Override
  public int hashCode() {
    return Objects.hash(version, number, uuid, purchaser, procurifyPO, poNum, date, buyerName, buyerContact, buyerAddressLineOne, buyerPostalCode, buyerCity, buyerStateProvince, buyerCountry, buyerAddress, receiverName, receiverContact, receiverAddressLineOne, receiverPostalCode, receiverCity, receiverStateProvince, receiverCountry, receiverAddress, prefVendor, vendorName, vendorContact, vendorAddressLineOne, vendorPostalCode, vendorCity, vendorStateProvince, vendorCountry, paymentTerms, shippingTerms, shippingMethod, promiseDate, subtotal, freight, tax, discount, other, total, comment, purchasedCurrency, purchasedCurrencyRate, active, state, fulfilmentStatus, disclaimerDescription, disclaimerText, recordedDate, closedDate, lastModified, stagedForExport, itemCount, mostRecentVersion, punchoutSystem, purchaseAgreement, purchaseAgreementStatus, punchoutVendorReference, punchoutSupplierIcon, punchoutSupplierName, hasBlanketOrderItems, expiryDate, contract, orderItems, creditcardIsEditable, customFields, creditcard, paymentTerm, shippingTerm, costDetails, additionalProperties);
  }

  private static <T> int hashCodeNullable(JsonNullable<T> a) {
    if (a == null) {
      return 1;
    }
    return a.isPresent() ? Arrays.deepHashCode(new Object[]{a.get()}) : 31;
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class PurchaseOrderDetail {\n");
    sb.append("    version: ").append(toIndentedString(version)).append("\n");
    sb.append("    number: ").append(toIndentedString(number)).append("\n");
    sb.append("    uuid: ").append(toIndentedString(uuid)).append("\n");
    sb.append("    purchaser: ").append(toIndentedString(purchaser)).append("\n");
    sb.append("    procurifyPO: ").append(toIndentedString(procurifyPO)).append("\n");
    sb.append("    poNum: ").append(toIndentedString(poNum)).append("\n");
    sb.append("    date: ").append(toIndentedString(date)).append("\n");
    sb.append("    buyerName: ").append(toIndentedString(buyerName)).append("\n");
    sb.append("    buyerContact: ").append(toIndentedString(buyerContact)).append("\n");
    sb.append("    buyerAddressLineOne: ").append(toIndentedString(buyerAddressLineOne)).append("\n");
    sb.append("    buyerPostalCode: ").append(toIndentedString(buyerPostalCode)).append("\n");
    sb.append("    buyerCity: ").append(toIndentedString(buyerCity)).append("\n");
    sb.append("    buyerStateProvince: ").append(toIndentedString(buyerStateProvince)).append("\n");
    sb.append("    buyerCountry: ").append(toIndentedString(buyerCountry)).append("\n");
    sb.append("    buyerAddress: ").append(toIndentedString(buyerAddress)).append("\n");
    sb.append("    receiverName: ").append(toIndentedString(receiverName)).append("\n");
    sb.append("    receiverContact: ").append(toIndentedString(receiverContact)).append("\n");
    sb.append("    receiverAddressLineOne: ").append(toIndentedString(receiverAddressLineOne)).append("\n");
    sb.append("    receiverPostalCode: ").append(toIndentedString(receiverPostalCode)).append("\n");
    sb.append("    receiverCity: ").append(toIndentedString(receiverCity)).append("\n");
    sb.append("    receiverStateProvince: ").append(toIndentedString(receiverStateProvince)).append("\n");
    sb.append("    receiverCountry: ").append(toIndentedString(receiverCountry)).append("\n");
    sb.append("    receiverAddress: ").append(toIndentedString(receiverAddress)).append("\n");
    sb.append("    prefVendor: ").append(toIndentedString(prefVendor)).append("\n");
    sb.append("    vendorName: ").append(toIndentedString(vendorName)).append("\n");
    sb.append("    vendorContact: ").append(toIndentedString(vendorContact)).append("\n");
    sb.append("    vendorAddressLineOne: ").append(toIndentedString(vendorAddressLineOne)).append("\n");
    sb.append("    vendorPostalCode: ").append(toIndentedString(vendorPostalCode)).append("\n");
    sb.append("    vendorCity: ").append(toIndentedString(vendorCity)).append("\n");
    sb.append("    vendorStateProvince: ").append(toIndentedString(vendorStateProvince)).append("\n");
    sb.append("    vendorCountry: ").append(toIndentedString(vendorCountry)).append("\n");
    sb.append("    paymentTerms: ").append(toIndentedString(paymentTerms)).append("\n");
    sb.append("    shippingTerms: ").append(toIndentedString(shippingTerms)).append("\n");
    sb.append("    shippingMethod: ").append(toIndentedString(shippingMethod)).append("\n");
    sb.append("    promiseDate: ").append(toIndentedString(promiseDate)).append("\n");
    sb.append("    subtotal: ").append(toIndentedString(subtotal)).append("\n");
    sb.append("    freight: ").append(toIndentedString(freight)).append("\n");
    sb.append("    tax: ").append(toIndentedString(tax)).append("\n");
    sb.append("    discount: ").append(toIndentedString(discount)).append("\n");
    sb.append("    other: ").append(toIndentedString(other)).append("\n");
    sb.append("    total: ").append(toIndentedString(total)).append("\n");
    sb.append("    comment: ").append(toIndentedString(comment)).append("\n");
    sb.append("    purchasedCurrency: ").append(toIndentedString(purchasedCurrency)).append("\n");
    sb.append("    purchasedCurrencyRate: ").append(toIndentedString(purchasedCurrencyRate)).append("\n");
    sb.append("    active: ").append(toIndentedString(active)).append("\n");
    sb.append("    state: ").append(toIndentedString(state)).append("\n");
    sb.append("    fulfilmentStatus: ").append(toIndentedString(fulfilmentStatus)).append("\n");
    sb.append("    disclaimerDescription: ").append(toIndentedString(disclaimerDescription)).append("\n");
    sb.append("    disclaimerText: ").append(toIndentedString(disclaimerText)).append("\n");
    sb.append("    recordedDate: ").append(toIndentedString(recordedDate)).append("\n");
    sb.append("    closedDate: ").append(toIndentedString(closedDate)).append("\n");
    sb.append("    lastModified: ").append(toIndentedString(lastModified)).append("\n");
    sb.append("    stagedForExport: ").append(toIndentedString(stagedForExport)).append("\n");
    sb.append("    itemCount: ").append(toIndentedString(itemCount)).append("\n");
    sb.append("    mostRecentVersion: ").append(toIndentedString(mostRecentVersion)).append("\n");
    sb.append("    punchoutSystem: ").append(toIndentedString(punchoutSystem)).append("\n");
    sb.append("    purchaseAgreement: ").append(toIndentedString(purchaseAgreement)).append("\n");
    sb.append("    purchaseAgreementStatus: ").append(toIndentedString(purchaseAgreementStatus)).append("\n");
    sb.append("    punchoutVendorReference: ").append(toIndentedString(punchoutVendorReference)).append("\n");
    sb.append("    punchoutSupplierIcon: ").append(toIndentedString(punchoutSupplierIcon)).append("\n");
    sb.append("    punchoutSupplierName: ").append(toIndentedString(punchoutSupplierName)).append("\n");
    sb.append("    hasBlanketOrderItems: ").append(toIndentedString(hasBlanketOrderItems)).append("\n");
    sb.append("    expiryDate: ").append(toIndentedString(expiryDate)).append("\n");
    sb.append("    contract: ").append(toIndentedString(contract)).append("\n");
    sb.append("    orderItems: ").append(toIndentedString(orderItems)).append("\n");
    sb.append("    creditcardIsEditable: ").append(toIndentedString(creditcardIsEditable)).append("\n");
    sb.append("    customFields: ").append(toIndentedString(customFields)).append("\n");
    sb.append("    creditcard: ").append(toIndentedString(creditcard)).append("\n");
    sb.append("    paymentTerm: ").append(toIndentedString(paymentTerm)).append("\n");
    sb.append("    shippingTerm: ").append(toIndentedString(shippingTerm)).append("\n");
    sb.append("    costDetails: ").append(toIndentedString(costDetails)).append("\n");
    sb.append("    additionalProperties: ").append(toIndentedString(additionalProperties)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("version");
    openapiFields.add("number");
    openapiFields.add("uuid");
    openapiFields.add("purchaser");
    openapiFields.add("procurify_PO");
    openapiFields.add("PO_Num");
    openapiFields.add("date");
    openapiFields.add("buyer_name");
    openapiFields.add("buyer_contact");
    openapiFields.add("buyer_addressLineOne");
    openapiFields.add("buyer_postalCode");
    openapiFields.add("buyer_city");
    openapiFields.add("buyer_state_province");
    openapiFields.add("buyer_country");
    openapiFields.add("buyer_address");
    openapiFields.add("receiver_name");
    openapiFields.add("receiver_contact");
    openapiFields.add("receiver_addressLineOne");
    openapiFields.add("receiver_postalCode");
    openapiFields.add("receiver_city");
    openapiFields.add("receiver_state_province");
    openapiFields.add("receiver_country");
    openapiFields.add("receiver_address");
    openapiFields.add("pref_vendor");
    openapiFields.add("vendor_name");
    openapiFields.add("vendor_contact");
    openapiFields.add("vendor_addressLineOne");
    openapiFields.add("vendor_postalCode");
    openapiFields.add("vendor_city");
    openapiFields.add("vendor_state_province");
    openapiFields.add("vendor_country");
    openapiFields.add("payment_terms");
    openapiFields.add("shipping_terms");
    openapiFields.add("shipping_method");
    openapiFields.add("promise_date");
    openapiFields.add("subtotal");
    openapiFields.add("freight");
    openapiFields.add("tax");
    openapiFields.add("discount");
    openapiFields.add("other");
    openapiFields.add("total");
    openapiFields.add("comment");
    openapiFields.add("purchased_currency");
    openapiFields.add("purchased_currency_rate");
    openapiFields.add("active");
    openapiFields.add("state");
    openapiFields.add("fulfilment_status");
    openapiFields.add("disclaimer_description");
    openapiFields.add("disclaimer_text");
    openapiFields.add("recorded_date");
    openapiFields.add("closed_date");
    openapiFields.add("last_modified");
    openapiFields.add("staged_for_export");
    openapiFields.add("item_count");
    openapiFields.add("most_recent_version");
    openapiFields.add("punchout_system");
    openapiFields.add("purchase_agreement");
    openapiFields.add("purchase_agreement_status");
    openapiFields.add("punchout_vendor_reference");
    openapiFields.add("punchout_supplier_icon");
    openapiFields.add("punchout_supplier_name");
    openapiFields.add("has_blanket_order_items");
    openapiFields.add("expiry_date");
    openapiFields.add("contract");
    openapiFields.add("order_items");
    openapiFields.add("creditcard_is_editable");
    openapiFields.add("custom_fields");
    openapiFields.add("creditcard");
    openapiFields.add("payment_term");
    openapiFields.add("shipping_term");
    openapiFields.add("cost_details");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
    openapiRequiredFields.add("uuid");
    openapiRequiredFields.add("purchaser");
    openapiRequiredFields.add("buyer_name");
    openapiRequiredFields.add("buyer_contact");
    openapiRequiredFields.add("buyer_addressLineOne");
    openapiRequiredFields.add("buyer_postalCode");
    openapiRequiredFields.add("buyer_city");
    openapiRequiredFields.add("buyer_country");
    openapiRequiredFields.add("buyer_address");
    openapiRequiredFields.add("receiver_name");
    openapiRequiredFields.add("receiver_contact");
    openapiRequiredFields.add("receiver_addressLineOne");
    openapiRequiredFields.add("receiver_postalCode");
    openapiRequiredFields.add("receiver_city");
    openapiRequiredFields.add("receiver_country");
    openapiRequiredFields.add("receiver_address");
    openapiRequiredFields.add("pref_vendor");
    openapiRequiredFields.add("payment_terms");
    openapiRequiredFields.add("shipping_terms");
    openapiRequiredFields.add("shipping_method");
    openapiRequiredFields.add("promise_date");
    openapiRequiredFields.add("subtotal");
    openapiRequiredFields.add("total");
    openapiRequiredFields.add("purchased_currency");
    openapiRequiredFields.add("contract");
    openapiRequiredFields.add("order_items");
    openapiRequiredFields.add("creditcard_is_editable");
    openapiRequiredFields.add("creditcard");
    openapiRequiredFields.add("payment_term");
    openapiRequiredFields.add("shipping_term");
  }

 /**
  * Validates the JSON Object and throws an exception if issues found
  *
  * @param jsonObj JSON Object
  * @throws IOException if the JSON Object is invalid with respect to PurchaseOrderDetail
  */
  public static void validateJsonObject(JsonObject jsonObj) throws IOException {
      if (jsonObj == null) {
        if (!PurchaseOrderDetail.openapiRequiredFields.isEmpty()) { // has required fields but JSON object is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in PurchaseOrderDetail is not found in the empty JSON string", PurchaseOrderDetail.openapiRequiredFields.toString()));
        }
      }

      // check to make sure all required properties/fields are present in the JSON string
      for (String requiredField : PurchaseOrderDetail.openapiRequiredFields) {
        if (jsonObj.get(requiredField) == null) {
          throw new IllegalArgumentException(String.format("The required field `%s` is not found in the JSON string: %s", requiredField, jsonObj.toString()));
        }
      }
      if ((jsonObj.get("number") != null && !jsonObj.get("number").isJsonNull()) && !jsonObj.get("number").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `number` to be a primitive type in the JSON string but got `%s`", jsonObj.get("number").toString()));
      }
      if (!jsonObj.get("uuid").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `uuid` to be a primitive type in the JSON string but got `%s`", jsonObj.get("uuid").toString()));
      }
      // validate the required field `purchaser`
      UserSummary.validateJsonObject(jsonObj.getAsJsonObject("purchaser"));
      if (!jsonObj.get("PO_Num").isJsonNull() && (jsonObj.get("PO_Num") != null && !jsonObj.get("PO_Num").isJsonNull()) && !jsonObj.get("PO_Num").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `PO_Num` to be a primitive type in the JSON string but got `%s`", jsonObj.get("PO_Num").toString()));
      }
      if (!jsonObj.get("buyer_name").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `buyer_name` to be a primitive type in the JSON string but got `%s`", jsonObj.get("buyer_name").toString()));
      }
      if (!jsonObj.get("buyer_contact").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `buyer_contact` to be a primitive type in the JSON string but got `%s`", jsonObj.get("buyer_contact").toString()));
      }
      if (!jsonObj.get("buyer_addressLineOne").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `buyer_addressLineOne` to be a primitive type in the JSON string but got `%s`", jsonObj.get("buyer_addressLineOne").toString()));
      }
      if (!jsonObj.get("buyer_postalCode").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `buyer_postalCode` to be a primitive type in the JSON string but got `%s`", jsonObj.get("buyer_postalCode").toString()));
      }
      if (!jsonObj.get("buyer_city").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `buyer_city` to be a primitive type in the JSON string but got `%s`", jsonObj.get("buyer_city").toString()));
      }
      if ((jsonObj.get("buyer_state_province") != null && !jsonObj.get("buyer_state_province").isJsonNull()) && !jsonObj.get("buyer_state_province").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `buyer_state_province` to be a primitive type in the JSON string but got `%s`", jsonObj.get("buyer_state_province").toString()));
      }
      if (!jsonObj.get("buyer_country").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `buyer_country` to be a primitive type in the JSON string but got `%s`", jsonObj.get("buyer_country").toString()));
      }
      // validate the required field `buyer_address`
      AddressSummary.validateJsonObject(jsonObj.getAsJsonObject("buyer_address"));
      if (!jsonObj.get("receiver_name").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `receiver_name` to be a primitive type in the JSON string but got `%s`", jsonObj.get("receiver_name").toString()));
      }
      if (!jsonObj.get("receiver_contact").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `receiver_contact` to be a primitive type in the JSON string but got `%s`", jsonObj.get("receiver_contact").toString()));
      }
      if (!jsonObj.get("receiver_addressLineOne").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `receiver_addressLineOne` to be a primitive type in the JSON string but got `%s`", jsonObj.get("receiver_addressLineOne").toString()));
      }
      if (!jsonObj.get("receiver_postalCode").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `receiver_postalCode` to be a primitive type in the JSON string but got `%s`", jsonObj.get("receiver_postalCode").toString()));
      }
      if (!jsonObj.get("receiver_city").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `receiver_city` to be a primitive type in the JSON string but got `%s`", jsonObj.get("receiver_city").toString()));
      }
      if ((jsonObj.get("receiver_state_province") != null && !jsonObj.get("receiver_state_province").isJsonNull()) && !jsonObj.get("receiver_state_province").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `receiver_state_province` to be a primitive type in the JSON string but got `%s`", jsonObj.get("receiver_state_province").toString()));
      }
      if (!jsonObj.get("receiver_country").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `receiver_country` to be a primitive type in the JSON string but got `%s`", jsonObj.get("receiver_country").toString()));
      }
      // validate the required field `receiver_address`
      AddressSummary.validateJsonObject(jsonObj.getAsJsonObject("receiver_address"));
      // validate the required field `pref_vendor`
      VendorRead.validateJsonObject(jsonObj.getAsJsonObject("pref_vendor"));
      if (!jsonObj.get("vendor_name").isJsonNull() && (jsonObj.get("vendor_name") != null && !jsonObj.get("vendor_name").isJsonNull()) && !jsonObj.get("vendor_name").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `vendor_name` to be a primitive type in the JSON string but got `%s`", jsonObj.get("vendor_name").toString()));
      }
      if (!jsonObj.get("vendor_contact").isJsonNull() && (jsonObj.get("vendor_contact") != null && !jsonObj.get("vendor_contact").isJsonNull()) && !jsonObj.get("vendor_contact").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `vendor_contact` to be a primitive type in the JSON string but got `%s`", jsonObj.get("vendor_contact").toString()));
      }
      if (!jsonObj.get("vendor_addressLineOne").isJsonNull() && (jsonObj.get("vendor_addressLineOne") != null && !jsonObj.get("vendor_addressLineOne").isJsonNull()) && !jsonObj.get("vendor_addressLineOne").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `vendor_addressLineOne` to be a primitive type in the JSON string but got `%s`", jsonObj.get("vendor_addressLineOne").toString()));
      }
      if (!jsonObj.get("vendor_postalCode").isJsonNull() && (jsonObj.get("vendor_postalCode") != null && !jsonObj.get("vendor_postalCode").isJsonNull()) && !jsonObj.get("vendor_postalCode").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `vendor_postalCode` to be a primitive type in the JSON string but got `%s`", jsonObj.get("vendor_postalCode").toString()));
      }
      if (!jsonObj.get("vendor_city").isJsonNull() && (jsonObj.get("vendor_city") != null && !jsonObj.get("vendor_city").isJsonNull()) && !jsonObj.get("vendor_city").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `vendor_city` to be a primitive type in the JSON string but got `%s`", jsonObj.get("vendor_city").toString()));
      }
      if (!jsonObj.get("vendor_state_province").isJsonNull() && (jsonObj.get("vendor_state_province") != null && !jsonObj.get("vendor_state_province").isJsonNull()) && !jsonObj.get("vendor_state_province").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `vendor_state_province` to be a primitive type in the JSON string but got `%s`", jsonObj.get("vendor_state_province").toString()));
      }
      if (!jsonObj.get("vendor_country").isJsonNull() && (jsonObj.get("vendor_country") != null && !jsonObj.get("vendor_country").isJsonNull()) && !jsonObj.get("vendor_country").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `vendor_country` to be a primitive type in the JSON string but got `%s`", jsonObj.get("vendor_country").toString()));
      }
      if (!jsonObj.get("payment_terms").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `payment_terms` to be a primitive type in the JSON string but got `%s`", jsonObj.get("payment_terms").toString()));
      }
      if (!jsonObj.get("shipping_terms").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `shipping_terms` to be a primitive type in the JSON string but got `%s`", jsonObj.get("shipping_terms").toString()));
      }
      // validate the required field `shipping_method`
      ShippingMethod.validateJsonObject(jsonObj.getAsJsonObject("shipping_method"));
      if (!jsonObj.get("subtotal").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `subtotal` to be a primitive type in the JSON string but got `%s`", jsonObj.get("subtotal").toString()));
      }
      if (!jsonObj.get("freight").isJsonNull() && (jsonObj.get("freight") != null && !jsonObj.get("freight").isJsonNull()) && !jsonObj.get("freight").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `freight` to be a primitive type in the JSON string but got `%s`", jsonObj.get("freight").toString()));
      }
      // validate the optional field `tax`
      if (jsonObj.get("tax") != null && !jsonObj.get("tax").isJsonNull()) {
        PriceModifierDocs.validateJsonObject(jsonObj.getAsJsonObject("tax"));
      }
      // validate the optional field `discount`
      if (jsonObj.get("discount") != null && !jsonObj.get("discount").isJsonNull()) {
        PriceModifierDocs.validateJsonObject(jsonObj.getAsJsonObject("discount"));
      }
      if (!jsonObj.get("other").isJsonNull() && (jsonObj.get("other") != null && !jsonObj.get("other").isJsonNull()) && !jsonObj.get("other").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `other` to be a primitive type in the JSON string but got `%s`", jsonObj.get("other").toString()));
      }
      if (!jsonObj.get("total").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `total` to be a primitive type in the JSON string but got `%s`", jsonObj.get("total").toString()));
      }
      if (!jsonObj.get("comment").isJsonNull() && (jsonObj.get("comment") != null && !jsonObj.get("comment").isJsonNull()) && !jsonObj.get("comment").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `comment` to be a primitive type in the JSON string but got `%s`", jsonObj.get("comment").toString()));
      }
      // validate the required field `purchased_currency`
      CurrencySummary.validateJsonObject(jsonObj.getAsJsonObject("purchased_currency"));
      if (!jsonObj.get("purchased_currency_rate").isJsonNull() && (jsonObj.get("purchased_currency_rate") != null && !jsonObj.get("purchased_currency_rate").isJsonNull()) && !jsonObj.get("purchased_currency_rate").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `purchased_currency_rate` to be a primitive type in the JSON string but got `%s`", jsonObj.get("purchased_currency_rate").toString()));
      }
      if (!jsonObj.get("disclaimer_description").isJsonNull() && (jsonObj.get("disclaimer_description") != null && !jsonObj.get("disclaimer_description").isJsonNull()) && !jsonObj.get("disclaimer_description").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `disclaimer_description` to be a primitive type in the JSON string but got `%s`", jsonObj.get("disclaimer_description").toString()));
      }
      if (!jsonObj.get("disclaimer_text").isJsonNull() && (jsonObj.get("disclaimer_text") != null && !jsonObj.get("disclaimer_text").isJsonNull()) && !jsonObj.get("disclaimer_text").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `disclaimer_text` to be a primitive type in the JSON string but got `%s`", jsonObj.get("disclaimer_text").toString()));
      }
      if (!jsonObj.get("punchout_supplier_icon").isJsonNull() && (jsonObj.get("punchout_supplier_icon") != null && !jsonObj.get("punchout_supplier_icon").isJsonNull()) && !jsonObj.get("punchout_supplier_icon").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `punchout_supplier_icon` to be a primitive type in the JSON string but got `%s`", jsonObj.get("punchout_supplier_icon").toString()));
      }
      if (!jsonObj.get("punchout_supplier_name").isJsonNull() && (jsonObj.get("punchout_supplier_name") != null && !jsonObj.get("punchout_supplier_name").isJsonNull()) && !jsonObj.get("punchout_supplier_name").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `punchout_supplier_name` to be a primitive type in the JSON string but got `%s`", jsonObj.get("punchout_supplier_name").toString()));
      }
      // validate the required field `contract`
      PurchaseOrderContract.validateJsonObject(jsonObj.getAsJsonObject("contract"));
      // ensure the json data is an array
      if (!jsonObj.get("order_items").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `order_items` to be an array in the JSON string but got `%s`", jsonObj.get("order_items").toString()));
      }

      JsonArray jsonArrayorderItems = jsonObj.getAsJsonArray("order_items");
      // validate the required field `order_items` (array)
      for (int i = 0; i < jsonArrayorderItems.size(); i++) {
        PurchaseOrderLineItemRead.validateJsonObject(jsonArrayorderItems.get(i).getAsJsonObject());
      };
      if (jsonObj.get("custom_fields") != null && !jsonObj.get("custom_fields").isJsonNull()) {
        JsonArray jsonArraycustomFields = jsonObj.getAsJsonArray("custom_fields");
        if (jsonArraycustomFields != null) {
          // ensure the json data is an array
          if (!jsonObj.get("custom_fields").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `custom_fields` to be an array in the JSON string but got `%s`", jsonObj.get("custom_fields").toString()));
          }

          // validate the optional field `custom_fields` (array)
          for (int i = 0; i < jsonArraycustomFields.size(); i++) {
            CustomFieldValueRead.validateJsonObject(jsonArraycustomFields.get(i).getAsJsonObject());
          };
        }
      }
      // validate the required field `creditcard`
      CreditCardReadNullable.validateJsonObject(jsonObj.getAsJsonObject("creditcard"));
      // validate the required field `payment_term`
      PaymentTerm.validateJsonObject(jsonObj.getAsJsonObject("payment_term"));
      // validate the required field `shipping_term`
      ShippingTerm.validateJsonObject(jsonObj.getAsJsonObject("shipping_term"));
      // validate the optional field `cost_details`
      if (jsonObj.get("cost_details") != null && !jsonObj.get("cost_details").isJsonNull()) {
        CostDetailsNullable.validateJsonObject(jsonObj.getAsJsonObject("cost_details"));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!PurchaseOrderDetail.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'PurchaseOrderDetail' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<PurchaseOrderDetail> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(PurchaseOrderDetail.class));

       return (TypeAdapter<T>) new TypeAdapter<PurchaseOrderDetail>() {
           @Override
           public void write(JsonWriter out, PurchaseOrderDetail value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             obj.remove("additionalProperties");
             // serialize additonal properties
             if (value.getAdditionalProperties() != null) {
               for (Map.Entry<String, Object> entry : value.getAdditionalProperties().entrySet()) {
                 if (entry.getValue() instanceof String)
                   obj.addProperty(entry.getKey(), (String) entry.getValue());
                 else if (entry.getValue() instanceof Number)
                   obj.addProperty(entry.getKey(), (Number) entry.getValue());
                 else if (entry.getValue() instanceof Boolean)
                   obj.addProperty(entry.getKey(), (Boolean) entry.getValue());
                 else if (entry.getValue() instanceof Character)
                   obj.addProperty(entry.getKey(), (Character) entry.getValue());
                 else {
                   obj.add(entry.getKey(), gson.toJsonTree(entry.getValue()).getAsJsonObject());
                 }
               }
             }
             elementAdapter.write(out, obj);
           }

           @Override
           public PurchaseOrderDetail read(JsonReader in) throws IOException {
             JsonObject jsonObj = elementAdapter.read(in).getAsJsonObject();
             validateJsonObject(jsonObj);
             // store additional fields in the deserialized instance
             PurchaseOrderDetail instance = thisAdapter.fromJsonTree(jsonObj);
             for (Map.Entry<String, JsonElement> entry : jsonObj.entrySet()) {
               if (!openapiFields.contains(entry.getKey())) {
                 if (entry.getValue().isJsonPrimitive()) { // primitive type
                   if (entry.getValue().getAsJsonPrimitive().isString())
                     instance.putAdditionalProperty(entry.getKey(), entry.getValue().getAsString());
                   else if (entry.getValue().getAsJsonPrimitive().isNumber())
                     instance.putAdditionalProperty(entry.getKey(), entry.getValue().getAsNumber());
                   else if (entry.getValue().getAsJsonPrimitive().isBoolean())
                     instance.putAdditionalProperty(entry.getKey(), entry.getValue().getAsBoolean());
                   else
                     throw new IllegalArgumentException(String.format("The field `%s` has unknown primitive type. Value: %s", entry.getKey(), entry.getValue().toString()));
                 } else if (entry.getValue().isJsonArray()) {
                     instance.putAdditionalProperty(entry.getKey(), gson.fromJson(entry.getValue(), List.class));
                 } else { // JSON object
                     instance.putAdditionalProperty(entry.getKey(), gson.fromJson(entry.getValue(), HashMap.class));
                 }
               }
             }
             return instance;
           }

       }.nullSafe();
    }
  }

 /**
  * Create an instance of PurchaseOrderDetail given an JSON string
  *
  * @param jsonString JSON string
  * @return An instance of PurchaseOrderDetail
  * @throws IOException if the JSON string is invalid with respect to PurchaseOrderDetail
  */
  public static PurchaseOrderDetail fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, PurchaseOrderDetail.class);
  }

 /**
  * Convert an instance of PurchaseOrderDetail to an JSON string
  *
  * @return JSON string
  */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

